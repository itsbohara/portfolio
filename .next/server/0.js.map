{"version":3,"file":"0.js","sources":["webpack:///./components/ExpandedVideo/ExpandedVideo.module.css","webpack:///./components/ExpandedVideo/ExpandedVideo.tsx","webpack:///./components/Item/Item.module.css","webpack:///./components/Item/Item.tsx"],"sourcesContent":["module.exports = {\n\t\"Main\": \"Main___3w2yc\",\n\t\"mount\": \"mount___2v3RS\",\n\t\"fadein\": \"fadein___1ZLib\",\n\t\"unmount\": \"unmount___3mvc-\",\n\t\"Backdrop\": \"Backdrop___3B7tu\",\n\t\"VideoContainer\": \"VideoContainer___2gnni\",\n\t\"Video\": \"Video___QoA7X\",\n\t\"CloseButton\": \"CloseButton____MALA\"\n};","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../icons/icons'\r\n\r\nconst css = require('./ExpandedVideo.module.css')\r\n\r\ninterface IExpandedVideo {\r\n    video_src: string\r\n    close: () => void\r\n}\r\n\r\nconst ExpandedVideo: React.FunctionComponent<IExpandedVideo> = ({ video_src, close }): JSX.Element => {\r\n    const[unmount, setUnmount] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener('keydown', keyHandler, true)\r\n\r\n        return () => window.removeEventListener('keydown', keyHandler, true)\r\n    }, [])\r\n\r\n    React.useLayoutEffect(() => {\r\n        // Get original body overflow\r\n        const originalStyle: string = window.getComputedStyle(document.body).overflow!  \r\n        // Prevent scrolling on mount\r\n        document.body.style.overflow = 'hidden'\r\n        // Re-enable scrolling when component unmounts\r\n        return () => { document.body.style.overflow = originalStyle }\r\n    }, []) // Empty array ensures effect is only run on mount and unmount\r\n\r\n    const keyHandler = React.useCallback((event: KeyboardEvent) => {\r\n        console.log(event.key)\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                setUnmount(true)\r\n                setTimeout(() => {\r\n                    close()\r\n                }, 5000)\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }, [])\r\n\r\n    const closeHandler = React.useCallback(() => {\r\n        setUnmount(true)\r\n        setTimeout(() => {\r\n            close()\r\n        }, 300)\r\n    }, [close])\r\n\r\n    const classes = [\r\n        css.Main,\r\n        unmount ? css.unmount : css.mount,\r\n    ].join(' ')\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <div className={css.Backdrop} onClick={closeHandler}></div>\r\n            <div className={css.VideoContainer}>\r\n                <video className={css.Video} controls >\r\n                    <source src={video_src} type=\"video/mp4\"/>\r\n                </video>\r\n            </div>\r\n            <div className={css.CloseButton} onClick={closeHandler}>\r\n                <FontAwesomeIcon icon={icons.faTimes} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpandedVideo","module.exports = {\n\t\"Item\": \"Item___2z7E8\",\n\t\"show\": \"show___6kfVr\",\n\t\"Title\": \"Title___3ZaYJ\",\n\t\"ItemContent\": \"ItemContent___3R0xe\",\n\t\"InfoContainer\": \"InfoContainer___2K1Jf\",\n\t\"MadeWith\": \"MadeWith___2_0_d\",\n\t\"Language\": \"Language___3j4M0\",\n\t\"Description\": \"Description___3jL8P\",\n\t\"IconsAndLinks\": \"IconsAndLinks___3W2-o\",\n\t\"HardwareIcons\": \"HardwareIcons___1Zo3h\",\n\t\"HardwareIconContainer\": \"HardwareIconContainer___2Svmz\",\n\t\"HardwareIcon\": \"HardwareIcon___7oC72\",\n\t\"DesktopIcon\": \"DesktopIcon___1I-OD\",\n\t\"MobileIcon\": \"MobileIcon___2Qx5_\",\n\t\"CheckMarkIcon\": \"CheckMarkIcon___11WPT\",\n\t\"TimesIcon\": \"TimesIcon___gPzyh\",\n\t\"ItemLinks\": \"ItemLinks___316VE\",\n\t\"ItemLinkContainer\": \"ItemLinkContainer___3gKyx\",\n\t\"ItemLink\": \"ItemLink___zvdwb\",\n\t\"ItemLinkIcon\": \"ItemLinkIcon___2pksG\",\n\t\"ImageContainer\": \"ImageContainer___3ZHP8\",\n\t\"ImageMask\": \"ImageMask___ZcxR5\",\n\t\"MaskLinks\": \"MaskLinks___3b_RG\",\n\t\"MaskLink\": \"MaskLink___2Z_QC\",\n\t\"MaskLinkText\": \"MaskLinkText___V2BhR\",\n\t\"MaskLinkIcon\": \"MaskLinkIcon___1xuTX\",\n\t\"ExpandVideo\": \"ExpandVideo___2-0ff\"\n};","import React from 'react'\r\nimport { IPortfolioItem } from '../../interfaces/interfaces'\r\nimport { icons } from '../../icons/icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ExpandedVideo from '../ExpandedVideo/ExpandedVideo'\r\n\r\nconst css = require('./Item.module.css')\r\n\r\nconst SHOW_TRESHOLD = 300 // pixels\r\n\r\nconst Item: React.FunctionComponent<IPortfolioItem> = (props): JSX.Element => {\r\n  const[showItem, toggleShowItem] = React.useState(false)\r\n  const[showVideo, toggleShowVideo] = React.useState(false)\r\n  const itemRef = React.useRef<HTMLDivElement>(null)\r\n  \r\n  // update the event listeners every time the showItem state is changed\r\n  React.useEffect(() => {\r\n    window.addEventListener('scroll', checkIfInViewport, true)\r\n  \r\n    return () => window.removeEventListener('scroll', checkIfInViewport, true)  \r\n  }, [showItem])\r\n  \r\n  const checkIfInViewport = () => {\r\n    const itemPos: number = itemRef.current!.getBoundingClientRect().top\r\n    const windowHeight: number = window.innerHeight\r\n\r\n    if (itemPos + SHOW_TRESHOLD < windowHeight) {\r\n      toggleShowItem(true)\r\n    } else if (showItem) {\r\n      toggleShowItem(false)\r\n    }\r\n  }\r\n\r\n  const itemClasses = [\r\n    css.Item, \r\n    showItem ? css.show : null\r\n  ].join(' ')\r\n  \r\n  return (\r\n    <div className={itemClasses} ref={itemRef} >\r\n      <p className={css.Title}><span>{props.title}</span></p>\r\n      <div className={css.ItemContent}>\r\n        <ItemImage video_src={props.video_src}\r\n          gif_src={props.gif_src} \r\n          link={props.link} \r\n          githubLink={props.githubLink}\r\n          toggle={toggleShowVideo} />\r\n        <ItemInfo languages={props.language}\r\n          title={props.title}\r\n          desc={props.description}\r\n          desktop={props.desktop}\r\n          mobile={props.mobile}\r\n          link={props.link}\r\n          githubLink={props.githubLink} />\r\n      </div>\r\n      {showVideo && <ExpandedVideo video_src={props.video_src} close={() => toggleShowVideo(false)} />}\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface IItemInfo {\r\n  languages: string[]\r\n  title: string\r\n  desc: string\r\n  desktop: boolean\r\n  mobile: boolean\r\n  link: string\r\n  githubLink: string\r\n}\r\n\r\nconst ItemInfo: React.FunctionComponent<IItemInfo> = (props): JSX.Element => {\r\n  return (\r\n    <div className={css.InfoContainer}>\r\n      <div className={css.MadeWith}>\r\n        made with\r\n        {props.languages.map((lang: string, index: number) => (\r\n          <p key={lang} className={css.Language}>\r\n            {lang}\r\n            {index !== props.languages.length - 1 ? <span style={{color: 'dimgray'}}> + </span> : ''}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <p className={css.Description}>\r\n        {props.desc}\r\n      </p>\r\n      <div className={css.IconsAndLinks}>\r\n        <div className={css.ItemLinks}>\r\n          <a className={css.ItemLinkContainer} href={props.githubLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <p className={css.ItemLink}>Github</p>\r\n            <div className={css.ItemLinkIcon}>\r\n              <FontAwesomeIcon icon={icons.faGithub} />\r\n            </div>\r\n          </a>\r\n          <a className={css.ItemLinkContainer} href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <p className={css.ItemLink}>Open</p>\r\n            <div className={css.ItemLinkIcon}>\r\n              <FontAwesomeIcon icon={icons.faExternalLinkSquareAlt} />\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <HardwareIcons desktop={props.desktop} mobile={props.mobile} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface IHardwareICons {\r\n  desktop: boolean\r\n  mobile: boolean\r\n}\r\n\r\nconst HardwareIcons: React.FunctionComponent<IHardwareICons> = ({Â desktop, mobile }): JSX.Element => (\r\n  <div className={css.HardwareIcons}>\r\n    <div className={css.HardwareIconContainer}>\r\n      <div className={[css.HardwareIcon, css.DesktopIcon].join(' ')}>\r\n        <FontAwesomeIcon icon={icons.faDesktop} />\r\n      </div>\r\n      {desktop ?\r\n        <CheckMarkIcon /> : <TimesIcon />\r\n      }\r\n    </div>\r\n    <div className={css.HardwareIconContainer}>\r\n      <div className={[css.HardwareIcon, css.MobileIcon].join(' ')}>\r\n        <FontAwesomeIcon icon={icons.faMobileAlt} />\r\n      </div>\r\n      {mobile ? \r\n        <CheckMarkIcon /> : <TimesIcon />\r\n      }\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst CheckMarkIcon: React.FunctionComponent = (): JSX.Element => (\r\n  <div className={[css.HardwareIcon, css.CheckMarkIcon].join(' ')}>\r\n    <FontAwesomeIcon icon={icons.faCheck} color=\"green\" />\r\n  </div>\r\n)\r\n\r\nconst TimesIcon: React.FunctionComponent = (): JSX.Element => (\r\n  <div className={[css.HardwareIcon, css.TimesIcon].join(' ')}>\r\n    <FontAwesomeIcon icon={icons.faTimes} color=\"crimson\" />\r\n  </div>\r\n)\r\n\r\ninterface IImage {\r\n  video_src: string\r\n  gif_src: string\r\n  link: string\r\n  githubLink: string\r\n  toggle: (newValue: boolean) => void\r\n}\r\n\r\nconst ItemImage: React.FunctionComponent<IImage> = (props): JSX.Element => {\r\n  return (\r\n    <div className={css.ImageContainer}>\r\n      <img className={css.Image} src={props.gif_src} alt='portfolio-img'/>\r\n      <div className={css.ImageMask}>\r\n        <div className={css.MaskLinks}>\r\n          {/* <MaskLink address={props.link} text=\"Open\" icon={\"link\"} />\r\n          <MaskLink address={props.githubLink} text=\"Github\" icon={\"github\"} /> */}\r\n          <ExpandVideo toggle={props.toggle}  />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface IExpandVideo {\r\n  toggle: (newValue: boolean) => void\r\n}\r\n\r\nconst ExpandVideo: React.FunctionComponent<IExpandVideo> = ({ toggle }): JSX.Element => {\r\n \r\n  const classes = [\r\n    css.ExpandVideo\r\n  ].join(' ')\r\n\r\n  return (\r\n    <>\r\n      <div className={classes} onClick={() => toggle(true)}>\r\n        <p>Expand Video</p>\r\n        <FontAwesomeIcon icon={icons.faExpand} color='white' />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\ninterface IMaskLink {\r\n  address: string\r\n  text: string\r\n  icon: string\r\n}\r\n\r\nconst MaskLink: React.FunctionComponent<IMaskLink> = ({ address, text }): JSX.Element => {\r\n  return (\r\n      <a href={address} className={css.MaskLink} target='_blank' rel=\"noopener noreferrer\">\r\n          <div className={css.MaskLinkText}>\r\n              <span>{text}</span>\r\n          </div>\r\n      </a>\r\n  )\r\n}\r\n\r\nexport default Item"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAGA;AACA;AAWA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AAKA;AAAA;AAAA;AAEA;AAIA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}