{"version":3,"file":"static/webpack/static\\development\\pages\\admin.js.fcdfdac204ecf4a8a493.hot-update.js","sources":["webpack:///./pages/admin/index.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport { NextPage } from 'next'\r\nimport { faEnvelope, faEnvelopeOpen, faUnlock, faLock } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst css = require('./index.module.css')\r\n\r\nconst AdminPage: NextPage = (): JSX.Element => {\r\n    const [isSignedIn, setIsSignedIn] = React.useState<boolean>(false)\r\n\r\n    const signInHandler = (email: string, password: string) =>  {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main}>\r\n            { !isSignedIn && <AuthForm signIn={signInHandler} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IAuthForm {\r\n    signIn: (email: string, password: string) => void\r\n}\r\n\r\ninterface IFormElement {\r\n    elementType: string\r\n    inputType: string\r\n    placeholder?: string\r\n    require?: boolean\r\n    value?: string\r\n    className?: string\r\n    icon? : { focus?: any, unfocus?: any }\r\n}\r\n\r\ninterface IFormState {\r\n    [email: string]: IFormElement\r\n    password: IFormElement\r\n    submit: IFormElement\r\n}\r\n\r\nconst initialAuthFormState: IFormState = {\r\n    email: {\r\n        elementType: 'input',\r\n        inputType: 'email',\r\n        placeholder: 'email',\r\n        require: true,\r\n        value: '',\r\n        className: css.EmailInput,\r\n        icon: { focus: faEnvelopeOpen, unfocus: faEnvelope }\r\n    },\r\n    password: {\r\n        elementType: 'input',\r\n        inputType: 'password',\r\n        placeholder: 'password',\r\n        require: true,\r\n        value: '',\r\n        className: css.PasswordInput,\r\n        icon: { focus: faUnlock, unfocus: faLock }\r\n    },\r\n    submit: {\r\n        elementType: 'input',\r\n        inputType: 'submit',\r\n        value: 'Sign In',\r\n        className: css.SubmitButton\r\n    },\r\n}\r\n   \r\n\r\n\r\nconst AuthForm: React.FunctionComponent<IAuthForm> = ({ signIn }): JSX.Element => {\r\n    const [formState, setFormState] = React.useState<IFormState>(initialAuthFormState)\r\n\r\n    const changeHandler = (elemKey: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={css.AuthFormContainer}>\r\n            <h2 className={css.FormTitle}>Sign In</h2>\r\n            <form className={css.AuthForm}>\r\n                { Object.keys(formState).map((elementKey: string) => {\r\n                    const element: IFormElement = formState[elementKey]\r\n                    return (\r\n                        <input className={element.className} \r\n                            placeholder={element.placeholder}\r\n                            value={element.value} \r\n                            type={element.inputType}\r\n                            onChange={(e) => changeHandler(elementKey, e)} /> \r\n                    )\r\n                })}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAPA;AASA;AACA;AACA;AACA;AACA;AAJA;AAnBA;AACA;AA4BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAMA;AAIA;AACA;AACA;;;;A","sourceRoot":""}