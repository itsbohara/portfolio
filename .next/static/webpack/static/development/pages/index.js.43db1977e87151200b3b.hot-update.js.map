{"version":3,"file":"static/webpack/static/development/pages/index.js.43db1977e87151200b3b.hot-update.js","sources":["webpack:///./components/Cover/Cover.tsx"],"sourcesContent":["import React from 'react'\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\nimport { IToolbar, ToolbarContext } from '../../context/toolbarContext'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { icons } from '../../icons/icons'\n\nconst css = require('./Cover.css')\n\nconst Cover = React.memo((): JSX.Element => {\n    const toolbarContext: IToolbar = React.useContext(ToolbarContext)\n    const coverRef = React.useRef<HTMLDivElement>(null)\n    const windowHeight = React.useRef<number | undefined>(undefined)\n\n    console.log(windowHeight)\n\n    React.useEffect(() => {\n        windowHeight.current = window.innerHeight\n\n        window.addEventListener('scroll', scrollHandler, true)\n\n        return () => window.removeEventListener('scroll', scrollHandler, true)\n    }, [])\n\n    const scrollHandler = () => {\n\n    }\n\n    const scrollToPortfolio = React.useCallback(() => {\n        if (coverRef && coverRef.current) {\n            const posToScrollTo: number = coverRef.current.clientHeight\n    \n            window.scrollTo({\n                top: posToScrollTo,\n                left: 0,\n                behavior: \"smooth\",\n            })\n        }\n    }, [coverRef])\n\n    const[arrowIn, setArrowIn] = React.useState<boolean | undefined>(undefined)\n\n    const arrowTextClasses = [\n        css.ArrowText,\n        arrowIn ? css.in : arrowIn === false ? css.out : null\n    ].join(' ')\n\n    const transitionHandler = () => {\n        if (arrowIn === false) {\n            setArrowIn(undefined)\n        }\n    }\n\n    const hoverHandler = () => {\n        setArrowIn(true)\n        // if (arrowIn === undefined) {\n        //     setArrowIn(true)\n        // }\n    }\n\n    const mouseOutHandler = () => {\n        setArrowIn(false)\n        // if (arrowIn) {\n        //     setArrowIn(false)\n        // }\n    }\n\n    return (\n        <div className={css.Main} ref={coverRef}>\n            <div className={css.Parallax}>\n            </div>\n            <div className={css.MediaIcons}>\n                <MediaIcons vertical />\n            </div>\n            <div className={css.TitleContainer}>\n                <span className={css.FirstName}>Joona</span>\n                <span className={css.Surname}>Joenpolvi</span>\n                <span className={css.Description}>Front-End Developer</span>\n            </div>\n            <div className={css.ArrowContainer} >\n                <div className={css.ArrowIcon}\n                    onClick={scrollToPortfolio}\n                    onMouseOver={hoverHandler}\n                    onMouseOut={mouseOutHandler}> \n                    <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\n                </div>\n                <p className={arrowTextClasses} onTransitionEnd={transitionHandler}>to portfolio</p>\n            </div>\n        </div>\n    )\n})\n\nexport default Cover"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AA9BA;AAAA;AAAA;AAAA;AACA;AAgCA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;A","sourceRoot":""}