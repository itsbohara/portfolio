{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.7f319a5fe9e005f4020f.hot-update.js","sources":["webpack:///./components/Cover/Cover.tsx"],"sourcesContent":["import React from 'react'\nimport zenscroll from 'zenscroll'\n\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\nimport { IToolbar, ToolbarContext } from '../../context/toolbarContext'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { icons } from '../../icons/icons'\n\nconst css = require('./Cover.module.css')\n\nconst Cover = React.memo((): JSX.Element => {\n    const toolbarContext: IToolbar = React.useContext(ToolbarContext)\n    const coverRef = React.useRef<HTMLDivElement>(null)\n    const[height, setHeight] = React.useState<number | undefined>(undefined)\n    \n    React.useEffect(() => {\n        setHeight(window.innerHeight)\n\n        window.addEventListener('scroll', scrollHandler, true)\n\n        return () => window.removeEventListener('scroll', scrollHandler, true)\n    }, [])\n\n    const scrollHandler = () => {\n\n    }\n\n    const scrollToPortfolio = React.useCallback(() => {\n        if (coverRef && coverRef.current) {\n            const posToScrollTo: number = coverRef.current.clientHeight\n    \n            zenscroll.toY(posToScrollTo)\n        }\n    }, [coverRef])\n\n    const[arrowIn, setArrowIn] = React.useState<boolean>(false)\n    const[arrowInAnim, setArrowInAnim] = React.useState<boolean>(false)\n\n    const arrowTextClasses = [\n        css.ArrowText,\n        arrowInAnim ? arrowIn ? css.in : css.out : undefined\n    ].join(' ')\n\n    const transitionHandler = () => {\n       setArrowInAnim(false)\n       setArrowIn(false)\n    }\n\n    const hoverHandler = (mouseIn: boolean) => {\n        if (!arrowInAnim) {\n\n        }\n        setArrowIn(mouseIn)\n        // if (arrowIn === undefined) {\n        //     setArrowIn(true)\n        // }\n    }\n\n    return (\n        <div className={css.Main} ref={coverRef} style={{height: `${height}px`}}>\n            <div className={css.BackgroundContainer}>\n                {/* <img src=\"/images/palm.png\" alt=\"cover-bg-palm\" className={css.BackgroundImage} style={{minHeight: `${height}px`}} /> */}\n                <div className={css.BackgroundMask} />\n            </div>\n            <div className={css.MediaIcons}>\n                <MediaIcons vertical />\n            </div>\n            <div className={css.TitleContainer}>\n                <h1 className={css.FirstName}>Joona</h1>\n                <h1 className={css.Surname}>Joenpolvi</h1>\n                <h3 className={css.Description}> {\"<Front End Developer />\"} </h3>\n            </div>\n            <div className={css.ArrowContainer} >\n                <div className={css.ArrowIcon}\n                    onClick={scrollToPortfolio}\n                    onMouseOver={() => hoverHandler(true)}\n                    onMouseOut={() => hoverHandler(false)}> \n                    <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\n                </div>\n                <p className={arrowTextClasses} onTransitionEnd={transitionHandler}>to portfolio</p>\n            </div>\n        </div>\n    )\n})\n\nexport default Cover"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAxBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA2BA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAEA;;;;A","sourceRoot":""}