{"version":3,"file":"static/webpack/static/development/pages/index.js.5ab7d144a9b672428071.hot-update.js","sources":["webpack:///./components/Item/Item.tsx"],"sourcesContent":["import React from 'react'\nimport { IPortfolioItem } from '../../interfaces/interfaces'\n\nconst css = require('./Item.module.css')\n\nconst SHOW_TRESHOLD = 1000\n\nexport default function Item(props: IPortfolioItem) {\n  const[showItem, toggleShowItem] = React.useState(false)\n  const[showInfo, toggleShowInfo] = React.useState(false)\n  const itemRef = React.useRef<HTMLDivElement>(null)\n  const infoRef = React.useRef<HTMLDivElement>(null)\n\n  // update the event listeners every time the showItem state is changed\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true)\n  \n    return () => window.removeEventListener('scroll', checkIfInViewport, true)  \n  }, [showItem])\n\n  const checkIfInViewport = () => {\n    const bottom = itemRef.current!.getBoundingClientRect().bottom\n    if (bottom < SHOW_TRESHOLD) {\n      toggleShowItem(true)\n    } else {\n      toggleShowItem(false)\n    }\n  }\n\n  const expand = () => {\n    toggleShowInfo(!showInfo)\n  }\n\n  let itemClasses = [\n    css.Item, \n    showInfo ? css.open : null,\n    showItem ? css.show : null\n  ].join(' ')\n  \n  return (\n    <div className={itemClasses} ref={itemRef} >\n      <ItemTitle title={props.title} />\n      <ItemImage gif_src={props.gif_src} \n        title={props.title} \n        link={props.link} \n        githubLink={props.githubLink} />\n    </div>\n  )\n}\n\ninterface ITitle {\n  title: string\n}\n\nfunction ItemTitle(props: ITitle) {\n  return (\n    <p className={css.Title}><span>{props.title}</span></p>\n  )\n}\n\ninterface IImage {\n  gif_src: string\n  title: string\n  link: string\n  githubLink: string\n}\n\nfunction ItemImage(props: IImage) {\n  return (\n    <div className={css.ImageContainer}>\n      <img className={css.Image} src={props.gif_src} alt='portfolio-img'/>\n      <div className={css.ImageMask}>\n        <h1 className={css.MaskTitle}>{props.title}</h1>\n        <div className={css.MaskLinks}>\n          <MaskLink address={props.link} text=\"Open\" icon=\"fas fa-external-link-square-alt\" />\n          <MaskLink address={props.githubLink} text=\"Github\" icon=\"fab fa-github\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface IMaskLink {\n  address: string\n  text: string\n  icon: string\n}\n\nconst MaskLink = (props: IMaskLink): JSX.Element => {\n  return (\n      <a href={props.address} className={css.MaskLink} target='_blank' rel=\"noopener noreferrer\">\n          <div className={css.MaskLinkText}>\n              <span>{props.text}</span>\n          </div>\n          <div className={css.MaskLinkIcon}>\n              <i className={props.icon}></i>\n          </div>\n      </a>\n  )\n}"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}