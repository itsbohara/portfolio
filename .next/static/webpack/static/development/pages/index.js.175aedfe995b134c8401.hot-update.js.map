{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.175aedfe995b134c8401.hot-update.js","sources":["webpack:///./components/Cover/Cover.tsx"],"sourcesContent":["import React from 'react'\r\nimport zenscroll from 'zenscroll'\r\n\r\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\r\nimport { IToolbar, ToolbarContext } from '../../context/toolbarContext'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../icons/icons'\r\n\r\nconst css = require('./Cover.module.css')\r\n\r\nconst Cover = React.memo((): JSX.Element => {\r\n    const coverRef = React.useRef<HTMLDivElement>(null)\r\n    const[height, setHeight] = React.useState<number | undefined>(undefined)\r\n    \r\n    React.useEffect(() => {\r\n        setHeight(window.innerHeight)\r\n\r\n        window.addEventListener('scroll', scrollHandler, true)\r\n\r\n        return () => window.removeEventListener('scroll', scrollHandler, true)\r\n    }, [])\r\n\r\n    const scrollHandler = () => {\r\n\r\n    }\r\n\r\n    const scrollToPortfolio = React.useCallback(() => {\r\n        if (coverRef && coverRef.current) {\r\n            const posToScrollTo: number = coverRef.current.clientHeight\r\n    \r\n            zenscroll.toY(posToScrollTo)\r\n        }\r\n    }, [coverRef])\r\n\r\n    const mouseInRef = React.useRef<boolean>(false)\r\n    const mouseOutRef = React.useRef<boolean>(false)\r\n    const animInProgressRef = React.useRef<boolean>(false)\r\n\r\n    const arrowTextClasses = [\r\n        css.ArrowText,\r\n    ].join(' ')\r\n\r\n    console.log(mouseInRef.current)\r\n\r\n    const transitionHandler = () => {\r\n        if (mouseOutRef.current && animInProgressRef.current) {\r\n\r\n        }\r\n    }\r\n\r\n    const hoverHandler = (mouseIn: boolean) => {\r\n        if (!mouseInRef.current && mouseIn) {\r\n            mouseInRef.current = true\r\n            animInProgressRef.current = true\r\n        }\r\n        // if (arrowIn === undefined) {\r\n        //     setArrowIn(true)\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main} ref={coverRef} style={{height: `${height}px`}}>\r\n            <div className={css.BackgroundContainer}>\r\n                {/* <img src=\"/images/palm.png\" alt=\"cover-bg-palm\" className={css.BackgroundImage} style={{minHeight: `${height}px`}} /> */}\r\n                <div className={css.BackgroundMask} />\r\n            </div>\r\n            <div className={css.MediaIcons}>\r\n                <MediaIcons vertical />\r\n            </div>\r\n            <div className={css.TitleContainer}>\r\n                <h1 className={css.FirstName}>Joona</h1>\r\n                <h1 className={css.Surname}>Joenpolvi</h1>\r\n                <h3 className={css.Description}> {\"<Front End Developer />\"} </h3>\r\n            </div>\r\n            <div className={css.ArrowContainer} >\r\n                <div className={css.ArrowIcon}\r\n                    onClick={scrollToPortfolio}\r\n                    onMouseOver={() => hoverHandler(true)}\r\n                    onMouseOut={() => hoverHandler(false)}> \r\n                    <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\r\n                </div>\r\n                <p className={arrowTextClasses} onTransitionEnd={transitionHandler}>to portfolio</p>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Cover"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAIA;AAEA;;;;A","sourceRoot":""}