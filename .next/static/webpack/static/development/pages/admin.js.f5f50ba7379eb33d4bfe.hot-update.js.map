{"version":3,"file":"static/webpack/static\\development\\pages\\admin.js.f5f50ba7379eb33d4bfe.hot-update.js","sources":["webpack:///./pages/admin/index.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport { NextPage } from 'next'\r\n\r\nconst css = require('./index.module.css')\r\n\r\nconst AdminPage: NextPage = (): JSX.Element => {\r\n    const [isSignedIn, setIsSignedIn] = React.useState<boolean>(false)\r\n\r\n    const signInHandler = (email: string, password: string) =>  {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main}>\r\n            { !isSignedIn && <AuthForm signIn={signInHandler} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IAuthForm {\r\n    signIn: (email: string, password: string) => void\r\n}\r\n\r\ninterface IFormElement {\r\n    elementType: string\r\n    inputType: string\r\n    placeholder?: string\r\n    require?: boolean\r\n    value?: string\r\n}\r\n\r\ninterface IFormState {\r\n    [email: string]: IFormElement\r\n    password: IFormElement\r\n    submit: IFormElement\r\n}\r\n\r\nconst initialAuthFormState: IFormState = {\r\n    email: {\r\n        elementType: 'input',\r\n        inputType: 'email',\r\n        placeholder: 'email',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    password: {\r\n        elementType: 'input',\r\n        inputType: 'password',\r\n        placeholder: 'password',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    submit: {\r\n        elementType: 'input',\r\n        inputType: 'submit',\r\n        value: 'Sign In'\r\n    },\r\n}\r\n   \r\n\r\n\r\nconst AuthForm: React.FunctionComponent<IAuthForm> = ({ signIn }): JSX.Element => {\r\n    const [formState, setFormState] = React.useState<IFormState>(initialAuthFormState)\r\n\r\n    return (\r\n        <div className={css.AuthFormContainer}>\r\n            <h2>Sign In</h2>\r\n            <form className={css.AuthForm}>\r\n                { Object.keys(formState).map((elementKey: string) => {\r\n                    const element: IFormElement = formState[elementKey]\r\n                    return (\r\n                        <p> {element.elementType} </p>\r\n                    )\r\n                })}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAfA;AACA;AAuBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAGA;AAIA;AACA;AACA;;;;A","sourceRoot":""}