{"version":3,"file":"static/webpack/static\\development\\pages\\admin.js.be5850346ffe4b271213.hot-update.js","sources":["webpack:///./components/Admin/PortfolioManagement/Portfolio.tsx"],"sourcesContent":["import * as React from 'react'\r\n\r\nconst css = require('./Portfolio.module.css')\r\n\r\nimport { IPortfolioItem } from '../../../interfaces/interfaces'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../../icons/icons'\r\nimport AddPortfolioItem from '../AddNewItem/AddNewItem'\r\nimport { IAuthContext, AuthContext } from '../../../context/authContext'\r\nimport { IPortfolioContext, PortfolioContext, TPortfolioActionTypes } from '../../../context/portfolioContext'\r\n\r\ninterface IPortfolioItems {\r\n    items?: IPortfolioItem[]\r\n}\r\n\r\nconst PortfolioItems: React.FunctionComponent<IPortfolioItems> = ({ items }): JSX.Element => {\r\n    return (\r\n        <div className={css.ItemsContainer}>\r\n            { items && items.map((item: IPortfolioItem) => {\r\n                return (\r\n                    <PortfolioItem key={item.title} {...item} />\r\n                )\r\n            })}\r\n            <AddPortfolioItem />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PortfolioItem: React.FunctionComponent<IPortfolioItem> = (props): JSX.Element => {\r\n    const authContext: IAuthContext = React.useContext(AuthContext)\r\n    const portfolioContext: IPortfolioContext = React.useContext(PortfolioContext)\r\n\r\n    const deleteHandler = () => {\r\n        if (authContext.state.signedIn) {\r\n            const baseURL: string = \"https://joonajo-portfolio.firebaseio.com/items/\"\r\n            const itemParam: string = `${props.title}.json`\r\n            const tokenParam: string = `?auth=${authContext.state.idToken}`\r\n    \r\n            fetch(baseURL + itemParam + tokenParam, { method: 'delete' }).then(response => response.json())\r\n                .then(data => {\r\n                    console.log('succesfully deleted', props.title)\r\n                })\r\n\r\n            portfolioContext.dispatch!({ type: TPortfolioActionTypes.DELETE_ITEM, payload: props.title })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={css.ItemContainer}>\r\n            <div className={css.ItemMainContent}>\r\n                <p>{props.title}</p>\r\n            </div>\r\n            <div className={css.ItemHoverContent}>\r\n                <span> <FontAwesomeIcon icon={icons.faEdit} /> <p>edit</p> </span>\r\n                <span onClick={deleteHandler}> <FontAwesomeIcon icon={icons.faTrash} /> <p>delete</p> </span>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PortfolioItems"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}