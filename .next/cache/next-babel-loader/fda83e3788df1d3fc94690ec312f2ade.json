{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport zenscroll from 'zenscroll';\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons';\nimport { ToolbarContext } from '../../context/toolbarContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\n\nvar css = require('./Cover.module.css');\n\nvar Cover = React.memo(function () {\n  var toolbarContext = React.useContext(ToolbarContext);\n  var coverRef = React.useRef(null);\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      height = _React$useState2[0],\n      setHeight = _React$useState2[1];\n\n  React.useEffect(function () {\n    setHeight(window.innerHeight);\n    window.addEventListener('scroll', scrollHandler, true);\n    return function () {\n      return window.removeEventListener('scroll', scrollHandler, true);\n    };\n  }, []);\n\n  var scrollHandler = function scrollHandler() {};\n\n  var scrollToPortfolio = React.useCallback(function () {\n    if (coverRef && coverRef.current) {\n      var posToScrollTo = coverRef.current.clientHeight;\n      zenscroll.toY(posToScrollTo);\n    }\n  }, [coverRef]);\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      arrowIn = _React$useState4[0],\n      setArrowIn = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      arrowInAnim = _React$useState6[0],\n      setArrowInAnim = _React$useState6[1];\n\n  var arrowTextClasses = [css.ArrowText, arrowInAnim ? arrowIn ? css[\"in\"] : css.out : undefined].join(' ');\n\n  var transitionHandler = function transitionHandler() {\n    setArrowInAnim(false);\n    setArrowIn(false);\n  };\n\n  var hoverHandler = function hoverHandler(mouseIn) {\n    console.log(arrowInAnim, mouseIn);\n\n    if (!arrowInAnim && mouseIn) {\n      setArrowIn(mouseIn);\n    } else if (arrowInAnim && !mouseIn) {\n      setArrowIn(false);\n    } // if (arrowIn === undefined) {\n    //     setArrowIn(true)\n    // }\n\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main,\n    ref: coverRef,\n    style: {\n      height: \"\".concat(height, \"px\")\n    }\n  }, __jsx(\"div\", {\n    className: css.BackgroundContainer\n  }, __jsx(\"div\", {\n    className: css.BackgroundMask\n  })), __jsx(\"div\", {\n    className: css.MediaIcons\n  }, __jsx(MediaIcons, {\n    vertical: true\n  })), __jsx(\"div\", {\n    className: css.TitleContainer\n  }, __jsx(\"h1\", {\n    className: css.FirstName\n  }, \"Joona\"), __jsx(\"h1\", {\n    className: css.Surname\n  }, \"Joenpolvi\"), __jsx(\"h3\", {\n    className: css.Description\n  }, \" \", \"<Front End Developer />\", \" \")), __jsx(\"div\", {\n    className: css.ArrowContainer\n  }, __jsx(\"div\", {\n    className: css.ArrowIcon,\n    onClick: scrollToPortfolio,\n    onMouseOver: function onMouseOver() {\n      return hoverHandler(true);\n    },\n    onMouseOut: function onMouseOut() {\n      return hoverHandler(false);\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faChevronDown,\n    size: \"lg\"\n  })), __jsx(\"p\", {\n    className: arrowTextClasses,\n    onTransitionEnd: transitionHandler\n  }, \"to portfolio\")));\n});\nexport default Cover;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Cover/Cover.tsx"],"names":["React","zenscroll","MediaIcons","ToolbarContext","FontAwesomeIcon","icons","css","require","Cover","memo","toolbarContext","useContext","coverRef","useRef","useState","undefined","height","setHeight","useEffect","window","innerHeight","addEventListener","scrollHandler","removeEventListener","scrollToPortfolio","useCallback","current","posToScrollTo","clientHeight","toY","arrowIn","setArrowIn","arrowInAnim","setArrowInAnim","arrowTextClasses","ArrowText","out","join","transitionHandler","hoverHandler","mouseIn","console","log","Main","BackgroundContainer","BackgroundMask","TitleContainer","FirstName","Surname","Description","ArrowContainer","ArrowIcon","faChevronDown"],"mappings":"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","sourcesContent":["import React from 'react'\nimport zenscroll from 'zenscroll'\n\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\nimport { IToolbar, ToolbarContext } from '../../context/toolbarContext'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { icons } from '../../icons/icons'\n\nconst css = require('./Cover.module.css')\n\nconst Cover = React.memo((): JSX.Element => {\n    const toolbarContext: IToolbar = React.useContext(ToolbarContext)\n    const coverRef = React.useRef<HTMLDivElement>(null)\n    const[height, setHeight] = React.useState<number | undefined>(undefined)\n    \n    React.useEffect(() => {\n        setHeight(window.innerHeight)\n\n        window.addEventListener('scroll', scrollHandler, true)\n\n        return () => window.removeEventListener('scroll', scrollHandler, true)\n    }, [])\n\n    const scrollHandler = () => {\n\n    }\n\n    const scrollToPortfolio = React.useCallback(() => {\n        if (coverRef && coverRef.current) {\n            const posToScrollTo: number = coverRef.current.clientHeight\n    \n            zenscroll.toY(posToScrollTo)\n        }\n    }, [coverRef])\n\n    const[arrowIn, setArrowIn] = React.useState<boolean>(false)\n    const[arrowInAnim, setArrowInAnim] = React.useState<boolean>(false)\n\n    const arrowTextClasses = [\n        css.ArrowText,\n        arrowInAnim ? arrowIn ? css.in : css.out : undefined\n    ].join(' ')\n\n    const transitionHandler = () => {\n       setArrowInAnim(false)\n       setArrowIn(false)\n    }\n\n    const hoverHandler = (mouseIn: boolean) => {\n        console.log(arrowInAnim, mouseIn)\n        if (!arrowInAnim && mouseIn) {\n            setArrowIn(mouseIn)\n        } else if (arrowInAnim && !mouseIn) {\n            setArrowIn(false)\n        }\n        // if (arrowIn === undefined) {\n        //     setArrowIn(true)\n        // }\n    }\n\n    return (\n        <div className={css.Main} ref={coverRef} style={{height: `${height}px`}}>\n            <div className={css.BackgroundContainer}>\n                {/* <img src=\"/images/palm.png\" alt=\"cover-bg-palm\" className={css.BackgroundImage} style={{minHeight: `${height}px`}} /> */}\n                <div className={css.BackgroundMask} />\n            </div>\n            <div className={css.MediaIcons}>\n                <MediaIcons vertical />\n            </div>\n            <div className={css.TitleContainer}>\n                <h1 className={css.FirstName}>Joona</h1>\n                <h1 className={css.Surname}>Joenpolvi</h1>\n                <h3 className={css.Description}> {\"<Front End Developer />\"} </h3>\n            </div>\n            <div className={css.ArrowContainer} >\n                <div className={css.ArrowIcon}\n                    onClick={scrollToPortfolio}\n                    onMouseOver={() => hoverHandler(true)}\n                    onMouseOut={() => hoverHandler(false)}> \n                    <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\n                </div>\n                <p className={arrowTextClasses} onTransitionEnd={transitionHandler}>to portfolio</p>\n            </div>\n        </div>\n    )\n})\n\nexport default Cover"]},"metadata":{},"sourceType":"module"}