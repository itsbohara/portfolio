{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner';\nimport Auth from '../../containers/Auth/Auth';\nimport Admin from '../../containers/Admin/Admin';\n\nvar css = require('./index.module.css');\n\nvar initialAuthState = {\n  signedIn: false\n};\n\nvar signIn = function signIn(state, action) {\n  var _action$payload, _action$payload2, _action$payload3;\n\n  var updatedState = _objectSpread({}, state, {\n    signedIn: true,\n    email: (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.email,\n    password: (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.password,\n    idToken: (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.idToken\n  });\n\n  return _objectSpread({}, updatedStates);\n};\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialAuthState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'signin':\n      return signIn(state, action);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nvar AdminPage = function AdminPage() {\n  var _React$useReducer = React.useReducer(authReducer, initialAuthState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sending = _React$useState2[0],\n      setSending = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      screensize = _React$useState4[0],\n      setScreensize = _React$useState4[1];\n\n  React.useEffect(function () {\n    document.title = 'Portfolio // Admin';\n    setScreensize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    if (localStorage.length !== 0) {\n      // check for auth info in local storage\n      // compare current time in milliseconds to expire time in storage\n      // if current time is LESS, use the auth info from storage to refresh\n      // else, clear local storage\n      var expireTime = localStorage.getItem('expireTime');\n\n      if (expireTime) {\n        if (new Date().getTime() < +expireTime) {\n          dispatch({\n            type: 'signin'\n          });\n          setSending(false);\n        } else {\n          localStorage.clear();\n          setSending(false);\n        }\n      }\n    } else {\n      setSending(false);\n    }\n  }, []);\n\n  var signInHandler = function signInHandler(email, password, idToken) {\n    var authInfo = {\n      email: email,\n      password: password,\n      idToken: idToken\n    };\n    dispatch({\n      type: 'signin',\n      payload: authInfo\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main,\n    style: {\n      minHeight: \"\".concat(screensize === null || screensize === void 0 ? void 0 : screensize.height, \"px\"),\n      minWidth: \"\".concat(screensize === null || screensize === void 0 ? void 0 : screensize.width, \"px\")\n    }\n  }, !state.signedIn && __jsx(Auth, {\n    setSending: setSending,\n    signIn: signInHandler\n  }), state.signedIn && __jsx(Admin, null), sending && __jsx(Loading, null));\n};\n\nvar Loading = function Loading() {\n  return __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null));\n};\n\nexport default AdminPage;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/pages/admin/index.tsx"],"names":["React","CubeSpinner","Auth","Admin","css","require","initialAuthState","signedIn","signIn","state","action","updatedState","email","payload","password","idToken","updatedStates","authReducer","type","AdminPage","useReducer","dispatch","useState","sending","setSending","screensize","setScreensize","useEffect","document","title","width","window","innerWidth","height","innerHeight","localStorage","length","expireTime","getItem","Date","getTime","clear","signInHandler","authInfo","Main","minHeight","minWidth","Loading"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nimport { NextPage } from 'next'\n\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\nimport Auth from '../../containers/Auth/Auth'\nimport Admin from '../../containers/Admin/Admin'\n\nconst css = require('./index.module.css')\n\ntype TAuthState = {\n    signedIn: boolean\n    email?: string\n    password?: string\n    idToken?: string\n}\n\ntype TAction = {\n    type: string\n    payload?: any\n}\n\nconst initialAuthState: TAuthState = {\n    signedIn: false\n}\n\nconst signIn = (state: TAuthState, action: TAction): TAuthState => {\n    const updatedState: TAuthState = {\n        ...state,\n        signedIn: true,\n        email: action.payload?.email,\n        password: action.payload?.password,\n        idToken: action.payload?.idToken,\n    }\n\n    return {\n        ...updatedStates\n    }\n}\n\nconst authReducer = (state: TAuthState = initialAuthState, action: TAction): TAuthState => {\n    switch (action.type) {\n        case 'signin':\n            return signIn(state, action)\n    \n        default:\n            return { ...state }\n    }\n}\n\n\nconst AdminPage: NextPage = (): JSX.Element => {\n    const [state, dispatch] = React.useReducer(authReducer, initialAuthState)\n    const [sending, setSending] = React.useState<boolean>(true)\n    const [screensize, setScreensize] = React.useState<{ width: number, height: number}>()\n\n    React.useEffect(() => {\n        document.title = 'Portfolio // Admin'\n\n        setScreensize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        })\n\n        if (localStorage.length !== 0) {\n            // check for auth info in local storage\n            // compare current time in milliseconds to expire time in storage\n            // if current time is LESS, use the auth info from storage to refresh\n            // else, clear local storage\n            const expireTime = (localStorage.getItem('expireTime'))\n            if (expireTime) {\n                if (new Date().getTime() < +expireTime) {\n                    dispatch({ type: 'signin', })\n                    setSending(false)\n                } else {\n                    localStorage.clear()\n                    setSending(false)\n                }\n            }\n        } else {\n            setSending(false)\n        }\n    }, [])\n\n    const signInHandler = (email: string, password: string, idToken: string) => {\n        const authInfo = {\n            email: email,\n            password: password,\n            idToken: idToken\n        }\n        dispatch({ type: 'signin', payload: authInfo })\n    }\n\n    return (\n        <div className={css.Main} style={{minHeight: `${screensize?.height}px`, minWidth: `${screensize?.width}px`}}>\n            { !state.signedIn && <Auth setSending={setSending} signIn={signInHandler} /> }\n            { state.signedIn && <Admin /> }\n            { sending && <Loading /> }\n        </div>\n    )\n}\n\nconst Loading: React.FunctionComponent = (): JSX.Element => (\n    <div className={css.Loading}>\n        <CubeSpinner />\n    </div>\n)\n\n\nexport default AdminPage"]},"metadata":{},"sourceType":"module"}