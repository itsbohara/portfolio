{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { icons } from '../../icons/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst css = require('./Item.module.css');\n\nconst SHOW_TRESHOLD = 300; // pixels\n\nconst Item = props => {\n  const [showItem, toggleShowItem] = React.useState(false);\n  const itemRef = React.useRef(null); // update the event listeners every time the showItem state is changed\n\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true);\n    return () => window.removeEventListener('scroll', checkIfInViewport, true);\n  }, [showItem]);\n\n  const checkIfInViewport = () => {\n    const itemPos = itemRef.current.getBoundingClientRect().top;\n    const windowHeight = window.innerHeight;\n\n    if (itemPos + SHOW_TRESHOLD < windowHeight) {\n      toggleShowItem(true);\n    } else if (showItem) {\n      toggleShowItem(false);\n    }\n  };\n\n  const itemClasses = [css.Item, showItem ? css.show : null].join(' ');\n  return __jsx(\"div\", {\n    className: itemClasses,\n    ref: itemRef\n  }, __jsx(\"p\", {\n    className: css.Title\n  }, __jsx(\"span\", null, props.title)), __jsx(\"div\", {\n    className: css.ItemContent\n  }, __jsx(ItemImage, {\n    video_src: props.video_src,\n    link: props.link,\n    githubLink: props.githubLink\n  }), __jsx(ItemInfo, {\n    languages: props.language,\n    title: props.title,\n    desc: props.description,\n    desktop: props.desktop,\n    mobile: props.mobile,\n    link: props.link,\n    githubLink: props.githubLink\n  })));\n};\n\nconst ItemInfo = props => {\n  return __jsx(\"div\", {\n    className: css.InfoContainer\n  }, __jsx(\"div\", {\n    className: css.MadeWith\n  }, \"made with\", props.languages.map((lang, index) => __jsx(\"p\", {\n    key: lang,\n    className: css.Language\n  }, lang, index !== props.languages.length - 1 ? __jsx(\"span\", {\n    style: {\n      color: 'dimgray'\n    }\n  }, \" + \") : ''))), __jsx(\"p\", {\n    className: css.Description\n  }, props.desc), __jsx(\"div\", {\n    className: css.IconsAndLinks\n  }, __jsx(\"div\", {\n    className: css.ItemLinks\n  }, __jsx(\"a\", {\n    className: css.ItemLinkContainer,\n    href: props.githubLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(\"p\", {\n    className: css.ItemLink\n  }, \"Github\"), __jsx(\"div\", {\n    className: css.ItemLinkIcon\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faGithub,\n    size: \"lg\"\n  }))), __jsx(\"a\", {\n    className: css.ItemLinkContainer,\n    href: props.link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(\"p\", {\n    className: css.ItemLink\n  }, \"Open\"), __jsx(\"div\", {\n    className: css.ItemLinkIcon\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faExternalLinkSquareAlt,\n    size: \"lg\"\n  })))), __jsx(HardwareIcons, {\n    desktop: props.desktop,\n    mobile: props.mobile\n  })));\n};\n\nconst HardwareIcons = ({\n  desktop,\n  mobile\n}) => __jsx(\"div\", {\n  className: css.HardwareIcons\n}, __jsx(\"div\", {\n  className: css.HardwareIconContainer\n}, __jsx(\"div\", {\n  className: css.HardwareIcon\n}, __jsx(FontAwesomeIcon, {\n  className: css.DesktopIcon,\n  icon: icons.faDesktop,\n  size: \"lg\"\n})), __jsx(\"div\", {\n  className: css.HardwareIcon\n}, desktop ? __jsx(FontAwesomeIcon, {\n  icon: icons.faCheck,\n  size: \"lg\",\n  color: \"green\"\n}) : __jsx(FontAwesomeIcon, {\n  icon: icons.faTimes,\n  size: \"lg\",\n  color: \"crimson\"\n}))), __jsx(\"div\", {\n  className: css.HardwareIconContainer\n}, __jsx(\"div\", {\n  className: css.HardwareIcon\n}, __jsx(FontAwesomeIcon, {\n  className: css.DesktopIcon,\n  icon: icons.faMobileAlt,\n  size: \"lg\"\n})), __jsx(\"div\", {\n  className: css.HardwareIcon\n}, mobile ? __jsx(FontAwesomeIcon, {\n  icon: icons.faCheck,\n  size: \"lg\",\n  color: \"green\"\n}) : __jsx(FontAwesomeIcon, {\n  icon: icons.faTimes,\n  size: \"lg\",\n  color: \"crimson\"\n}))));\n\nconst ItemImage = props => {\n  return __jsx(\"div\", {\n    className: css.ImageContainer\n  }, __jsx(\"img\", {\n    className: css.Image,\n    src: props.video_src,\n    alt: \"portfolio-img\"\n  }), __jsx(\"div\", {\n    className: css.ImageMask\n  }, __jsx(\"div\", {\n    className: css.MaskLinks\n  }, __jsx(MaskLink, {\n    address: props.link,\n    text: \"Open\",\n    icon: \"link\"\n  }), __jsx(MaskLink, {\n    address: props.githubLink,\n    text: \"Github\",\n    icon: \"github\"\n  }))));\n};\n\nconst MaskLink = ({\n  address,\n  text,\n  icon\n}) => {\n  return __jsx(\"a\", {\n    href: address,\n    className: css.MaskLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(\"div\", {\n    className: css.MaskLinkText\n  }, __jsx(\"span\", null, text)), __jsx(\"div\", {\n    className: css.MaskLinkIcon\n  }, icon === 'github' ? __jsx(FontAwesomeIcon, {\n    icon: icons.faGithub,\n    size: \"lg\"\n  }) : __jsx(FontAwesomeIcon, {\n    icon: icons.faExternalLinkSquareAlt,\n    size: \"lg\"\n  })));\n};\n\nexport default Item;","map":{"version":3,"sources":["/home/joojo/code/portfolio/components/Item/Item.tsx"],"names":["React","icons","FontAwesomeIcon","css","require","SHOW_TRESHOLD","Item","props","showItem","toggleShowItem","useState","itemRef","useRef","useEffect","window","addEventListener","checkIfInViewport","removeEventListener","itemPos","current","getBoundingClientRect","top","windowHeight","innerHeight","itemClasses","show","join","Title","title","ItemContent","video_src","link","githubLink","language","description","desktop","mobile","ItemInfo","InfoContainer","MadeWith","languages","map","lang","index","Language","length","color","Description","desc","IconsAndLinks","ItemLinks","ItemLinkContainer","ItemLink","ItemLinkIcon","faGithub","faExternalLinkSquareAlt","HardwareIcons","HardwareIconContainer","HardwareIcon","DesktopIcon","faDesktop","faCheck","faTimes","faMobileAlt","ItemImage","ImageContainer","Image","ImageMask","MaskLinks","MaskLink","address","text","icon","MaskLinkText","MaskLinkIcon"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IPortfolioItem } from '../../interfaces/interfaces'\nimport { icons } from '../../icons/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst css = require('./Item.module.css')\n\nconst SHOW_TRESHOLD = 300 // pixels\n\nconst Item: React.FunctionComponent<IPortfolioItem> = (props): JSX.Element => {\n  const[showItem, toggleShowItem] = React.useState(false)\n  const itemRef = React.useRef<HTMLDivElement>(null)\n  \n  // update the event listeners every time the showItem state is changed\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true)\n  \n    return () => window.removeEventListener('scroll', checkIfInViewport, true)  \n  }, [showItem])\n  \n  const checkIfInViewport = () => {\n    const itemPos: number = itemRef.current!.getBoundingClientRect().top\n    const windowHeight: number = window.innerHeight\n\n    if (itemPos + SHOW_TRESHOLD < windowHeight) {\n      toggleShowItem(true)\n    } else if (showItem) {\n      toggleShowItem(false)\n    }\n  }\n\n  const itemClasses = [\n    css.Item, \n    showItem ? css.show : null\n  ].join(' ')\n  \n  return (\n    <div className={itemClasses} ref={itemRef} >\n      <p className={css.Title}><span>{props.title}</span></p>\n      <div className={css.ItemContent}>\n        <ItemImage video_src={props.video_src} \n          link={props.link} \n          githubLink={props.githubLink} />\n        <ItemInfo languages={props.language}\n          title={props.title}\n          desc={props.description}\n          desktop={props.desktop}\n          mobile={props.mobile}\n          link={props.link}\n          githubLink={props.githubLink} />\n      </div>\n    </div>\n  )\n}\n\ninterface IItemInfo {\n  languages: string[]\n  title: string\n  desc: string\n  desktop: boolean\n  mobile: boolean\n  link: string\n  githubLink: string\n}\n\nconst ItemInfo: React.FunctionComponent<IItemInfo> = (props): JSX.Element => {\n  return (\n    <div className={css.InfoContainer}>\n      <div className={css.MadeWith}>\n        made with\n        {props.languages.map((lang: string, index: number) => (\n          <p key={lang} className={css.Language}>\n            {lang}\n            {index !== props.languages.length - 1 ? <span style={{color: 'dimgray'}}> + </span> : ''}\n          </p>\n        ))}\n      </div>\n      <p className={css.Description}>\n        {props.desc}\n      </p>\n      <div className={css.IconsAndLinks}>\n        <div className={css.ItemLinks}>\n            <a className={css.ItemLinkContainer} href={props.githubLink} target=\"_blank\" rel=\"noopener noreferrer\">\n              <p className={css.ItemLink}>Github</p>\n              <div className={css.ItemLinkIcon}>\n                <FontAwesomeIcon icon={icons.faGithub} size=\"lg\" />\n              </div>\n            </a>\n            <a className={css.ItemLinkContainer} href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <p className={css.ItemLink}>Open</p>\n              <div className={css.ItemLinkIcon}>\n                <FontAwesomeIcon icon={icons.faExternalLinkSquareAlt} size=\"lg\" />\n              </div>\n            </a>\n        </div>\n        <HardwareIcons desktop={props.desktop} mobile={props.mobile} />\n      </div>\n    </div>\n  )\n}\n\ninterface IHardwareICons {\n  desktop: boolean\n  mobile: boolean\n}\n\nconst HardwareIcons: React.FunctionComponent<IHardwareICons> = ({ desktop, mobile }): JSX.Element => (\n  <div className={css.HardwareIcons}>\n    <div className={css.HardwareIconContainer}>\n      <div className={css.HardwareIcon}>\n        <FontAwesomeIcon className={css.DesktopIcon} icon={icons.faDesktop} size=\"lg\" />\n      </div>\n      <div className={css.HardwareIcon}>\n        {desktop ? <FontAwesomeIcon icon={icons.faCheck} size=\"lg\" color=\"green\" /> : <FontAwesomeIcon icon={icons.faTimes} size=\"lg\" color=\"crimson\" />}\n      </div>\n    </div>\n    <div className={css.HardwareIconContainer}>\n      <div className={css.HardwareIcon}>\n        <FontAwesomeIcon className={css.DesktopIcon} icon={icons.faMobileAlt} size=\"lg\" />\n      </div>\n      <div className={css.HardwareIcon}>\n        {mobile ? <FontAwesomeIcon icon={icons.faCheck} size=\"lg\" color=\"green\" /> : <FontAwesomeIcon icon={icons.faTimes} size=\"lg\" color=\"crimson\" />}\n      </div>\n    </div>\n  </div>\n)\n\ninterface IImage {\n  video_src: string\n  link: string\n  githubLink: string\n}\n\nconst ItemImage: React.FunctionComponent<IImage> = (props): JSX.Element => {\n  return (\n    <div className={css.ImageContainer}>\n      <img className={css.Image} src={props.video_src} alt='portfolio-img'/>\n      <div className={css.ImageMask}>\n        <div className={css.MaskLinks}>\n          <MaskLink address={props.link} text=\"Open\" icon={\"link\"} />\n          <MaskLink address={props.githubLink} text=\"Github\" icon={\"github\"} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface IMaskLink {\n  address: string\n  text: string\n  icon: string\n}\n\nconst MaskLink: React.FunctionComponent<IMaskLink> = ({ address, text, icon }): JSX.Element => {\n  return (\n      <a href={address} className={css.MaskLink} target='_blank' rel=\"noopener noreferrer\">\n          <div className={css.MaskLinkText}>\n              <span>{text}</span>\n          </div>\n          <div className={css.MaskLinkIcon}>\n              {icon === 'github' ? \n                <FontAwesomeIcon icon={icons.faGithub} size=\"lg\" /> \n                : <FontAwesomeIcon icon={icons.faExternalLinkSquareAlt} size=\"lg\" />\n              }\n          </div>\n      </a>\n  )\n}\n\nexport default Item"]},"metadata":{},"sourceType":"module"}