{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/joojo/code/portfolio/components/Item/Item.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { icons } from '../../icons/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nvar css = require('./Item.module.css');\n\nvar SHOW_TRESHOLD = 350; // pixels\n\nvar Item = function Item(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showItem = _React$useState2[0],\n      toggleShowItem = _React$useState2[1];\n\n  var itemRef = React.useRef(null); // update the event listeners every time the showItem state is changed\n\n  React.useEffect(function () {\n    window.addEventListener('scroll', checkIfInViewport, true);\n    return function () {\n      return window.removeEventListener('scroll', checkIfInViewport, true);\n    };\n  }, [showItem]);\n\n  var checkIfInViewport = function checkIfInViewport() {\n    var itemPos = itemRef.current.getBoundingClientRect().top;\n    var windowHeight = window.innerHeight;\n\n    if (itemPos + SHOW_TRESHOLD < windowHeight) {\n      toggleShowItem(true);\n    } else if (showItem) {\n      toggleShowItem(false);\n    }\n  };\n\n  var itemClasses = [css.Item, showItem ? css.show : null].join(' ');\n  return __jsx(\"div\", {\n    className: itemClasses,\n    ref: itemRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: css.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.title)), __jsx(\"div\", {\n    className: css.ItemContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(ItemImage, {\n    gif_src: props.gif_src,\n    link: props.link,\n    githubLink: props.githubLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(ItemInfo, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n};\n\nvar ItemInfo = function ItemInfo(props) {\n  return __jsx(\"div\", {\n    className: css.InfoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.MadeWith,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"made with:\", props.languages.map(function (lang, index) {\n    return __jsx(\"p\", {\n      key: lang,\n      className: css.Language,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, lang, index !== props.languages.length - 1 ? __jsx(\"span\", {\n      style: {\n        color: 'dimgray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" + \") : '');\n  })), __jsx(\"p\", {\n    className: css.Description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.desc), __jsx(\"div\", {\n    className: css.IconsAndLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(HardwareIcons, {\n    desktop: props.desktop,\n    mobile: props.mobile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: css.ItemLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.ItemLinkContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: css.ItemLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Github\"), __jsx(\"div\", {\n    className: css.ItemLinkIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faGithub,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: css.ItemLinkContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: css.ItemLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Open\"), __jsx(\"div\", {\n    className: css.ItemLinkIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faExternalLinkSquareAlt,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))))));\n};\n\nvar HardwareIcons = function HardwareIcons(_ref) {\n  var desktop = _ref.desktop,\n      mobile = _ref.mobile;\n  return __jsx(\"div\", {\n    className: css.HardwareIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.HardwareIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.HardwareIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(FontAwesomeIcon, {\n    className: css.DesktopIcon,\n    icon: icons.faDesktop,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: css.HardwareIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, desktop ? __jsx(FontAwesomeIcon, {\n    icon: icons.faCheck,\n    size: \"lg\",\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }) : __jsx(FontAwesomeIcon, {\n    icon: icons.faTimes,\n    size: \"lg\",\n    color: \"crimson\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: css.HardwareIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.HardwareIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(FontAwesomeIcon, {\n    className: css.DesktopIcon,\n    icon: icons.faMobileAlt,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: css.HardwareIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, mobile ? __jsx(FontAwesomeIcon, {\n    icon: icons.faCheck,\n    size: \"lg\",\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }) : __jsx(FontAwesomeIcon, {\n    icon: icons.faTimes,\n    size: \"lg\",\n    color: \"crimson\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))));\n};\n\nvar ItemImage = function ItemImage(props) {\n  return __jsx(\"div\", {\n    className: css.ImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: css.Image,\n    src: props.gif_src,\n    alt: \"portfolio-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: css.ImageMask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.MaskLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(MaskLink, {\n    address: props.link,\n    text: \"Open\",\n    icon: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), __jsx(MaskLink, {\n    address: props.githubLink,\n    text: \"Github\",\n    icon: \"github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))));\n};\n\nvar MaskLink = function MaskLink(_ref2) {\n  var address = _ref2.address,\n      text = _ref2.text,\n      icon = _ref2.icon;\n  return __jsx(\"a\", {\n    href: address,\n    className: css.MaskLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.MaskLinkText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, text)), __jsx(\"div\", {\n    className: css.MaskLinkIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, icon === 'github' ? __jsx(FontAwesomeIcon, {\n    icon: icons.faGithub,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }) : __jsx(FontAwesomeIcon, {\n    icon: icons.faExternalLinkSquareAlt,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })));\n};\n\nexport default Item;","map":{"version":3,"sources":["/home/joojo/code/portfolio/components/Item/Item.tsx"],"names":["React","icons","FontAwesomeIcon","css","require","SHOW_TRESHOLD","Item","props","useState","showItem","toggleShowItem","itemRef","useRef","useEffect","window","addEventListener","checkIfInViewport","removeEventListener","itemPos","current","getBoundingClientRect","top","windowHeight","innerHeight","itemClasses","show","join","Title","title","ItemContent","gif_src","link","githubLink","ItemInfo","InfoContainer","MadeWith","languages","map","lang","index","Language","length","color","Description","desc","IconsAndLinks","desktop","mobile","ItemLinks","ItemLinkContainer","ItemLink","ItemLinkIcon","faGithub","faExternalLinkSquareAlt","HardwareIcons","HardwareIconContainer","HardwareIcon","DesktopIcon","faDesktop","faCheck","faTimes","faMobileAlt","ItemImage","ImageContainer","Image","ImageMask","MaskLinks","MaskLink","address","text","icon","MaskLinkText","MaskLinkIcon"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IPortfolioItem } from '../../interfaces/interfaces'\nimport { icons } from '../../icons/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst css = require('./Item.module.css')\n\nconst SHOW_TRESHOLD = 350 // pixels\n\nconst Item: React.FunctionComponent<IPortfolioItem> = (props): JSX.Element => {\n  const[showItem, toggleShowItem] = React.useState(true)\n  const itemRef = React.useRef<HTMLDivElement>(null)\n  \n  // update the event listeners every time the showItem state is changed\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true)\n  \n    return () => window.removeEventListener('scroll', checkIfInViewport, true)  \n  }, [showItem])\n  \n  const checkIfInViewport = () => {\n    const itemPos: number = itemRef.current!.getBoundingClientRect().top\n    const windowHeight: number = window.innerHeight\n\n    if (itemPos + SHOW_TRESHOLD < windowHeight) {\n      toggleShowItem(true)\n    } else if (showItem) {\n      toggleShowItem(false)\n    }\n  }\n\n  const itemClasses = [\n    css.Item, \n    showItem ? css.show : null\n  ].join(' ')\n  \n  return (\n    <div className={itemClasses} ref={itemRef} >\n      <p className={css.Title}><span>{props.title}</span></p>\n      <div className={css.ItemContent}>\n        <ItemImage gif_src={props.gif_src} \n          link={props.link} \n          githubLink={props.githubLink} />\n        <ItemInfo {...props} />\n      </div>\n    </div>\n  )\n}\n\ninterface IItemInfo {\n  language: string[]\n  title: string\n  description: string\n  desktop: boolean\n  mobile: boolean\n  link: string\n  githubLink: string\n}\n\nconst ItemInfo: React.FunctionComponent<IItemInfo> = (props): JSX.Element => {\n  return (\n    <div className={css.InfoContainer}>\n      <div className={css.MadeWith}>\n        made with:\n        {props.languages.map((lang: string, index: number) => (\n          <p key={lang} className={css.Language}>\n            {lang}\n            {index !== props.languages.length - 1 ? <span style={{color: 'dimgray'}}> + </span> : ''}\n          </p>\n        ))}\n      </div>\n      <p className={css.Description}>\n        {props.desc}\n      </p>\n      <div className={css.IconsAndLinks}>\n        <HardwareIcons desktop={props.desktop} mobile={props.mobile} />\n        <div className={css.ItemLinks}>\n            <div className={css.ItemLinkContainer}>\n              <p className={css.ItemLink}>Github</p>\n              <div className={css.ItemLinkIcon}>\n                <FontAwesomeIcon icon={icons.faGithub} size=\"lg\" />\n              </div>\n            </div>\n            <div className={css.ItemLinkContainer}>\n              <p className={css.ItemLink}>Open</p>\n              <div className={css.ItemLinkIcon}>\n                <FontAwesomeIcon icon={icons.faExternalLinkSquareAlt} size=\"lg\" />\n              </div>\n            </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface IHardwareICons {\n  desktop: boolean\n  mobile: boolean\n}\n\nconst HardwareIcons: React.FunctionComponent<IHardwareICons> = ({ desktop, mobile }): JSX.Element => (\n  <div className={css.HardwareIcons}>\n    <div className={css.HardwareIconContainer}>\n      <div className={css.HardwareIcon}>\n        <FontAwesomeIcon className={css.DesktopIcon} icon={icons.faDesktop} size=\"lg\" />\n      </div>\n      <div className={css.HardwareIcon}>\n        {desktop ? <FontAwesomeIcon icon={icons.faCheck} size=\"lg\" color=\"green\" /> : <FontAwesomeIcon icon={icons.faTimes} size=\"lg\" color=\"crimson\" />}\n      </div>\n    </div>\n    <div className={css.HardwareIconContainer}>\n      <div className={css.HardwareIcon}>\n        <FontAwesomeIcon className={css.DesktopIcon} icon={icons.faMobileAlt} size=\"lg\" />\n      </div>\n      <div className={css.HardwareIcon}>\n        {mobile ? <FontAwesomeIcon icon={icons.faCheck} size=\"lg\" color=\"green\" /> : <FontAwesomeIcon icon={icons.faTimes} size=\"lg\" color=\"crimson\" />}\n      </div>\n    </div>\n  </div>\n)\n\ninterface IImage {\n  gif_src: string\n  link: string\n  githubLink: string\n}\n\nconst ItemImage: React.FunctionComponent<IImage> = (props): JSX.Element => {\n  return (\n    <div className={css.ImageContainer}>\n      <img className={css.Image} src={props.gif_src} alt='portfolio-img'/>\n      <div className={css.ImageMask}>\n        <div className={css.MaskLinks}>\n          <MaskLink address={props.link} text=\"Open\" icon={\"link\"} />\n          <MaskLink address={props.githubLink} text=\"Github\" icon={\"github\"} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface IMaskLink {\n  address: string\n  text: string\n  icon: string\n}\n\nconst MaskLink: React.FunctionComponent<IMaskLink> = ({ address, text, icon }): JSX.Element => {\n  return (\n      <a href={address} className={css.MaskLink} target='_blank' rel=\"noopener noreferrer\">\n          <div className={css.MaskLinkText}>\n              <span>{text}</span>\n          </div>\n          <div className={css.MaskLinkIcon}>\n              {icon === 'github' ? \n                <FontAwesomeIcon icon={icons.faGithub} size=\"lg\" /> \n                : <FontAwesomeIcon icon={icons.faExternalLinkSquareAlt} size=\"lg\" />\n              }\n          </div>\n      </a>\n  )\n}\n\nexport default Item"]},"metadata":{},"sourceType":"module"}