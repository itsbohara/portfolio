{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport zenscroll from 'zenscroll';\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\n\nconst css = require('./Cover.module.css');\n\nconst Cover = React.memo(() => {\n  const coverRef = React.useRef(null);\n  const [height, setHeight] = React.useState(undefined);\n  React.useEffect(() => {\n    setHeight(window.innerHeight);\n  }, []);\n  const scrollToPortfolio = React.useCallback(() => {\n    if (coverRef && coverRef.current) {\n      const posToScrollTo = coverRef.current.clientHeight;\n      zenscroll.toY(posToScrollTo);\n    }\n  }, [coverRef]);\n  const arrowTextClasses = [css.ArrowText].join(' ');\n  return __jsx(\"div\", {\n    className: css.Main,\n    ref: coverRef,\n    style: {\n      height: `${height}px`\n    }\n  }, __jsx(\"div\", {\n    className: css.BackgroundContainer\n  }, __jsx(\"img\", {\n    src: \"/images/palm.png\",\n    alt: \"cover-bg-palm\",\n    className: css.BackgroundImage\n  }), __jsx(\"div\", {\n    className: css.BackgroundMask\n  })), __jsx(\"div\", {\n    className: css.MediaIcons\n  }, __jsx(MediaIcons, {\n    vertical: true\n  })), __jsx(\"div\", {\n    className: css.TitleContainer\n  }, __jsx(AnimatedText, {\n    text: \"Joona\"\n  }), __jsx(AnimatedText, {\n    text: \"Joenpolvi\"\n  })), __jsx(\"div\", {\n    className: css.ArrowContainer\n  }, __jsx(\"div\", {\n    className: css.ArrowIcon,\n    onClick: scrollToPortfolio\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faChevronDown,\n    size: \"lg\"\n  })), __jsx(\"p\", {\n    className: arrowTextClasses\n  }, \"to portfolio\")));\n});\n\nconst AnimatedText = ({\n  text\n}) => {\n  return __jsx(\"div\", {\n    className: css.AnimatedText\n  }, text, __jsx(\"span\", null, text), __jsx(\"span\", null, text), __jsx(\"span\", null, text), __jsx(\"span\", null, text));\n};\n\nexport default Cover;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Cover/Cover.tsx"],"names":["React","zenscroll","MediaIcons","FontAwesomeIcon","icons","css","require","Cover","memo","coverRef","useRef","height","setHeight","useState","undefined","useEffect","window","innerHeight","scrollToPortfolio","useCallback","current","posToScrollTo","clientHeight","toY","arrowTextClasses","ArrowText","join","Main","BackgroundContainer","BackgroundImage","BackgroundMask","TitleContainer","ArrowContainer","ArrowIcon","faChevronDown","AnimatedText","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AAEA,MAAMC,KAAK,GAAGP,KAAK,CAACQ,IAAN,CAAW,MAAmB;AACxC,QAAMC,QAAQ,GAAGT,KAAK,CAACU,MAAN,CAA6B,IAA7B,CAAjB;AACA,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBZ,KAAK,CAACa,QAAN,CAAmCC,SAAnC,CAA3B;AAEAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AAClBH,IAAAA,SAAS,CAACI,MAAM,CAACC,WAAR,CAAT;AACH,GAFD,EAEG,EAFH;AAIA,QAAMC,iBAAiB,GAAGlB,KAAK,CAACmB,WAAN,CAAkB,MAAM;AAC9C,QAAIV,QAAQ,IAAIA,QAAQ,CAACW,OAAzB,EAAkC;AAC9B,YAAMC,aAAqB,GAAGZ,QAAQ,CAACW,OAAT,CAAiBE,YAA/C;AAEArB,MAAAA,SAAS,CAACsB,GAAV,CAAcF,aAAd;AACH;AACJ,GANyB,EAMvB,CAACZ,QAAD,CANuB,CAA1B;AAQA,QAAMe,gBAAgB,GAAG,CACrBnB,GAAG,CAACoB,SADiB,EAEvBC,IAFuB,CAElB,GAFkB,CAAzB;AAIA,SACI;AAAK,IAAA,SAAS,EAAErB,GAAG,CAACsB,IAApB;AAA0B,IAAA,GAAG,EAAElB,QAA/B;AAAyC,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAAG,GAAEA,MAAO;AAAnB;AAAhD,KACI;AAAK,IAAA,SAAS,EAAEN,GAAG,CAACuB;AAApB,KACI;AAAK,IAAA,GAAG,EAAC,kBAAT;AAA4B,IAAA,GAAG,EAAC,eAAhC;AAAgD,IAAA,SAAS,EAAEvB,GAAG,CAACwB;AAA/D,IADJ,EAEI;AAAK,IAAA,SAAS,EAAExB,GAAG,CAACyB;AAApB,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAEzB,GAAG,CAACH;AAApB,KACI,MAAC,UAAD;AAAY,IAAA,QAAQ;AAApB,IADJ,CALJ,EAQI;AAAK,IAAA,SAAS,EAAEG,GAAG,CAAC0B;AAApB,KAII,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC;AAAnB,IAJJ,EAKI,MAAC,YAAD;AAAc,IAAA,IAAI,EAAC;AAAnB,IALJ,CARJ,EAeI;AAAK,IAAA,SAAS,EAAE1B,GAAG,CAAC2B;AAApB,KACI;AAAK,IAAA,SAAS,EAAE3B,GAAG,CAAC4B,SAApB;AACI,IAAA,OAAO,EAAEf;AADb,KAEI,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEd,KAAK,CAAC8B,aAA7B;AAA4C,IAAA,IAAI,EAAC;AAAjD,IAFJ,CADJ,EAKI;AAAG,IAAA,SAAS,EAAEV;AAAd,oBALJ,CAfJ,CADJ;AAyBH,CA7Ca,CAAd;;AAmDA,MAAMW,YAAoD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AACpF,SACI;AAAK,IAAA,SAAS,EAAE/B,GAAG,CAAC8B;AAApB,KACKC,IADL,EAEI,oBAAOA,IAAP,CAFJ,EAGI,oBAAOA,IAAP,CAHJ,EAII,oBAAOA,IAAP,CAJJ,EAKI,oBAAOA,IAAP,CALJ,CADJ;AASH,CAVD;;AAYA,eAAe7B,KAAf","sourcesContent":["import React from 'react'\nimport zenscroll from 'zenscroll'\n\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { icons } from '../../icons/icons'\n\nconst css = require('./Cover.module.css')\n\nconst Cover = React.memo((): JSX.Element => {\n    const coverRef = React.useRef<HTMLDivElement>(null)\n    const[height, setHeight] = React.useState<number | undefined>(undefined)\n    \n    React.useEffect(() => {\n        setHeight(window.innerHeight)\n    }, [])\n\n    const scrollToPortfolio = React.useCallback(() => {\n        if (coverRef && coverRef.current) {\n            const posToScrollTo: number = coverRef.current.clientHeight\n    \n            zenscroll.toY(posToScrollTo)\n        }\n    }, [coverRef])\n\n    const arrowTextClasses = [\n        css.ArrowText,\n    ].join(' ')\n\n    return (\n        <div className={css.Main} ref={coverRef} style={{height: `${height}px`}}>\n            <div className={css.BackgroundContainer}>\n                <img src=\"/images/palm.png\" alt=\"cover-bg-palm\" className={css.BackgroundImage} />\n                <div className={css.BackgroundMask} />\n            </div>\n            <div className={css.MediaIcons}>\n                <MediaIcons vertical />\n            </div>\n            <div className={css.TitleContainer}>\n                {/* <h1 className={css.FirstName}>Joona</h1>\n                <h1 className={css.Surname}>Joenpolvi</h1>\n                <h3 className={css.Description}> {\"<Front End Developer />\"} </h3> */}\n                <AnimatedText text='Joona' />\n                <AnimatedText text='Joenpolvi' />\n            </div>\n            <div className={css.ArrowContainer} >\n                <div className={css.ArrowIcon}\n                    onClick={scrollToPortfolio}> \n                    <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\n                </div>\n                <p className={arrowTextClasses}>to portfolio</p>\n            </div>\n        </div>\n    )\n})\n\ninterface IAnimatedText {\n    text: string\n}\n\nconst AnimatedText: React.FunctionComponent<IAnimatedText> = ({ text }): JSX.Element => {\n    return (\n        <div className={css.AnimatedText}>\n            {text}\n            <span>{text}</span>\n            <span>{text}</span>\n            <span>{text}</span>\n            <span>{text}</span>\n        </div>\n    )\n}\n\nexport default Cover"]},"metadata":{},"sourceType":"module"}