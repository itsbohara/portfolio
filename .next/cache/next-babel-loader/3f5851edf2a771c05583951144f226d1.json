{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { googleKey } from '../../keys';\nimport { icons } from '../../icons/icons';\n\nconst css = require('./index.module.css');\n\nconst AdminPage = () => {\n  const [isSignedIn, setIsSignedIn] = React.useState(false);\n  React.useEffect(() => {\n    document.title = 'Portfolio // Admin';\n\n    if (localStorage) {\n      console.log('check local storage');\n      localStorage.clear();\n    }\n  }, []);\n\n  const signInHandler = (email, password) => {\n    const baseURL = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword\";\n    const apiKey = `?key=${googleKey}`;\n\n    const payload = _JSON$stringify({\n      email: email,\n      password: password,\n      returnSecureToken: true\n    });\n\n    fetch(baseURL + apiKey, {\n      method: 'post',\n      body: payload\n    }).then(response => response.json()).then(data => {\n      const idToken = data === null || data === void 0 ? void 0 : data.idToken;\n      const refreshToken = data === null || data === void 0 ? void 0 : data.refreshToken;\n      const email = data === null || data === void 0 ? void 0 : data.email;\n      const expireDate = String(new Date(new Date().getTime() + data.expiresIn * 1000));\n      localStorage.setItem('idToken', idToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('email', email);\n      localStorage.setItem('expireDate', expireDate);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main\n  }, !isSignedIn && __jsx(AuthForm, {\n    signIn: signInHandler\n  }));\n};\n\nconst initialAuthFormState = {\n  email: {\n    id: 'email',\n    inputType: 'email',\n    placeholder: 'email',\n    require: true,\n    value: '',\n    className: css.EmailInput,\n    icon: {\n      focus: icons.faEnvelopeOpen,\n      unfocus: icons.faEnvelope\n    }\n  },\n  password: {\n    id: 'password',\n    inputType: 'password',\n    placeholder: 'password',\n    require: true,\n    value: '',\n    className: css.PasswordInput,\n    icon: {\n      focus: icons.faUnlock,\n      unfocus: icons.faLock\n    }\n  }\n};\n\nconst AuthForm = ({\n  signIn\n}) => {\n  const [formState, setFormState] = React.useState(initialAuthFormState);\n  React.useEffect(() => {\n    const keyHandler = event => {\n      if (event.key === 'Enter') {\n        signInHandler();\n      }\n    };\n\n    window.addEventListener('keydown', keyHandler, true);\n    return () => window.removeEventListener('keydown', keyHandler, true);\n  }, [formState]);\n\n  const changeHandler = (elemKey, event) => {\n    const updatedFormState = _objectSpread({}, formState, {\n      [elemKey]: _objectSpread({}, formState[elemKey], {\n        value: event.target.value\n      })\n    });\n\n    setFormState(updatedFormState);\n  };\n\n  const signInHandler = () => {\n    signIn(formState.email.value, formState.password.value);\n  };\n\n  return __jsx(\"div\", {\n    className: css.AuthFormContainer\n  }, __jsx(\"form\", {\n    className: css.AuthForm\n  }, _Object$keys(formState).map(elementKey => {\n    return __jsx(InputComponent, _extends({\n      key: elementKey\n    }, formState[elementKey], {\n      changed: changeHandler\n    }));\n  })), __jsx(\"div\", {\n    className: css.SubmitButton,\n    onClick: signInHandler\n  }, __jsx(\"p\", null, \"Sign In\"), __jsx(FontAwesomeIcon, {\n    icon: icons.faSignInAlt\n  })));\n};\n\nconst InputComponent = props => {\n  var _props$icon;\n\n  const [isFocused, setIsFocused] = React.useState(false);\n  const containerClasses = [css.InputContainer, isFocused && css.focus].join(' ');\n  const iconClasses = [css.InputIcon, isFocused && css.focus].join(' ');\n  const spanClasses = [css.Span, isFocused && css.focus].join(' ');\n  return __jsx(\"div\", {\n    className: containerClasses\n  }, props.icon && __jsx(\"div\", {\n    className: css.IconContainer\n  }, __jsx(FontAwesomeIcon, {\n    className: iconClasses,\n    icon: (_props$icon = props.icon) === null || _props$icon === void 0 ? void 0 : _props$icon.unfocus\n  })), __jsx(\"input\", {\n    className: props.className,\n    placeholder: props.placeholder,\n    value: props.value,\n    type: props.inputType,\n    onChange: e => props.changed(props.id, e),\n    onFocus: () => setIsFocused(true),\n    onBlur: () => setIsFocused(false)\n  }), __jsx(\"span\", {\n    className: spanClasses\n  }));\n};\n\nexport default AdminPage;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/pages/admin/index.tsx"],"names":["React","FontAwesomeIcon","googleKey","icons","css","require","AdminPage","isSignedIn","setIsSignedIn","useState","useEffect","document","title","localStorage","console","log","clear","signInHandler","email","password","baseURL","apiKey","payload","returnSecureToken","fetch","method","body","then","response","json","data","idToken","refreshToken","expireDate","String","Date","getTime","expiresIn","setItem","Main","initialAuthFormState","id","inputType","placeholder","value","className","EmailInput","icon","focus","faEnvelopeOpen","unfocus","faEnvelope","PasswordInput","faUnlock","faLock","AuthForm","signIn","formState","setFormState","keyHandler","event","key","window","addEventListener","removeEventListener","changeHandler","elemKey","updatedFormState","target","AuthFormContainer","map","elementKey","SubmitButton","faSignInAlt","InputComponent","props","isFocused","setIsFocused","containerClasses","InputContainer","join","iconClasses","InputIcon","spanClasses","Span","IconContainer","e","changed"],"mappings":"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","sourcesContent":["import * as React from 'react'\n\nimport { NextPage } from 'next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { googleKey } from '../../keys'\nimport { icons } from '../../icons/icons'\n\nconst css = require('./index.module.css')\n\nconst AdminPage: NextPage = (): JSX.Element => {\n    const [isSignedIn, setIsSignedIn] = React.useState<boolean>(false)\n\n    React.useEffect(() => {\n        document.title = 'Portfolio // Admin'\n\n        if (localStorage) {\n            console.log('check local storage')\n            localStorage.clear()\n        }\n    }, [])\n\n    const signInHandler = (email: string, password: string) =>  {\n        const baseURL: string =\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword\"\n        const apiKey: string = `?key=${googleKey}`\n        const payload = JSON.stringify({\n            email: email,\n            password: password,\n            returnSecureToken: true\n        })\n        \n        fetch(baseURL + apiKey, { method: 'post', body: payload }).then(response => response.json()\n            ).then(data => {\n                const idToken: string = data?.idToken\n                const refreshToken: string = data?.refreshToken\n                const email: string = data?.email\n                const expireDate: string = String(new Date(new Date().getTime() + data.expiresIn * 1000)) \n                localStorage.setItem('idToken', idToken)\n                localStorage.setItem('refreshToken', refreshToken)\n                localStorage.setItem('email', email)\n                localStorage.setItem('expireDate', expireDate)\n            })\n    }\n\n    return (\n        <div className={css.Main}>\n            { !isSignedIn && <AuthForm signIn={signInHandler} /> }\n        </div>\n    )\n}\n\ninterface IFormElement {\n    id: string\n    inputType: string\n    value: string\n    placeholder?: string\n    require?: boolean\n    className?: string\n    icon? : { focus?: any, unfocus?: any }\n}\n\ninterface IFormState {\n    [email: string]: IFormElement\n    password: IFormElement\n}\n\nconst initialAuthFormState: IFormState = {\n    email: {\n        id: 'email',\n        inputType: 'email',\n        placeholder: 'email',\n        require: true,\n        value: '',\n        className: css.EmailInput,\n        icon: { focus: icons.faEnvelopeOpen, unfocus: icons.faEnvelope }\n    },\n    password: {\n        id: 'password',\n        inputType: 'password',\n        placeholder: 'password',\n        require: true,\n        value: '',\n        className: css.PasswordInput,\n        icon: { focus: icons.faUnlock, unfocus: icons.faLock }\n    },\n}\n\ninterface IAuthForm {\n    signIn: (email: string, password: string) => void\n}\n\nconst AuthForm: React.FunctionComponent<IAuthForm> = ({ signIn }): JSX.Element => {\n    const [formState, setFormState] = React.useState<IFormState>(initialAuthFormState)\n\n    React.useEffect(() => {\n        const keyHandler = (event: KeyboardEvent) => {\n            if (event.key === 'Enter') {\n                signInHandler()\n            }\n        }\n\n        window.addEventListener('keydown', keyHandler, true)\n\n        return () => window.removeEventListener('keydown', keyHandler, true)\n    }, [formState])\n\n    const changeHandler = (elemKey: string, event: React.ChangeEvent<HTMLInputElement>) => {\n        const updatedFormState: IFormState = {\n            ...formState,\n            [elemKey]: {\n                ...formState[elemKey],\n                value: event.target.value\n            }\n        }\n        setFormState(updatedFormState)\n    }\n\n    const signInHandler = () => {\n        signIn(formState.email.value, formState.password.value)\n    }\n\n    return (\n        <div className={css.AuthFormContainer}>\n            {/* <h2 className={css.FormTitle}>Admin Auth</h2> */}\n            <form className={css.AuthForm}>\n                { Object.keys(formState).map((elementKey: string) => {\n                    return (\n                        <InputComponent key={elementKey} {...formState[elementKey]} changed={changeHandler} />\n                    )\n                })}\n            </form>\n            <div className={css.SubmitButton} onClick={signInHandler}>\n                <p>Sign In</p>\n                <FontAwesomeIcon icon={icons.faSignInAlt} />\n            </div>\n        </div>\n    )\n}\n\ninterface IInputComponent extends IFormElement {\n    changed: (elemKey: string, event: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst InputComponent: React.FunctionComponent<IInputComponent> = (props): JSX.Element => {\n    const [isFocused, setIsFocused] = React.useState<boolean>(false)\n\n    const containerClasses = [\n        css.InputContainer,\n        isFocused && css.focus,\n    ].join(' ')\n\n    const iconClasses = [\n        css.InputIcon,\n        isFocused && css.focus\n    ].join(' ')\n\n    const spanClasses = [\n        css.Span,\n        isFocused && css.focus\n    ].join(' ')\n\n    return (\n        <div className={containerClasses}>\n            { props.icon &&  \n                <div className={css.IconContainer}>\n                    <FontAwesomeIcon className={iconClasses} icon={props.icon?.unfocus} />\n                </div>\n            }\n            <input className={props.className} \n                placeholder={props.placeholder}\n                value={props.value} \n                type={props.inputType}\n                onChange={(e) => props.changed(props.id, e)}\n                onFocus={() => setIsFocused(true)}\n                onBlur={() => setIsFocused(false)} /> \n            <span className={spanClasses}></span>\n        </div>\n    )\n}\n\nexport default AdminPage"]},"metadata":{},"sourceType":"module"}