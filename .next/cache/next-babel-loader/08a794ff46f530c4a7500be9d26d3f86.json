{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Cover from '../../components/Cover/Cover';\nimport Layout from '../../components/UI/Layout/Layout';\nimport Content from '../../components/Content/Content';\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner';\nimport { PortfolioContext, TPortfolioActionTypes } from '../../context/portfolioContext';\n\nvar css = require('./Home.module.css');\n\nvar Home = function Home() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      bgLoaded = _React$useState2[0],\n      setBgLoaded = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  React.useEffect(function () {\n    // check if bg image is already cached\n    // if yes, set as loaded\n    var image = new Image();\n    image.src = '/images/palm.png';\n    if (image.complete) setBgLoaded(true);\n  }, []);\n  var portfolioContext = React.useContext(PortfolioContext);\n  var portfolioState = portfolioContext.state;\n  var portfolioDispatch = portfolioContext.dispatch;\n  React.useEffect(function () {\n    if (portfolioState && portfolioDispatch) {\n      if (portfolioState.items.length === 0) {\n        var baseURL = 'https://joonajo-portfolio.firebaseio.com/items.json';\n        var newItems = [];\n        fetch(baseURL, {\n          method: 'get'\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          _Object$keys(data).forEach(function (item) {\n            newItems.push(data[item]);\n          });\n\n          portfolioDispatch({\n            type: TPortfolioActionTypes.SET_ITEMS,\n            payload: newItems\n          });\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [portfolioState]);\n  return __jsx(React.Fragment, null, (!bgLoaded || loading) && __jsx(Loading, null), __jsx(Layout, null, __jsx(Cover, {\n    load: function load() {\n      return setBgLoaded(true);\n    }\n  }), bgLoaded && __jsx(Content, null)));\n};\n\nvar Loading = function Loading() {\n  return __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/containers/Home/Home.tsx"],"names":["React","Cover","Layout","Content","CubeSpinner","PortfolioContext","TPortfolioActionTypes","css","require","Home","useState","bgLoaded","setBgLoaded","loading","setLoading","useEffect","image","Image","src","complete","portfolioContext","useContext","portfolioState","state","portfolioDispatch","dispatch","items","length","baseURL","newItems","fetch","method","then","response","json","data","forEach","item","push","type","SET_ITEMS","payload","Loading"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAA4BC,gBAA5B,EAA+DC,qBAA/D,QAA4F,gCAA5F;;AAIA,IAAMC,GAAG,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AAEA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAmB;AAAA,wBACNT,KAAK,CAACU,QAAN,CAAwB,KAAxB,CADM;AAAA;AAAA,MAC/BC,QAD+B;AAAA,MACrBC,WADqB;;AAAA,yBAERZ,KAAK,CAACU,QAAN,CAAwB,IAAxB,CAFQ;AAAA;AAAA,MAE/BG,OAF+B;AAAA,MAEtBC,UAFsB;;AAItCd,EAAAA,KAAK,CAACe,SAAN,CAAgB,YAAM;AAClB;AACA;AACA,QAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,IAAAA,KAAK,CAACE,GAAN,GAAY,kBAAZ;AACA,QAAIF,KAAK,CAACG,QAAV,EAAoBP,WAAW,CAAC,IAAD,CAAX;AACvB,GAND,EAMG,EANH;AAQA,MAAMQ,gBAAmC,GAAGpB,KAAK,CAACqB,UAAN,CAAiBhB,gBAAjB,CAA5C;AACA,MAAMiB,cAA+B,GAAGF,gBAAgB,CAACG,KAAzD;AACA,MAAMC,iBAA4B,GAAGJ,gBAAgB,CAACK,QAAtD;AAGAzB,EAAAA,KAAK,CAACe,SAAN,CAAgB,YAAM;AAClB,QAAIO,cAAc,IAAIE,iBAAtB,EAAyC;AACrC,UAAIF,cAAc,CAACI,KAAf,CAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACnC,YAAMC,OAAe,GAAG,qDAAxB;AAEA,YAAMC,QAA0B,GAAG,EAAnC;AAEAC,QAAAA,KAAK,CAACF,OAAD,EAAU;AAAEG,UAAAA,MAAM,EAAE;AAAV,SAAV,CAAL,CAAkCC,IAAlC,CAAuC,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SAA/C,EACKF,IADL,CACU,UAAAG,IAAI,EAAI;AACV,uBAAYA,IAAZ,EAAkBC,OAAlB,CAA0B,UAAAC,IAAI,EAAI;AAC9BR,YAAAA,QAAQ,CAACS,IAAT,CAAcH,IAAI,CAACE,IAAD,CAAlB;AACH,WAFD;;AAGAb,UAAAA,iBAAiB,CAAC;AAAEe,YAAAA,IAAI,EAAEjC,qBAAqB,CAACkC,SAA9B;AAAyCC,YAAAA,OAAO,EAAEZ;AAAlD,WAAD,CAAjB;AACAf,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH,SAPL;AAQH,OAbD,MAaO;AACHA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;AACJ,GAnBD,EAmBG,CAACQ,cAAD,CAnBH;AAqBA,SACI,4BACM,CAAC,CAACX,QAAD,IAAaE,OAAd,KAA0B,MAAC,OAAD,OADhC,EAEI,MAAC,MAAD,QACI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAE;AAAA,aAAMD,WAAW,CAAC,IAAD,CAAjB;AAAA;AAAb,IADJ,EAEMD,QAAQ,IAAI,MAAC,OAAD,OAFlB,CAFJ,CADJ;AASH,CA/CD;;AAiDA,IAAM+B,OAAgC,GAAG,SAAnCA,OAAmC,GAAmB;AACxD,SACI;AAAK,IAAA,SAAS,EAAEnC,GAAG,CAACmC;AAApB,KACI,MAAC,WAAD,OADJ,CADJ;AAKH,CAND;;AAQA,eAAejC,IAAf","sourcesContent":["import React from 'react'\r\n\r\nimport {Â NextPage } from 'next'\r\nimport Cover from '../../components/Cover/Cover'\r\nimport Layout from '../../components/UI/Layout/Layout'\r\nimport Content from '../../components/Content/Content'\r\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\r\nimport { IPortfolioContext, PortfolioContext, TPortfolioState, TPortfolioActionTypes } from '../../context/portfolioContext'\r\nimport { TDispatch } from '../../context/authContext'\r\nimport { IPortfolioItem } from '../../interfaces/interfaces'\r\n\r\nconst css = require('./Home.module.css')\r\n\r\nconst Home: NextPage = (): JSX.Element => {\r\n    const [bgLoaded, setBgLoaded] = React.useState<boolean>(false)\r\n    const [loading, setLoading] = React.useState<boolean>(true)\r\n\r\n    React.useEffect(() => {\r\n        // check if bg image is already cached\r\n        // if yes, set as loaded\r\n        const image = new Image()\r\n        image.src = '/images/palm.png'\r\n        if (image.complete) setBgLoaded(true)\r\n    }, [])\r\n\r\n    const portfolioContext: IPortfolioContext = React.useContext(PortfolioContext)\r\n    const portfolioState: TPortfolioState = portfolioContext.state\r\n    const portfolioDispatch: TDispatch = portfolioContext.dispatch!\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (portfolioState && portfolioDispatch) {\r\n            if (portfolioState.items.length === 0) {\r\n                const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items.json'\r\n\r\n                const newItems: IPortfolioItem[] = []\r\n                \r\n                fetch(baseURL, { method: 'get' }).then(response => response.json())\r\n                    .then(data => {\r\n                        Object.keys(data).forEach(item => {\r\n                            newItems.push(data[item])\r\n                        })\r\n                        portfolioDispatch({ type: TPortfolioActionTypes.SET_ITEMS, payload: newItems })\r\n                        setLoading(false)\r\n                    })\r\n            } else {\r\n                setLoading(false)\r\n            }\r\n        }\r\n    }, [portfolioState])\r\n\r\n    return (\r\n        <>\r\n            { (!bgLoaded || loading) && <Loading /> }\r\n            <Layout>\r\n                <Cover load={() => setBgLoaded(true)} />\r\n                { bgLoaded && <Content /> }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Loading: React.FunctionComponent = (): JSX.Element => {\r\n    return (\r\n        <div className={css.Loading}>\r\n            <CubeSpinner />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}