{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\n\nconst css = require('./index.module.css');\n\nconst AdminPage = () => {\n  const [isSignedIn, setIsSignedIn] = React.useState(false);\n\n  const signInHandler = (email, password) => {\n    console.log(email, password);\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main\n  }, !isSignedIn && __jsx(AuthForm, {\n    signIn: signInHandler\n  }));\n};\n\nconst initialAuthFormState = {\n  email: {\n    id: 'email',\n    inputType: 'email',\n    placeholder: 'email',\n    require: true,\n    value: '',\n    className: css.EmailInput,\n    icon: {\n      focus: icons.faEnvelopeOpen,\n      unfocus: icons.faEnvelope\n    }\n  },\n  password: {\n    id: 'password',\n    inputType: 'password',\n    placeholder: 'password',\n    require: true,\n    value: '',\n    className: css.PasswordInput,\n    icon: {\n      focus: icons.faUnlock,\n      unfocus: icons.faLock\n    }\n  }\n};\n\nconst AuthForm = ({\n  signIn\n}) => {\n  const [formState, setFormState] = React.useState(initialAuthFormState);\n  React.useEffect(() => {\n    const keyHandler = event => {\n      if (event.key === 'Enter') {\n        signInHandler();\n      }\n    };\n\n    window.addEventListener('keydown', keyHandler, true);\n    return () => window.removeEventListener('keydown', keyHandler, true);\n  }, [formState]);\n\n  const changeHandler = (elemKey, event) => {\n    const updatedFormState = _objectSpread({}, formState, {\n      [elemKey]: _objectSpread({}, formState[elemKey], {\n        value: event.target.value\n      })\n    });\n\n    setFormState(updatedFormState);\n  };\n\n  const signInHandler = () => {\n    signIn(formState.email.value, formState.password.value);\n  };\n\n  return __jsx(\"div\", {\n    className: css.AuthFormContainer\n  }, __jsx(\"h2\", {\n    className: css.FormTitle\n  }, \"Admin Auth\"), __jsx(\"form\", {\n    className: css.AuthForm\n  }, Object.keys(formState).map(elementKey => {\n    return __jsx(InputComponent, _extends({\n      key: elementKey\n    }, formState[elementKey], {\n      changed: changeHandler\n    }));\n  })), __jsx(\"div\", {\n    className: css.SubmitButton,\n    onClick: signInHandler\n  }, __jsx(\"p\", null, \"Sign In\"), __jsx(FontAwesomeIcon, {\n    icon: icons.faSignInAlt\n  })));\n};\n\nconst InputComponent = props => {\n  var _props$icon;\n\n  const [isFocused, setIsFocused] = React.useState(false);\n  const iconClasses = [css.InputIcon, isFocused && css.focus].join(' ');\n  return __jsx(\"div\", {\n    className: css.InputContainer\n  }, props.icon && __jsx(\"div\", {\n    className: css.IconContainer\n  }, __jsx(FontAwesomeIcon, {\n    className: iconClasses,\n    icon: (_props$icon = props.icon) === null || _props$icon === void 0 ? void 0 : _props$icon.unfocus\n  })), __jsx(\"input\", {\n    className: props.className,\n    placeholder: props.placeholder,\n    value: props.value,\n    type: props.inputType,\n    onChange: e => props.changed(props.id, e),\n    onFocus: () => setIsFocused(true),\n    onBlur: () => setIsFocused(false)\n  }));\n};\n\nexport default AdminPage;","map":{"version":3,"sources":["C:/Users/Joonajo/code/portfolio/pages/admin/index.tsx"],"names":["React","FontAwesomeIcon","icons","css","require","AdminPage","isSignedIn","setIsSignedIn","useState","signInHandler","email","password","console","log","Main","initialAuthFormState","id","inputType","placeholder","value","className","EmailInput","icon","focus","faEnvelopeOpen","unfocus","faEnvelope","PasswordInput","faUnlock","faLock","AuthForm","signIn","formState","setFormState","useEffect","keyHandler","event","key","window","addEventListener","removeEventListener","changeHandler","elemKey","updatedFormState","target","AuthFormContainer","FormTitle","Object","keys","map","elementKey","SubmitButton","faSignInAlt","InputComponent","props","isFocused","setIsFocused","iconClasses","InputIcon","join","InputContainer","IconContainer","e","changed"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\nimport { NextPage } from 'next'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../icons/icons'\r\n\r\nconst css = require('./index.module.css')\r\n\r\nconst AdminPage: NextPage = (): JSX.Element => {\r\n    const [isSignedIn, setIsSignedIn] = React.useState<boolean>(false)\r\n\r\n    const signInHandler = (email: string, password: string) =>  {\r\n        console.log(email, password)\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main}>\r\n            { !isSignedIn && <AuthForm signIn={signInHandler} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IFormElement {\r\n    id: string\r\n    inputType: string\r\n    value: string\r\n    placeholder?: string\r\n    require?: boolean\r\n    className?: string\r\n    icon? : { focus?: any, unfocus?: any }\r\n}\r\n\r\ninterface IFormState {\r\n    [email: string]: IFormElement\r\n    password: IFormElement\r\n}\r\n\r\nconst initialAuthFormState: IFormState = {\r\n    email: {\r\n        id: 'email',\r\n        inputType: 'email',\r\n        placeholder: 'email',\r\n        require: true,\r\n        value: '',\r\n        className: css.EmailInput,\r\n        icon: { focus: icons.faEnvelopeOpen, unfocus: icons.faEnvelope }\r\n    },\r\n    password: {\r\n        id: 'password',\r\n        inputType: 'password',\r\n        placeholder: 'password',\r\n        require: true,\r\n        value: '',\r\n        className: css.PasswordInput,\r\n        icon: { focus: icons.faUnlock, unfocus: icons.faLock }\r\n    },\r\n}\r\n\r\ninterface IAuthForm {\r\n    signIn: (email: string, password: string) => void\r\n}\r\n\r\nconst AuthForm: React.FunctionComponent<IAuthForm> = ({ signIn }): JSX.Element => {\r\n    const [formState, setFormState] = React.useState<IFormState>(initialAuthFormState)\r\n\r\n    React.useEffect(() => {\r\n        const keyHandler = (event: KeyboardEvent) => {\r\n            if (event.key === 'Enter') {\r\n                signInHandler()\r\n            }\r\n        }\r\n\r\n        window.addEventListener('keydown', keyHandler, true)\r\n\r\n        return () => window.removeEventListener('keydown', keyHandler, true)\r\n    }, [formState])\r\n\r\n    const changeHandler = (elemKey: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedFormState: IFormState = {\r\n            ...formState,\r\n            [elemKey]: {\r\n                ...formState[elemKey],\r\n                value: event.target.value\r\n            }\r\n        }\r\n        setFormState(updatedFormState)\r\n    }\r\n\r\n    const signInHandler = () => {\r\n        signIn(formState.email.value, formState.password.value)\r\n    }\r\n\r\n    return (\r\n        <div className={css.AuthFormContainer}>\r\n            <h2 className={css.FormTitle}>Admin Auth</h2>\r\n            <form className={css.AuthForm}>\r\n                { Object.keys(formState).map((elementKey: string) => {\r\n                    return (\r\n                        <InputComponent key={elementKey} {...formState[elementKey]} changed={changeHandler} />\r\n                    )\r\n                })}\r\n            </form>\r\n            <div className={css.SubmitButton} onClick={signInHandler}>\r\n                <p>Sign In</p>\r\n                <FontAwesomeIcon icon={icons.faSignInAlt} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IInputComponent extends IFormElement {\r\n    changed: (elemKey: string, event: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst InputComponent: React.FunctionComponent<IInputComponent> = (props): JSX.Element => {\r\n    const [isFocused, setIsFocused] = React.useState<boolean>(false)\r\n\r\n    const iconClasses = [\r\n        css.InputIcon,\r\n        isFocused && css.focus\r\n    ].join(' ')\r\n\r\n    return (\r\n        <div className={css.InputContainer}>\r\n            { props.icon &&  \r\n                <div className={css.IconContainer}>\r\n                    <FontAwesomeIcon className={iconClasses} icon={props.icon?.unfocus} />\r\n                </div>\r\n            }\r\n            <input className={props.className} \r\n                placeholder={props.placeholder}\r\n                value={props.value} \r\n                type={props.inputType}\r\n                onChange={(e) => props.changed(props.id, e)}\r\n                onFocus={() => setIsFocused(true)}\r\n                onBlur={() => setIsFocused(false)} /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage"]},"metadata":{},"sourceType":"module"}