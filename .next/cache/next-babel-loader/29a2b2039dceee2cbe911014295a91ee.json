{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Auth from '../../containers/Auth/Auth';\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\nimport { AuthContext } from '../../context/authContext';\nimport { Languages } from '../../portfolio/portfolio';\n\nvar css = require('./Admin.module.css');\n\nvar Admin = function Admin() {\n  var authContext = React.useContext(AuthContext);\n  var state = authContext.state;\n  var dispatch = authContext.dispatch;\n  console.log(state);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sending = _React$useState2[0],\n      setSending = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      screensize = _React$useState4[0],\n      setScreensize = _React$useState4[1];\n\n  React.useEffect(function () {\n    document.title = 'Portfolio // Admin';\n    setScreensize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    if (localStorage.length !== 0) {\n      // check for auth info in local storage\n      // compare current time in milliseconds to expire time in storage\n      // if current time is LESS, use the auth info from storage to refresh\n      // else, clear local storage\n      var expireTime = localStorage.getItem('expireTime');\n\n      if (expireTime) {\n        // if auth token has not expired yet\n        if (new Date().getTime() < +expireTime) {\n          var authInfo = {\n            email: localStorage.getItem('email'),\n            password: localStorage.getItem('password'),\n            idToken: localStorage.getItem('idToken')\n          };\n          dispatch({\n            type: 'signin',\n            payload: authInfo\n          });\n          setSending(false); // if auth has expired\n        } else {\n          localStorage.clear();\n          setSending(false);\n        }\n      }\n    } else {\n      setSending(false);\n    }\n  }, []);\n\n  var signInHandler = function signInHandler(email, password, idToken) {\n    var authInfo = {\n      email: email,\n      password: password,\n      idToken: idToken\n    };\n    dispatch({\n      type: 'signin',\n      payload: authInfo\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main,\n    style: {\n      minHeight: \"\".concat(screensize === null || screensize === void 0 ? void 0 : screensize.height, \"px\"),\n      minWidth: \"\".concat(screensize === null || screensize === void 0 ? void 0 : screensize.width, \"px\")\n    }\n  }, !state.signedIn && __jsx(Auth, {\n    setSending: setSending,\n    signIn: signInHandler\n  }), sending && __jsx(Loading, null), state.signedIn && __jsx(AdminContent, {\n    token: state.idToken\n  }));\n};\n\nvar Loading = function Loading() {\n  return __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null));\n};\n\nvar AdminContent = function AdminContent(_ref) {\n  var token = _ref.token;\n  return __jsx(\"div\", {\n    className: css.AdminContentWrapper\n  }, __jsx(PortfolioItems, null));\n};\n\nvar PortfolioItems = function PortfolioItems(_ref2) {\n  var items = _ref2.items;\n  return __jsx(\"div\", {\n    className: css.ItemsContainer\n  }, items && items.map(function (item) {\n    return __jsx(\"div\", null, \"item\");\n  }), __jsx(AddPortfolioItem, null));\n};\n\nvar initialForm = {\n  title: {\n    id: 'title',\n    type: 'text',\n    placeholder: 'title',\n    require: true,\n    value: ''\n  },\n  description: {\n    id: 'description',\n    type: 'text',\n    placeholder: 'description',\n    require: true,\n    value: ''\n  },\n  link: {\n    id: 'link',\n    type: 'text',\n    placeholder: 'link to app',\n    require: true,\n    value: ''\n  },\n  github: {\n    id: 'github',\n    type: 'text',\n    placeholder: 'github link',\n    require: true,\n    value: ''\n  },\n  video_src: {\n    id: 'video_src',\n    type: 'text',\n    placeholder: 'video link',\n    require: true,\n    value: ''\n  },\n  gif_src: {\n    id: 'gif_src',\n    type: 'text',\n    placeholder: 'gif link',\n    require: true,\n    value: ''\n  },\n  desktop: {\n    id: 'desktop',\n    type: 'select',\n    require: true,\n    value: ''\n  },\n  mobile: {\n    id: 'mobile',\n    type: 'select',\n    require: true,\n    value: ''\n  }\n};\n\nvar AddPortfolioItem = function AddPortfolioItem() {\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      showForm = _React$useState6[0],\n      setShowForm = _React$useState6[1];\n\n  var addItemToDatabase = function addItemToDatabase(item) {\n    var baseURL = 'https://joonajo-portfolio.firebaseio.com/items.json';\n    var idToken = localStorage.getItem('idToken');\n    var tokenParam = \"?auth=\".concat(idToken);\n    var newItem = {\n      name: 'test'\n    };\n    fetch(baseURL + tokenParam, {\n      method: 'put',\n      body: newItem\n    }).then(function (response) {\n      return response.json().then(function (data) {\n        console.log(data);\n      });\n    });\n  };\n\n  var clickHandler = function clickHandler() {\n    setShowForm(true);\n  };\n\n  return __jsx(\"div\", {\n    className: css.AddItemContainer\n  }, __jsx(\"span\", {\n    className: css.AddItemButton,\n    onClick: clickHandler\n  }, \"add item \", __jsx(FontAwesomeIcon, {\n    icon: icons.faPlus,\n    className: css.AddItemIcon\n  })), __jsx(NewItemForm, {\n    show: showForm,\n    close: function close() {\n      return setShowForm(false);\n    },\n    add: addItemToDatabase\n  }));\n};\n\nvar NewItemForm = function NewItemForm(_ref3) {\n  var show = _ref3.show,\n      close = _ref3.close,\n      add = _ref3.add;\n\n  var _React$useState7 = React.useState(initialForm),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      form = _React$useState8[0],\n      setForm = _React$useState8[1];\n\n  var changeHandler = function changeHandler(id, event) {\n    var updatedForm = _objectSpread({}, form, _defineProperty({}, id, _objectSpread({}, form[id], {\n      value: event.target.value\n    })));\n\n    setForm(updatedForm);\n  };\n\n  var addHandler = function addHandler() {\n    var newItem = {\n      title: form.title.value,\n      language: [Languages.React, Languages.TypeScript],\n      description: form.description.value,\n      link: form.link.value,\n      githubLink: form.github.value,\n      video_src: form.video_src.value,\n      gif_src: form.gif_src.value,\n      desktop: true,\n      mobile: true\n    };\n  };\n\n  var itemFormClasses = [css.ItemForm, show && css.show].join(' ');\n  return __jsx(\"div\", {\n    className: itemFormClasses\n  }, __jsx(FontAwesomeIcon, {\n    className: css.FormCloseButton,\n    icon: icons.faTimes,\n    onClick: close\n  }), _Object$keys(form).map(function (element) {\n    return __jsx(\"input\", {\n      key: element,\n      className: css.Input,\n      type: form[element].type,\n      value: form[element].value,\n      placeholder: form[element].placeholder,\n      onChange: function onChange(e) {\n        return changeHandler(form[element].id, e);\n      }\n    });\n  }), __jsx(\"div\", {\n    className: css.FormAddButton,\n    onClick: addHandler\n  }, __jsx(\"p\", null, \"add\")));\n};\n\nexport default Admin;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/containers/Admin/Admin.tsx"],"names":["React","Auth","CubeSpinner","FontAwesomeIcon","icons","AuthContext","Languages","css","require","Admin","authContext","useContext","state","dispatch","console","log","useState","sending","setSending","screensize","setScreensize","useEffect","document","title","width","window","innerWidth","height","innerHeight","localStorage","length","expireTime","getItem","Date","getTime","authInfo","email","password","idToken","type","payload","clear","signInHandler","Main","minHeight","minWidth","signedIn","Loading","AdminContent","token","AdminContentWrapper","PortfolioItems","items","ItemsContainer","map","item","initialForm","id","placeholder","value","description","link","github","video_src","gif_src","desktop","mobile","AddPortfolioItem","showForm","setShowForm","addItemToDatabase","baseURL","tokenParam","newItem","name","fetch","method","body","then","response","json","data","clickHandler","AddItemContainer","AddItemButton","faPlus","AddItemIcon","NewItemForm","show","close","add","form","setForm","changeHandler","event","updatedForm","target","addHandler","language","TypeScript","githubLink","itemFormClasses","ItemForm","join","FormCloseButton","faTimes","element","Input","e","FormAddButton"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\nimport Auth from '../../containers/Auth/Auth'\r\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../icons/icons'\r\nimport { IPortfolioItem } from '../../interfaces/interfaces'\r\nimport { IAuthContext, AuthContext, TAuthState, TDispatch } from '../../context/authContext'\r\nimport { Languages } from '../../portfolio/portfolio'\r\n\r\nconst css = require('./Admin.module.css')\r\n\r\nconst Admin: React.FunctionComponent = (): JSX.Element => {\r\n    const authContext: IAuthContext = React.useContext(AuthContext)\r\n    const state: TAuthState = authContext.state\r\n    const dispatch: TDispatch = authContext.dispatch!\r\n\r\n    console.log(state)\r\n\r\n    const [sending, setSending] = React.useState<boolean>(true)\r\n    const [screensize, setScreensize] = React.useState<{ width: number, height: number}>()\r\n\r\n    React.useEffect(() => {\r\n        document.title = 'Portfolio // Admin'\r\n\r\n        setScreensize({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        })\r\n\r\n        if (localStorage.length !== 0) {\r\n            // check for auth info in local storage\r\n            // compare current time in milliseconds to expire time in storage\r\n            // if current time is LESS, use the auth info from storage to refresh\r\n            // else, clear local storage\r\n            const expireTime = (localStorage.getItem('expireTime'))\r\n            if (expireTime) {\r\n                // if auth token has not expired yet\r\n                if (new Date().getTime() < +expireTime) {\r\n                    const authInfo = {\r\n                        email: localStorage.getItem('email')!,\r\n                        password: localStorage.getItem('password')!,\r\n                        idToken: localStorage.getItem('idToken')!\r\n                    }\r\n                    dispatch({ type: 'signin', payload: authInfo })\r\n                    setSending(false)\r\n                // if auth has expired\r\n                } else {\r\n                    localStorage.clear()\r\n                    setSending(false)\r\n                }\r\n            }\r\n        } else {\r\n            setSending(false)\r\n        }\r\n    }, [])\r\n\r\n    const signInHandler = (email: string, password: string, idToken: string) => {\r\n        const authInfo = {\r\n            email: email,\r\n            password: password,\r\n            idToken: idToken\r\n        }\r\n        dispatch({ type: 'signin', payload: authInfo })\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main} style={{minHeight: `${screensize?.height}px`, minWidth: `${screensize?.width}px`}}>\r\n            { !state.signedIn && <Auth setSending={setSending} signIn={signInHandler} /> }\r\n            { sending && <Loading /> }\r\n            { state. signedIn && <AdminContent token={state.idToken!} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Loading: React.FunctionComponent = (): JSX.Element => (\r\n    <div className={css.Loading}>\r\n        <CubeSpinner />\r\n    </div>\r\n)\r\n\r\ninterface IAdminContent {\r\n    token: string\r\n}\r\n\r\nconst AdminContent: React.FunctionComponent<IAdminContent> = ({ token }): JSX.Element => {\r\n    return (\r\n        <div className={css.AdminContentWrapper}>\r\n            <PortfolioItems />\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IPortfolioItems {\r\n    items?: IPortfolioItem[]\r\n}\r\n\r\nconst PortfolioItems: React.FunctionComponent<IPortfolioItems> = ({ items }): JSX.Element => {\r\n    return (\r\n        <div className={css.ItemsContainer}>\r\n            { items && items.map((item: IPortfolioItem) => {\r\n                return (\r\n                    <div>\r\n                        item\r\n                    </div>\r\n                )\r\n            })}\r\n            <AddPortfolioItem />\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IItemElement {\r\n    id: string\r\n    type: string\r\n    placeholder?: string\r\n    require: boolean\r\n    value: string\r\n}\r\n\r\ninterface IItemForm {\r\n    [title: string]: IItemElement\r\n    description: IItemElement\r\n    link: IItemElement\r\n    github: IItemElement\r\n    video_src: IItemElement\r\n    gif_src: IItemElement\r\n    desktop: IItemElement\r\n    mobile: IItemElement  \r\n}\r\n\r\nconst initialForm: IItemForm = {\r\n    title: {\r\n        id: 'title',\r\n        type: 'text',\r\n        placeholder: 'title',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    description: {\r\n        id: 'description',\r\n        type: 'text',\r\n        placeholder: 'description',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    link: {\r\n        id: 'link',\r\n        type: 'text',\r\n        placeholder: 'link to app',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    github: {\r\n        id: 'github',\r\n        type: 'text',\r\n        placeholder: 'github link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    video_src: {\r\n        id: 'video_src',\r\n        type: 'text',\r\n        placeholder: 'video link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    gif_src: {\r\n        id: 'gif_src',\r\n        type: 'text',\r\n        placeholder: 'gif link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    desktop: {\r\n        id: 'desktop',\r\n        type: 'select',\r\n        require: true,\r\n        value: ''\r\n    },\r\n    mobile: {   \r\n        id: 'mobile',\r\n        type: 'select',\r\n        require: true,\r\n        value: ''\r\n    }\r\n}\r\n\r\nconst AddPortfolioItem: React.FunctionComponent = (): JSX.Element => {\r\n    const [showForm, setShowForm] = React.useState<boolean>(false)\r\n\r\n    const addItemToDatabase = (item: IPortfolioItem) => {\r\n        const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items.json'\r\n        const idToken: string = localStorage.getItem('idToken')!\r\n        const tokenParam: string = `?auth=${idToken}`\r\n\r\n        const newItem: any = {\r\n            name: 'test'\r\n        }\r\n\r\n        fetch(baseURL + tokenParam, { method: 'put', body: newItem }).then(response => response.json()\r\n            .then(data => {\r\n                console.log(data)\r\n            }))\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        setShowForm(true)\r\n    }\r\n\r\n    return (\r\n        <div className={css.AddItemContainer}>\r\n            <span className={css.AddItemButton} onClick={clickHandler}>add item <FontAwesomeIcon icon={icons.faPlus} className={css.AddItemIcon} /></span>\r\n            <NewItemForm show={showForm} close={() => setShowForm(false)} add={addItemToDatabase} />\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface INewItemForm {\r\n    show: boolean\r\n    close: () => void\r\n    add: (item: IPortfolioItem) => void\r\n}\r\n\r\nconst NewItemForm: React.FunctionComponent<INewItemForm> = ({ show, close, add }): JSX.Element => {\r\n    const [form, setForm] = React.useState<IItemForm>(initialForm)\r\n\r\n    const changeHandler = (id: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedForm: IItemForm = {\r\n            ...form,\r\n            [id]: {\r\n                ...form[id],\r\n                value: event.target.value\r\n            }\r\n        }\r\n        setForm(updatedForm)\r\n    }\r\n\r\n    const addHandler = () => {\r\n        const newItem: IPortfolioItem = {\r\n            title: form.title.value,\r\n            language: [Languages.React, Languages.TypeScript],\r\n            description: form.description.value,\r\n            link: form.link.value,\r\n            githubLink: form.github.value,\r\n            video_src: form.video_src.value,\r\n            gif_src: form.gif_src.value,\r\n            desktop: true,\r\n            mobile: true\r\n        }\r\n    }\r\n    \r\n    const itemFormClasses = [\r\n        css.ItemForm,\r\n        show && css.show\r\n    ].join(' ')\r\n\r\n    return (\r\n        <div className={itemFormClasses}>\r\n            <FontAwesomeIcon className={css.FormCloseButton} icon={icons.faTimes} onClick={close} />\r\n            { Object.keys(form).map((element: string) => {\r\n                return (\r\n                    <input key={element}\r\n                        className={css.Input} \r\n                        type={form[element].type}\r\n                        value={form[element].value} \r\n                        placeholder={form[element].placeholder}\r\n                        onChange={(e) => changeHandler(form[element].id, e)} />\r\n                )\r\n            })}\r\n            <div className={css.FormAddButton} onClick={addHandler}>\r\n                <p>add</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n"]},"metadata":{},"sourceType":"module"}