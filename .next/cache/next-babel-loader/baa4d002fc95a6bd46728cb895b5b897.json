{"ast":null,"code":"var _jsxFileName = \"/home/joojo/code/portfolio/components/Cover/Cover.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons';\nimport { ToolbarContext } from '../../context/toolbarContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\n\nconst css = require('./Cover.css');\n\nconst Cover = React.memo(() => {\n  const toolbarContext = React.useContext(ToolbarContext);\n  const coverRef = React.useRef(null);\n  React.useEffect(() => {\n    window.addEventListener('scroll', scrollHandler, true);\n    return () => window.removeEventListener('scroll', scrollHandler, true);\n  }, []);\n\n  const scrollHandler = () => {};\n\n  const scrollToPortfolio = React.useCallback(() => {\n    if (coverRef && coverRef.current) {\n      const posToScrollTo = coverRef.current.clientHeight;\n      window.scrollTo({\n        top: posToScrollTo,\n        left: 0,\n        behavior: \"smooth\"\n      });\n    }\n  }, [coverRef]);\n  const [arrowIn, setArrowIn] = React.useState(undefined);\n  const arrowTextClasses = [css.ArrowText, arrowIn ? css.in : arrowIn === false ? css.out : null].join(' ');\n\n  const transitionHandler = () => {\n    if (!arrowIn) {\n      setArrowIn(undefined);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main,\n    ref: coverRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.Parallax,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: css.MediaIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(MediaIcons, {\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: css.TitleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: css.FirstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Joona\"), __jsx(\"span\", {\n    className: css.Surname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Joenpolvi\"), __jsx(\"span\", {\n    className: css.Description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Front-End Developer\")), __jsx(\"div\", {\n    className: css.ArrowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.ArrowIcon,\n    onClick: scrollToPortfolio,\n    onMouseOver: () => setArrowIn(true),\n    onMouseOut: () => setArrowIn(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faChevronDown,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), __jsx(\"p\", {\n    className: arrowTextClasses,\n    onTransitionEnd: transitionHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"to portfolio\")));\n});\nexport default Cover;","map":{"version":3,"sources":["/home/joojo/code/portfolio/components/Cover/Cover.tsx"],"names":["React","MediaIcons","ToolbarContext","FontAwesomeIcon","icons","css","require","Cover","memo","toolbarContext","useContext","coverRef","useRef","useEffect","window","addEventListener","scrollHandler","removeEventListener","scrollToPortfolio","useCallback","current","posToScrollTo","clientHeight","scrollTo","top","left","behavior","arrowIn","setArrowIn","useState","undefined","arrowTextClasses","ArrowText","in","out","join","transitionHandler","Main","Parallax","TitleContainer","FirstName","Surname","Description","ArrowContainer","ArrowIcon","faChevronDown"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\nimport { IToolbar, ToolbarContext } from '../../context/toolbarContext'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { icons } from '../../icons/icons'\n\nconst css = require('./Cover.css')\n\nconst Cover = React.memo((): JSX.Element => {\n    const toolbarContext: IToolbar = React.useContext(ToolbarContext)\n    const coverRef = React.useRef<HTMLDivElement>(null)\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', scrollHandler, true)\n\n        return () => window.removeEventListener('scroll', scrollHandler, true)\n    }, [])\n\n    const scrollHandler = () => {\n\n    }\n\n    const scrollToPortfolio = React.useCallback(() => {\n        if (coverRef && coverRef.current) {\n            const posToScrollTo: number = coverRef.current.clientHeight\n    \n            window.scrollTo({\n                top: posToScrollTo,\n                left: 0,\n                behavior: \"smooth\",\n            })\n        }\n    }, [coverRef])\n\n    const[arrowIn, setArrowIn] = React.useState<boolean | undefined>(undefined)\n\n    const arrowTextClasses = [\n        css.ArrowText,\n        arrowIn ? css.in : arrowIn === false ? css.out : null\n    ].join(' ')\n\n    const transitionHandler = () => {\n        if (!arrowIn) {\n            setArrowIn(undefined)\n        }\n    }\n\n    return (\n        <div className={css.Main} ref={coverRef}>\n            <div className={css.Parallax}>\n            </div>\n            <div className={css.MediaIcons}>\n                <MediaIcons vertical />\n            </div>\n            <div className={css.TitleContainer}>\n                <span className={css.FirstName}>Joona</span>\n                <span className={css.Surname}>Joenpolvi</span>\n                <span className={css.Description}>Front-End Developer</span>\n            </div>\n            <div className={css.ArrowContainer} >\n                <div className={css.ArrowIcon}\n                    onClick={scrollToPortfolio}\n                    onMouseOver={() => setArrowIn(true)}\n                    onMouseOut={() => setArrowIn(false)}> \n                    <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\n                </div>\n                <p className={arrowTextClasses} onTransitionEnd={transitionHandler}>to portfolio</p>\n            </div>\n        </div>\n    )\n})\n\nexport default Cover"]},"metadata":{},"sourceType":"module"}