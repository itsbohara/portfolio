{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport zenscroll from 'zenscroll';\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\n\nconst css = require('./Cover.module.css');\n\nconst Cover = React.memo(() => {\n  const coverRef = React.useRef(null);\n  const [height, setHeight] = React.useState(undefined);\n  React.useEffect(() => {\n    setHeight(window.innerHeight);\n    window.addEventListener('scroll', scrollHandler, true);\n    return () => window.removeEventListener('scroll', scrollHandler, true);\n  }, []);\n\n  const scrollHandler = () => {};\n\n  const scrollToPortfolio = React.useCallback(() => {\n    if (coverRef && coverRef.current) {\n      const posToScrollTo = coverRef.current.clientHeight;\n      zenscroll.toY(posToScrollTo);\n    }\n  }, [coverRef]);\n  const mouseInRef = React.useRef(false);\n  const mouseOutRef = React.useRef(false);\n  const animInProgressRef = React.useRef(false);\n  const arrowTextClasses = [css.ArrowText].join(' ');\n  console.log(mouseInRef.current);\n\n  const transitionHandler = () => {\n    if (mouseOutRef.current && animInProgressRef.current) {}\n  };\n\n  const hoverHandler = mouseIn => {\n    if (!mouseInRef.current && mouseIn) {\n      mouseInRef.current = true;\n      animInProgressRef.current = true;\n    } // if (arrowIn === undefined) {\n    //     setArrowIn(true)\n    // }\n\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main,\n    ref: coverRef,\n    style: {\n      height: `${height}px`\n    }\n  }, __jsx(\"div\", {\n    className: css.BackgroundContainer\n  }, __jsx(\"div\", {\n    className: css.BackgroundMask\n  })), __jsx(\"div\", {\n    className: css.MediaIcons\n  }, __jsx(MediaIcons, {\n    vertical: true\n  })), __jsx(\"div\", {\n    className: css.TitleContainer\n  }, __jsx(\"h1\", {\n    className: css.FirstName\n  }, \"Joona\"), __jsx(\"h1\", {\n    className: css.Surname\n  }, \"Joenpolvi\"), __jsx(\"h3\", {\n    className: css.Description\n  }, \" \", \"<Front End Developer />\", \" \")), __jsx(\"div\", {\n    className: css.ArrowContainer\n  }, __jsx(\"div\", {\n    className: css.ArrowIcon,\n    onClick: scrollToPortfolio,\n    onMouseOver: () => hoverHandler(true),\n    onMouseOut: () => hoverHandler(false)\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faChevronDown,\n    size: \"lg\"\n  })), __jsx(\"p\", {\n    className: arrowTextClasses,\n    onTransitionEnd: transitionHandler\n  }, \"to portfolio\")));\n});\nexport default Cover;","map":{"version":3,"sources":["C:/Users/Joonajo/code/portfolio/components/Cover/Cover.tsx"],"names":["React","zenscroll","MediaIcons","FontAwesomeIcon","icons","css","require","Cover","memo","coverRef","useRef","height","setHeight","useState","undefined","useEffect","window","innerHeight","addEventListener","scrollHandler","removeEventListener","scrollToPortfolio","useCallback","current","posToScrollTo","clientHeight","toY","mouseInRef","mouseOutRef","animInProgressRef","arrowTextClasses","ArrowText","join","console","log","transitionHandler","hoverHandler","mouseIn","Main","BackgroundContainer","BackgroundMask","TitleContainer","FirstName","Surname","Description","ArrowContainer","ArrowIcon","faChevronDown"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport zenscroll from 'zenscroll'\r\n\r\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\r\nimport { IToolbar, ToolbarContext } from '../../context/toolbarContext'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../icons/icons'\r\n\r\nconst css = require('./Cover.module.css')\r\n\r\nconst Cover = React.memo((): JSX.Element => {\r\n    const coverRef = React.useRef<HTMLDivElement>(null)\r\n    const[height, setHeight] = React.useState<number | undefined>(undefined)\r\n    \r\n    React.useEffect(() => {\r\n        setHeight(window.innerHeight)\r\n\r\n        window.addEventListener('scroll', scrollHandler, true)\r\n\r\n        return () => window.removeEventListener('scroll', scrollHandler, true)\r\n    }, [])\r\n\r\n    const scrollHandler = () => {\r\n\r\n    }\r\n\r\n    const scrollToPortfolio = React.useCallback(() => {\r\n        if (coverRef && coverRef.current) {\r\n            const posToScrollTo: number = coverRef.current.clientHeight\r\n    \r\n            zenscroll.toY(posToScrollTo)\r\n        }\r\n    }, [coverRef])\r\n\r\n    const mouseInRef = React.useRef<boolean>(false)\r\n    const mouseOutRef = React.useRef<boolean>(false)\r\n    const animInProgressRef = React.useRef<boolean>(false)\r\n\r\n    const arrowTextClasses = [\r\n        css.ArrowText,\r\n    ].join(' ')\r\n\r\n    console.log(mouseInRef.current)\r\n\r\n    const transitionHandler = () => {\r\n        if (mouseOutRef.current && animInProgressRef.current) {\r\n\r\n        }\r\n    }\r\n\r\n    const hoverHandler = (mouseIn: boolean) => {\r\n        if (!mouseInRef.current && mouseIn) {\r\n            mouseInRef.current = true\r\n            animInProgressRef.current = true\r\n        }\r\n        // if (arrowIn === undefined) {\r\n        //     setArrowIn(true)\r\n        // }\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main} ref={coverRef} style={{height: `${height}px`}}>\r\n            <div className={css.BackgroundContainer}>\r\n                {/* <img src=\"/images/palm.png\" alt=\"cover-bg-palm\" className={css.BackgroundImage} style={{minHeight: `${height}px`}} /> */}\r\n                <div className={css.BackgroundMask} />\r\n            </div>\r\n            <div className={css.MediaIcons}>\r\n                <MediaIcons vertical />\r\n            </div>\r\n            <div className={css.TitleContainer}>\r\n                <h1 className={css.FirstName}>Joona</h1>\r\n                <h1 className={css.Surname}>Joenpolvi</h1>\r\n                <h3 className={css.Description}> {\"<Front End Developer />\"} </h3>\r\n            </div>\r\n            <div className={css.ArrowContainer} >\r\n                <div className={css.ArrowIcon}\r\n                    onClick={scrollToPortfolio}\r\n                    onMouseOver={() => hoverHandler(true)}\r\n                    onMouseOut={() => hoverHandler(false)}> \r\n                    <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\r\n                </div>\r\n                <p className={arrowTextClasses} onTransitionEnd={transitionHandler}>to portfolio</p>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Cover"]},"metadata":{},"sourceType":"module"}