{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner';\nimport Auth from '../../containers/Auth/Auth';\n\nconst css = require('./index.module.css');\n\nconst AdminPage = () => {\n  const [signedIn, setSignedIn] = React.useState(false);\n  const [sending, setSending] = React.useState(false);\n  const [screensize, setScreensize] = React.useState();\n  React.useEffect(() => {\n    document.title = 'Portfolio // Admin';\n    setScreensize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    if (localStorage.length !== 0) {\n      // check for auth info in local storage\n      // compare current time in milliseconds to expire time in storage\n      // if current time is LESS, use the auth info from storage to refresh\n      // else, clear local storage\n      if (new Date().getTime() < +localStorage.getItem('expireTime')) {\n        console.log('use old auth info');\n        localStorage.clear();\n      } else {\n        console.log('clear local storage');\n        localStorage.clear();\n      }\n    }\n  }, []);\n  return __jsx(\"div\", {\n    className: css.Main,\n    style: {\n      minHeight: `${screensize === null || screensize === void 0 ? void 0 : screensize.height}px`,\n      minWidth: `${screensize === null || screensize === void 0 ? void 0 : screensize.width}px`\n    }\n  }, !signedIn && __jsx(Auth, {\n    setSending: setSending,\n    setSignedIn: setSignedIn\n  }), signedIn && __jsx(\"p\", null, \"Signed In.\"), sending && __jsx(Loading, null));\n};\n\nconst Loading = () => __jsx(\"div\", {\n  className: css.Loading\n}, __jsx(CubeSpinner, null));\n\nexport default AdminPage;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/pages/admin/index.tsx"],"names":["React","CubeSpinner","Auth","css","require","AdminPage","signedIn","setSignedIn","useState","sending","setSending","screensize","setScreensize","useEffect","document","title","width","window","innerWidth","height","innerHeight","localStorage","length","Date","getTime","getItem","console","log","clear","Main","minHeight","minWidth","Loading"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,SAASC,WAAT,QAA4B,qCAA5B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AAEA,MAAMC,SAAmB,GAAG,MAAmB;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,KAAK,CAACQ,QAAN,CAAwB,KAAxB,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACQ,QAAN,CAAwB,KAAxB,CAA9B;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BZ,KAAK,CAACQ,QAAN,EAApC;AAEAR,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,oBAAjB;AAEAH,IAAAA,aAAa,CAAC;AACVI,MAAAA,KAAK,EAAEC,MAAM,CAACC,UADJ;AAEVC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAFL,KAAD,CAAb;;AAKA,QAAIC,YAAY,CAACC,MAAb,KAAwB,CAA5B,EAA+B;AAC3B;AACA;AACA;AACA;AACA,UAAI,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,CAAEH,YAAY,CAACI,OAAb,CAAqB,YAArB,CAA7B,EAAmE;AAC/DC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,QAAAA,YAAY,CAACO,KAAb;AACH,OAHD,MAGO;AACHF,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAN,QAAAA,YAAY,CAACO,KAAb;AACH;AACJ;AACJ,GArBD,EAqBG,EArBH;AAuBA,SACI;AAAK,IAAA,SAAS,EAAEzB,GAAG,CAAC0B,IAApB;AAA0B,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAG,GAAEnB,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEQ,MAAO,IAAlC;AAAuCY,MAAAA,QAAQ,EAAG,GAAEpB,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEK,KAAM;AAAtE;AAAjC,KACM,CAACV,QAAD,IAAa,MAAC,IAAD;AAAM,IAAA,UAAU,EAAEI,UAAlB;AAA8B,IAAA,WAAW,EAAEH;AAA3C,IADnB,EAEMD,QAAQ,IAAI,8BAFlB,EAGMG,OAAO,IAAI,MAAC,OAAD,OAHjB,CADJ;AAOH,CAnCD;;AAqCA,MAAMuB,OAAgC,GAAG,MACrC;AAAK,EAAA,SAAS,EAAE7B,GAAG,CAAC6B;AAApB,GACI,MAAC,WAAD,OADJ,CADJ;;AAOA,eAAe3B,SAAf","sourcesContent":["import * as React from 'react'\n\nimport { NextPage } from 'next'\n\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\nimport Auth from '../../containers/Auth/Auth'\n\nconst css = require('./index.module.css')\n\nconst AdminPage: NextPage = (): JSX.Element => {\n    const [signedIn, setSignedIn] = React.useState<boolean>(false)\n    const [sending, setSending] = React.useState<boolean>(false)\n    const [screensize, setScreensize] = React.useState<{ width: number, height: number}>()\n\n    React.useEffect(() => {\n        document.title = 'Portfolio // Admin'\n\n        setScreensize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        })\n\n        if (localStorage.length !== 0) {\n            // check for auth info in local storage\n            // compare current time in milliseconds to expire time in storage\n            // if current time is LESS, use the auth info from storage to refresh\n            // else, clear local storage\n            if (new Date().getTime() < +(localStorage.getItem('expireTime')!)) {\n                console.log('use old auth info')\n                localStorage.clear()\n            } else {\n                console.log('clear local storage')\n                localStorage.clear()\n            }\n        }\n    }, [])\n\n    return (\n        <div className={css.Main} style={{minHeight: `${screensize?.height}px`, minWidth: `${screensize?.width}px`}}>\n            { !signedIn && <Auth setSending={setSending} setSignedIn={setSignedIn} /> }\n            { signedIn && <p>Signed In.</p> }\n            { sending && <Loading /> }\n        </div>\n    )\n}\n\nconst Loading: React.FunctionComponent = (): JSX.Element => (\n    <div className={css.Loading}>\n        <CubeSpinner />\n    </div>\n)\n\n\nexport default AdminPage"]},"metadata":{},"sourceType":"module"}