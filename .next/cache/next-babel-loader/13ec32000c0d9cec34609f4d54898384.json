{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Auth from '../../containers/Auth/Auth';\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\nimport { AuthContext } from '../../context/authContext';\nimport { Languages } from '../../portfolio/portfolio';\n\nconst css = require('./Admin.module.css');\n\nconst Admin = () => {\n  const authContext = React.useContext(AuthContext);\n  const state = authContext.state;\n  const dispatch = authContext.dispatch;\n  const [sending, setSending] = React.useState(true);\n  const [screensize, setScreensize] = React.useState();\n  React.useEffect(() => {\n    document.title = 'Portfolio // Admin';\n    setScreensize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    if (localStorage.length !== 0) {\n      // check for auth info in local storage\n      // compare current time in milliseconds to expire time in storage\n      // if current time is LESS, use the auth info from storage to refresh\n      // else, clear local storage\n      const expireTime = localStorage.getItem('expireTime');\n\n      if (expireTime) {\n        // if auth token has not expired yet\n        if (new Date().getTime() < +expireTime) {\n          const authInfo = {\n            email: localStorage.getItem('email'),\n            password: localStorage.getItem('password'),\n            idToken: localStorage.getItem('idToken')\n          };\n          dispatch({\n            type: 'signin',\n            payload: authInfo\n          });\n          setSending(false); // if auth has expired\n        } else {\n          localStorage.clear();\n          setSending(false);\n        }\n      }\n    } else {\n      setSending(false);\n    }\n  }, []);\n\n  const signInHandler = (email, password, idToken) => {\n    const authInfo = {\n      email: email,\n      password: password,\n      idToken: idToken\n    };\n    dispatch({\n      type: 'signin',\n      payload: authInfo\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main,\n    style: {\n      minHeight: `${screensize === null || screensize === void 0 ? void 0 : screensize.height}px`,\n      minWidth: `${screensize === null || screensize === void 0 ? void 0 : screensize.width}px`\n    }\n  }, !state.signedIn && __jsx(Auth, {\n    setSending: setSending,\n    signIn: signInHandler\n  }), sending && __jsx(Loading, null), state.signedIn && __jsx(AdminContent, {\n    token: state.idToken\n  }));\n};\n\nconst Loading = () => __jsx(\"div\", {\n  className: css.Loading\n}, __jsx(CubeSpinner, null));\n\nconst AdminContent = ({\n  token\n}) => {\n  const [items, setItems] = React.useState();\n  const [loading, setLoading] = React.useState(true);\n  React.useEffect(() => {\n    const baseURL = 'https://joonajo-portfolio.firebaseio.com/items.json';\n    const idToken = localStorage.getItem('idToken');\n    const tokenParam = `?auth=${idToken}`;\n    fetch(baseURL + tokenParam, {\n      method: 'get'\n    }).then(response => response.json()).then(data => {\n      const newItems = [];\n\n      _Object$keys(data).forEach(item => {\n        newItems.push(data[item]);\n      });\n\n      setLoading(false);\n      setItems(newItems);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: css.AdminContentWrapper\n  }, loading && __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null)), __jsx(PortfolioItems, {\n    items: items\n  }));\n};\n\nconst PortfolioItems = ({\n  items\n}) => {\n  return __jsx(\"div\", {\n    className: css.ItemsContainer\n  }, items && items.map(item => {\n    return __jsx(\"div\", {\n      key: item.title\n    }, \"item\");\n  }), __jsx(AddPortfolioItem, null));\n};\n\nconst PortfolioItem = () => {\n  return __jsx(\"div\", {\n    className: css.ItemContainer\n  });\n};\n\nconst initialForm = {\n  title: {\n    id: 'title',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'title',\n    require: true,\n    value: ''\n  },\n  description: {\n    id: 'description',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'description',\n    require: true,\n    value: ''\n  },\n  languages: {\n    id: 'languages',\n    elemType: 'select',\n    options: [..._Object$keys(Languages)],\n    require: true,\n    multiple: true\n  },\n  link: {\n    id: 'link',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'link to app',\n    require: true,\n    value: ''\n  },\n  github: {\n    id: 'github',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'github link',\n    require: true,\n    value: ''\n  },\n  video_src: {\n    id: 'video_src',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'video link',\n    require: true,\n    value: ''\n  },\n  gif_src: {\n    id: 'gif_src',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'gif link',\n    require: true,\n    value: ''\n  },\n  desktop: {\n    id: 'desktop',\n    elemType: 'select',\n    options: ['Yes', 'No'],\n    require: true,\n    value: 'Yes',\n    multiple: false\n  },\n  mobile: {\n    id: 'mobile',\n    elemType: 'select',\n    options: ['Yes', 'No'],\n    require: true,\n    value: 'Yes',\n    multiple: false\n  }\n};\n\nconst AddPortfolioItem = () => {\n  const [showForm, setShowForm] = React.useState(false);\n  const [sending, setSending] = React.useState(false);\n\n  const addItemToDatabase = item => {\n    setSending(true);\n    const baseURL = 'https://joonajo-portfolio.firebaseio.com/items/';\n    const title = item.title + \".json\";\n    const idToken = localStorage.getItem('idToken');\n    const tokenParam = `?auth=${idToken}`;\n    fetch(baseURL + title + tokenParam, {\n      method: 'put',\n      body: _JSON$stringify(item)\n    }).then(response => response.json().then(data => {\n      console.log(data);\n      setSending(false);\n      setShowForm(false);\n    }));\n  };\n\n  const clickHandler = () => {\n    setShowForm(true);\n  };\n\n  return __jsx(\"div\", {\n    className: css.AddItemContainer\n  }, __jsx(\"span\", {\n    className: css.AddItemButton,\n    onClick: clickHandler\n  }, \"add item \", __jsx(FontAwesomeIcon, {\n    icon: icons.faPlus,\n    className: css.AddItemIcon\n  })), __jsx(NewItemForm, {\n    show: showForm,\n    close: () => setShowForm(false),\n    add: addItemToDatabase,\n    sending: sending\n  }));\n};\n\nconst NewItemForm = ({\n  show,\n  close,\n  add,\n  sending\n}) => {\n  const [form, setForm] = React.useState(initialForm);\n  const [formHeight, setFormHeight] = React.useState();\n  const formRef = React.useRef(null);\n  React.useEffect(() => {\n    if (formRef && formRef.current) {\n      setFormHeight(formRef.current.getBoundingClientRect().height);\n    }\n  }, [formRef]);\n\n  const changeHandler = (id, event) => {\n    const updatedForm = _objectSpread({}, form, {\n      [id]: _objectSpread({}, form[id], {\n        value: event.target.value\n      })\n    });\n\n    setForm(updatedForm);\n  };\n\n  const addHandler = () => {\n    const newItem = {\n      title: form.title.value,\n      language: [Languages.React, Languages.TypeScript],\n      description: form.description.value,\n      link: form.link.value,\n      githubLink: form.github.value,\n      video_src: form.video_src.value,\n      gif_src: form.gif_src.value,\n      desktop: form.desktop.value,\n      mobile: form.mobile.value\n    };\n    add(newItem);\n  };\n\n  const itemFormClasses = [css.ItemForm, show && css.show].join(' ');\n  return __jsx(\"form\", {\n    className: itemFormClasses,\n    ref: formRef\n  }, sending && __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null)), __jsx(FontAwesomeIcon, {\n    className: css.FormCloseButton,\n    icon: icons.faTimes,\n    onClick: close\n  }), _Object$keys(form).map(element => {\n    return __jsx(FormInput, {\n      key: element,\n      item: form[element],\n      change: changeHandler\n    });\n  }), __jsx(\"div\", {\n    className: css.FormAddButton,\n    onClick: addHandler\n  }, __jsx(\"p\", null, \"add\")));\n};\n\nconst FormInput = React.memo(({\n  item,\n  change\n}) => {\n  let content = undefined;\n\n  switch (item.elemType) {\n    case 'input':\n      content = __jsx(\"input\", {\n        value: item.value,\n        placeholder: item.placeholder,\n        onChange: e => change(item.id, e),\n        className: css.FormInput\n      });\n      break;\n\n    case 'select':\n      content = __jsx(\"select\", {\n        className: css.FormSelect,\n        id: item.id,\n        multiple: item.multiple\n      }, item.options.map(option => {\n        return __jsx(\"option\", {\n          key: item.id + option,\n          value: option,\n          className: css.SelectOption\n        }, option);\n      }));\n      break;\n  }\n\n  return __jsx(\"div\", {\n    className: css.FormInputContainer\n  }, __jsx(\"p\", null, item.id), content);\n});\nexport default Admin;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/containers/Admin/Admin.tsx"],"names":["React","Auth","CubeSpinner","FontAwesomeIcon","icons","AuthContext","Languages","css","require","Admin","authContext","useContext","state","dispatch","sending","setSending","useState","screensize","setScreensize","useEffect","document","title","width","window","innerWidth","height","innerHeight","localStorage","length","expireTime","getItem","Date","getTime","authInfo","email","password","idToken","type","payload","clear","signInHandler","Main","minHeight","minWidth","signedIn","Loading","AdminContent","token","items","setItems","loading","setLoading","baseURL","tokenParam","fetch","method","then","response","json","data","newItems","forEach","item","push","AdminContentWrapper","PortfolioItems","ItemsContainer","map","PortfolioItem","ItemContainer","initialForm","id","elemType","placeholder","value","description","languages","options","multiple","link","github","video_src","gif_src","desktop","mobile","AddPortfolioItem","showForm","setShowForm","addItemToDatabase","body","console","log","clickHandler","AddItemContainer","AddItemButton","faPlus","AddItemIcon","NewItemForm","show","close","add","form","setForm","formHeight","setFormHeight","formRef","useRef","current","getBoundingClientRect","changeHandler","event","updatedForm","target","addHandler","newItem","language","TypeScript","githubLink","itemFormClasses","ItemForm","join","FormCloseButton","faTimes","element","FormAddButton","FormInput","memo","change","content","undefined","e","FormSelect","option","SelectOption","FormInputContainer"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\nimport Auth from '../../containers/Auth/Auth'\r\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../icons/icons'\r\nimport { IPortfolioItem } from '../../interfaces/interfaces'\r\nimport { IAuthContext, AuthContext, TAuthState, TDispatch } from '../../context/authContext'\r\nimport { Languages } from '../../portfolio/portfolio'\r\n\r\nconst css = require('./Admin.module.css')\r\n\r\nconst Admin: React.FunctionComponent = (): JSX.Element => {\r\n    const authContext: IAuthContext = React.useContext(AuthContext)\r\n    const state: TAuthState = authContext.state\r\n    const dispatch: TDispatch = authContext.dispatch!\r\n\r\n    const [sending, setSending] = React.useState<boolean>(true)\r\n    const [screensize, setScreensize] = React.useState<{ width: number, height: number}>()\r\n\r\n    React.useEffect(() => {\r\n        document.title = 'Portfolio // Admin'\r\n\r\n        setScreensize({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        })\r\n\r\n        if (localStorage.length !== 0) {\r\n            // check for auth info in local storage\r\n            // compare current time in milliseconds to expire time in storage\r\n            // if current time is LESS, use the auth info from storage to refresh\r\n            // else, clear local storage\r\n            const expireTime = (localStorage.getItem('expireTime'))\r\n            if (expireTime) {\r\n                // if auth token has not expired yet\r\n                if (new Date().getTime() < +expireTime) {\r\n                    const authInfo = {\r\n                        email: localStorage.getItem('email')!,\r\n                        password: localStorage.getItem('password')!,\r\n                        idToken: localStorage.getItem('idToken')!\r\n                    }\r\n                    dispatch({ type: 'signin', payload: authInfo })\r\n                    setSending(false)\r\n                // if auth has expired\r\n                } else {\r\n                    localStorage.clear()\r\n                    setSending(false)\r\n                }\r\n            }\r\n        } else {\r\n            setSending(false)\r\n        }\r\n    }, [])\r\n\r\n    const signInHandler = (email: string, password: string, idToken: string) => {\r\n        const authInfo = {\r\n            email: email,\r\n            password: password,\r\n            idToken: idToken\r\n        }\r\n        dispatch({ type: 'signin', payload: authInfo })\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main} style={{minHeight: `${screensize?.height}px`, minWidth: `${screensize?.width}px`}}>\r\n            { !state.signedIn && <Auth setSending={setSending} signIn={signInHandler} /> }\r\n            { sending && <Loading /> }\r\n            { state. signedIn && <AdminContent token={state.idToken!} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Loading: React.FunctionComponent = (): JSX.Element => (\r\n    <div className={css.Loading}>\r\n        <CubeSpinner />\r\n    </div>\r\n)\r\n\r\ninterface IAdminContent {\r\n    token: string\r\n}\r\n\r\nconst AdminContent: React.FunctionComponent<IAdminContent> = ({ token }): JSX.Element => {\r\n    const [items, setItems] = React.useState<IPortfolioItem[]>()\r\n    const [loading, setLoading] = React.useState<boolean>(true)\r\n    \r\n    React.useEffect(() => {\r\n        const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items.json'\r\n        const idToken: string = localStorage.getItem('idToken')!\r\n        const tokenParam: string = `?auth=${idToken}`\r\n\r\n        fetch(baseURL + tokenParam, { method: 'get' }).then(response => response.json())\r\n            .then(data => {\r\n                const newItems: IPortfolioItem[] = []\r\n                Object.keys(data).forEach(item => {\r\n                    newItems.push(data[item])\r\n                })\r\n                setLoading(false)\r\n                setItems(newItems)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={css.AdminContentWrapper}>\r\n            { loading &&\r\n                <div className={css.Loading}>\r\n                    <CubeSpinner />\r\n                </div>\r\n            }\r\n            <PortfolioItems items={items} />\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IPortfolioItems {\r\n    items?: IPortfolioItem[]\r\n}\r\n\r\nconst PortfolioItems: React.FunctionComponent<IPortfolioItems> = ({ items }): JSX.Element => {\r\n    return (\r\n        <div className={css.ItemsContainer}>\r\n            { items && items.map((item: IPortfolioItem) => {\r\n                return (\r\n                    <div key={item.title}>\r\n                        item\r\n                    </div>\r\n                )\r\n            })}\r\n            <AddPortfolioItem />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PortfolioItem: React.FunctionComponent = (): JSX.Element => {\r\n\r\n    return (\r\n        <div className={css.ItemContainer}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IForm {\r\n    [title: string]: any\r\n    description: any\r\n    languages: any\r\n    link: any\r\n    github: any\r\n    video_src: any\r\n    gif_src: any\r\n    desktop: any\r\n    mobile: any\r\n}\r\n\r\nconst initialForm: IForm = {\r\n    title: {\r\n        id: 'title',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'title',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    description: {\r\n        id: 'description',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'description',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    languages: {\r\n        id: 'languages',\r\n        elemType: 'select',\r\n        options: [...Object.keys(Languages)],\r\n        require: true,\r\n        multiple: true\r\n    },\r\n    link: {\r\n        id: 'link',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'link to app',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    github: {\r\n        id: 'github',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'github link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    video_src: {\r\n        id: 'video_src',\r\n        elemType: 'input',  \r\n        type: 'text',\r\n        placeholder: 'video link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    gif_src: {\r\n        id: 'gif_src',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'gif link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    desktop: {\r\n        id: 'desktop',\r\n        elemType: 'select',\r\n        options : ['Yes', 'No'],\r\n        require: true,\r\n        value: 'Yes',\r\n        multiple: false\r\n    },\r\n    mobile: {   \r\n        id: 'mobile',\r\n        elemType: 'select',\r\n        options : ['Yes', 'No'],\r\n        require: true,\r\n        value: 'Yes',\r\n        multiple: false\r\n    }\r\n}\r\n\r\nconst AddPortfolioItem: React.FunctionComponent = (): JSX.Element => {\r\n    const [showForm, setShowForm] = React.useState<boolean>(false)\r\n    const [sending, setSending] = React.useState<boolean>(false)\r\n\r\n    const addItemToDatabase = (item: IPortfolioItem) => {\r\n        setSending(true)\r\n        const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items/'\r\n        const title: string = item.title + \".json\"\r\n        const idToken: string = localStorage.getItem('idToken')!\r\n        const tokenParam: string = `?auth=${idToken}`\r\n\r\n        fetch(baseURL + title + tokenParam, { method: 'put', body: JSON.stringify(item) }).then(response => response.json()\r\n            .then(data => {\r\n                console.log(data)\r\n                setSending(false)\r\n                setShowForm(false)\r\n            }))\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        setShowForm(true)\r\n    }\r\n\r\n    return (\r\n        <div className={css.AddItemContainer}>\r\n            <span className={css.AddItemButton} onClick={clickHandler}>add item <FontAwesomeIcon icon={icons.faPlus} className={css.AddItemIcon} /></span>\r\n            <NewItemForm show={showForm} close={() => setShowForm(false)} add={addItemToDatabase} sending={sending}/>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface INewItemForm {\r\n    show: boolean\r\n    sending: boolean\r\n    close: () => void\r\n    add: (item: IPortfolioItem) => void\r\n}\r\n\r\nconst NewItemForm: React.FunctionComponent<INewItemForm> = ({ show, close, add, sending }): JSX.Element => {\r\n    const [form, setForm] = React.useState<IForm>(initialForm)\r\n    const [formHeight, setFormHeight] = React.useState<number>()\r\n    const formRef: React.RefObject<HTMLFormElement> = React.useRef(null)\r\n\r\n    React.useEffect(() => {\r\n        if (formRef && formRef.current) {\r\n            setFormHeight(formRef.current.getBoundingClientRect().height)\r\n        }\r\n    }, [formRef])\r\n\r\n    const changeHandler = (id: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedForm: IForm = {\r\n            ...form,\r\n            [id]: {\r\n                ...form[id],\r\n                value: event.target.value\r\n            }\r\n        }\r\n        setForm(updatedForm)\r\n    }\r\n\r\n    const addHandler = () => {\r\n        const newItem: IPortfolioItem = {\r\n            title: form.title.value,\r\n            language: [Languages.React, Languages.TypeScript],\r\n            description: form.description.value,\r\n            link: form.link.value,\r\n            githubLink: form.github.value,\r\n            video_src: form.video_src.value,\r\n            gif_src: form.gif_src.value,\r\n            desktop: form.desktop.value,\r\n            mobile: form.mobile.value\r\n        }\r\n\r\n        add(newItem)\r\n    }\r\n    \r\n    const itemFormClasses = [\r\n        css.ItemForm,\r\n        show && css.show\r\n    ].join(' ')\r\n\r\n    return (\r\n        <form className={itemFormClasses} ref={formRef}>\r\n            { sending && \r\n                <div className={css.Loading}>\r\n                    <CubeSpinner />\r\n                </div>\r\n            }\r\n            <FontAwesomeIcon className={css.FormCloseButton} icon={icons.faTimes} onClick={close} />\r\n            { Object.keys(form).map((element: string) => {\r\n                return (\r\n                   <FormInput key={element} item={form[element]} change={changeHandler}  />\r\n                )\r\n            })}\r\n            <div className={css.FormAddButton} onClick={addHandler}>\r\n                <p>add</p>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\ninterface IFormInput {\r\n    item: any\r\n    change: (id: string, e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst FormInput: React.FunctionComponent<IFormInput> = React.memo( ({ item, change }): JSX.Element => {\r\n    let content = undefined\r\n\r\n    switch (item.elemType) {\r\n        case 'input':\r\n            content = (\r\n                <input value={item.value} \r\n                    placeholder={item.placeholder} \r\n                    onChange={(e) => change(item.id, e)}\r\n                    className={css.FormInput} />\r\n            )\r\n            break;\r\n            \r\n        case 'select':\r\n            content = (\r\n                <select className={css.FormSelect} id={item.id} multiple={item.multiple}>\r\n                    {item.options.map((option: string) => {\r\n                        return (\r\n                            <option key={item.id + option} value={option} className={css.SelectOption}>{option}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n            )\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={css.FormInputContainer}>\r\n            <p>{item.id}</p>\r\n            { content }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Admin\r\n"]},"metadata":{},"sourceType":"module"}