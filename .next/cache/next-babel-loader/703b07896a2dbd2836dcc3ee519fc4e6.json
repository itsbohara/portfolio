{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\n\nvar css = require('./Portfolio.module.css');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../../icons/icons';\nimport AddPortfolioItem from '../AddNewItem/AddNewItem';\nimport { AuthContext } from '../../../context/authContext';\n\nvar PortfolioItems = function PortfolioItems(_ref) {\n  var items = _ref.items;\n  return __jsx(\"div\", {\n    className: css.ItemsContainer\n  }, items && items.map(function (item) {\n    return __jsx(PortfolioItem, _extends({\n      key: item.title\n    }, item));\n  }), __jsx(AddPortfolioItem, null));\n};\n\nvar PortfolioItem = function PortfolioItem(props) {\n  var authContext = React.useContext(AuthContext);\n\n  var deleteHandler = function deleteHandler() {\n    if (authContext.state.signedIn) {\n      var baseURL = \"https://joonajo-portfolio.firebaseio.com/items/\";\n      var itemParam = \"\".concat(props.title, \".json\");\n      var idToken = localStorage.getItem('idToken');\n      var tokenParam = \"?auth=\".concat(idToken);\n      fetch(baseURL + itemParam + tokenParam, {\n        method: 'delete'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log('succesfully deleted', props.title);\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: css.ItemContainer\n  }, __jsx(\"div\", {\n    className: css.ItemMainContent\n  }, __jsx(\"p\", null, props.title)), __jsx(\"div\", {\n    className: css.ItemHoverContent\n  }, __jsx(\"span\", null, \" \", __jsx(FontAwesomeIcon, {\n    icon: icons.faEdit\n  }), \" \", __jsx(\"p\", null, \"edit\"), \" \"), __jsx(\"span\", {\n    onClick: deleteHandler\n  }, \" \", __jsx(FontAwesomeIcon, {\n    icon: icons.faTrash\n  }), \" \", __jsx(\"p\", null, \"delete\"), \" \")));\n};\n\nexport default PortfolioItems;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Admin/PortfolioManagement/Portfolio.tsx"],"names":["React","css","require","FontAwesomeIcon","icons","AddPortfolioItem","AuthContext","PortfolioItems","items","ItemsContainer","map","item","title","PortfolioItem","props","authContext","useContext","deleteHandler","state","signedIn","baseURL","itemParam","idToken","localStorage","getItem","tokenParam","fetch","method","then","response","json","data","console","log","ItemContainer","ItemMainContent","ItemHoverContent","faEdit","faTrash"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,wBAAD,CAAnB;;AAGA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,SAAuBC,WAAvB,QAA0C,8BAA1C;;AAMA,IAAMC,cAAwD,GAAG,SAA3DA,cAA2D,OAA4B;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AACzF,SACI;AAAK,IAAA,SAAS,EAAEP,GAAG,CAACQ;AAApB,KACMD,KAAK,IAAIA,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAA0B;AAC3C,WACI,MAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,IAAI,CAACC;AAAzB,OAAoCD,IAApC,EADJ;AAGH,GAJU,CADf,EAMI,MAAC,gBAAD,OANJ,CADJ;AAUH,CAXD;;AAaA,IAAME,aAAsD,GAAG,SAAzDA,aAAyD,CAACC,KAAD,EAAwB;AACnF,MAAMC,WAAyB,GAAGf,KAAK,CAACgB,UAAN,CAAiBV,WAAjB,CAAlC;;AAEA,MAAMW,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAIF,WAAW,CAACG,KAAZ,CAAkBC,QAAtB,EAAgC;AAC5B,UAAMC,OAAe,GAAG,iDAAxB;AACA,UAAMC,SAAiB,aAAMP,KAAK,CAACF,KAAZ,UAAvB;AACA,UAAMU,OAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAxB;AACA,UAAMC,UAAkB,mBAAYH,OAAZ,CAAxB;AAEAI,MAAAA,KAAK,CAACN,OAAO,GAAGC,SAAV,GAAsBI,UAAvB,EAAmC;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAAnC,CAAL,CAA8DC,IAA9D,CAAmE,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAA3E,EACKF,IADL,CACU,UAAAG,IAAI,EAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCnB,KAAK,CAACF,KAAzC;AACH,OAHL;AAIH;AACJ,GAZD;;AAcA,SACI;AAAK,IAAA,SAAS,EAAEX,GAAG,CAACiC;AAApB,KACI;AAAK,IAAA,SAAS,EAAEjC,GAAG,CAACkC;AAApB,KACI,iBAAIrB,KAAK,CAACF,KAAV,CADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAEX,GAAG,CAACmC;AAApB,KACI,yBAAO,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEhC,KAAK,CAACiC;AAA7B,IAAP,OAA+C,wBAA/C,MADJ,EAEI;AAAM,IAAA,OAAO,EAAEpB;AAAf,UAA+B,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEb,KAAK,CAACkC;AAA7B,IAA/B,OAAwE,0BAAxE,MAFJ,CAJJ,CADJ;AAWH,CA5BD;;AA8BA,eAAe/B,cAAf","sourcesContent":["import * as React from 'react'\r\n\r\nconst css = require('./Portfolio.module.css')\r\n\r\nimport { IPortfolioItem } from '../../../interfaces/interfaces'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../../icons/icons'\r\nimport AddPortfolioItem from '../AddNewItem/AddNewItem'\r\nimport { IAuthContext, AuthContext } from '../../../context/authContext'\r\n\r\ninterface IPortfolioItems {\r\n    items?: IPortfolioItem[]\r\n}\r\n\r\nconst PortfolioItems: React.FunctionComponent<IPortfolioItems> = ({ items }): JSX.Element => {\r\n    return (\r\n        <div className={css.ItemsContainer}>\r\n            { items && items.map((item: IPortfolioItem) => {\r\n                return (\r\n                    <PortfolioItem key={item.title} {...item} />\r\n                )\r\n            })}\r\n            <AddPortfolioItem />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PortfolioItem: React.FunctionComponent<IPortfolioItem> = (props): JSX.Element => {\r\n    const authContext: IAuthContext = React.useContext(AuthContext)\r\n\r\n    const deleteHandler = () => {\r\n        if (authContext.state.signedIn) {\r\n            const baseURL: string = \"https://joonajo-portfolio.firebaseio.com/items/\"\r\n            const itemParam: string = `${props.title}.json`\r\n            const idToken: string = localStorage.getItem('idToken')!\r\n            const tokenParam: string = `?auth=${idToken}`\r\n    \r\n            fetch(baseURL + itemParam + tokenParam, { method: 'delete' }).then(response => response.json())\r\n                .then(data => {\r\n                    console.log('succesfully deleted', props.title)\r\n                })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={css.ItemContainer}>\r\n            <div className={css.ItemMainContent}>\r\n                <p>{props.title}</p>\r\n            </div>\r\n            <div className={css.ItemHoverContent}>\r\n                <span> <FontAwesomeIcon icon={icons.faEdit} /> <p>edit</p> </span>\r\n                <span onClick={deleteHandler}> <FontAwesomeIcon icon={icons.faTrash} /> <p>delete</p> </span>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PortfolioItems"]},"metadata":{},"sourceType":"module"}