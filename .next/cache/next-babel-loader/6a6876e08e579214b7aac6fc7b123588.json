{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../../icons/icons';\n\nvar css = require('.(AddNewItem.module.css');\n\nvar AddPortfolioItem = function AddPortfolioItem() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showForm = _React$useState2[0],\n      setShowForm = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      sending = _React$useState4[0],\n      setSending = _React$useState4[1];\n\n  var addItemToDatabase = function addItemToDatabase(item) {\n    setSending(true);\n    var baseURL = 'https://joonajo-portfolio.firebaseio.com/items/';\n    var title = item.title + \".json\";\n    var idToken = localStorage.getItem('idToken');\n    var tokenParam = \"?auth=\".concat(idToken);\n    fetch(baseURL + title + tokenParam, {\n      method: 'put',\n      body: _JSON$stringify(item)\n    }).then(function (response) {\n      return response.json().then(function (data) {\n        console.log(data);\n        setSending(false);\n        setShowForm(false);\n      });\n    });\n  };\n\n  var clickHandler = function clickHandler() {\n    setShowForm(true);\n  };\n\n  return __jsx(\"div\", {\n    className: css.AddItemContainer\n  }, __jsx(\"span\", {\n    className: css.AddItemButton,\n    onClick: clickHandler\n  }, \"add item \", __jsx(FontAwesomeIcon, {\n    icon: icons.faPlus,\n    className: css.AddItemIcon\n  })), __jsx(NewItemForm, {\n    show: showForm,\n    close: function close() {\n      return setShowForm(false);\n    },\n    add: addItemToDatabase,\n    sending: sending\n  }));\n};\n\nexport default AddPortfolioItem;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Admin/AddNewItem/AddNewItem.tsx"],"names":["React","FontAwesomeIcon","icons","css","require","AddPortfolioItem","useState","showForm","setShowForm","sending","setSending","addItemToDatabase","item","baseURL","title","idToken","localStorage","getItem","tokenParam","fetch","method","body","then","response","json","data","console","log","clickHandler","AddItemContainer","AddItemButton","faPlus","AddItemIcon"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,QAAsB,sBAAtB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,yBAAD,CAAnB;;AAEA,IAAMC,gBAAyC,GAAG,SAA5CA,gBAA4C,GAAmB;AAAA,wBACjCL,KAAK,CAACM,QAAN,CAAwB,KAAxB,CADiC;AAAA;AAAA,MAC1DC,QAD0D;AAAA,MAChDC,WADgD;;AAAA,yBAEnCR,KAAK,CAACM,QAAN,CAAwB,KAAxB,CAFmC;AAAA;AAAA,MAE1DG,OAF0D;AAAA,MAEjDC,UAFiD;;AAIjE,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAA0B;AAChDF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAMG,OAAe,GAAG,iDAAxB;AACA,QAAMC,KAAa,GAAGF,IAAI,CAACE,KAAL,GAAa,OAAnC;AACA,QAAMC,OAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAxB;AACA,QAAMC,UAAkB,mBAAYH,OAAZ,CAAxB;AAEAI,IAAAA,KAAK,CAACN,OAAO,GAAGC,KAAV,GAAkBI,UAAnB,EAA+B;AAAEE,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,IAAI,EAAE,gBAAeT,IAAf;AAAvB,KAA/B,CAAL,CAAmFU,IAAnF,CAAwF,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,GAC/FF,IAD+F,CAC1F,UAAAG,IAAI,EAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,WAAW,CAAC,KAAD,CAAX;AACH,OAL+F,CAAJ;AAAA,KAAhG;AAMH,GAbD;;AAeA,MAAMoB,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBpB,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAEL,GAAG,CAAC0B;AAApB,KACI;AAAM,IAAA,SAAS,EAAE1B,GAAG,CAAC2B,aAArB;AAAoC,IAAA,OAAO,EAAEF;AAA7C,kBAAoE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE1B,KAAK,CAAC6B,MAA7B;AAAqC,IAAA,SAAS,EAAE5B,GAAG,CAAC6B;AAApD,IAApE,CADJ,EAEI,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEzB,QAAnB;AAA6B,IAAA,KAAK,EAAE;AAAA,aAAMC,WAAW,CAAC,KAAD,CAAjB;AAAA,KAApC;AAA8D,IAAA,GAAG,EAAEG,iBAAnE;AAAsF,IAAA,OAAO,EAAEF;AAA/F,IAFJ,CADJ;AAMH,CA7BD;;AA+BA,eAAeJ,gBAAf","sourcesContent":["import * as React from 'react'\r\nimport { IPortfolioItem } from '../../../interfaces/interfaces'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../../icons/icons'\r\n\r\nconst css = require('.(AddNewItem.module.css')\r\n\r\nconst AddPortfolioItem: React.FunctionComponent = (): JSX.Element => {\r\n    const [showForm, setShowForm] = React.useState<boolean>(false)\r\n    const [sending, setSending] = React.useState<boolean>(false)\r\n\r\n    const addItemToDatabase = (item: IPortfolioItem) => {\r\n        setSending(true)\r\n        const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items/'\r\n        const title: string = item.title + \".json\"\r\n        const idToken: string = localStorage.getItem('idToken')!\r\n        const tokenParam: string = `?auth=${idToken}`\r\n\r\n        fetch(baseURL + title + tokenParam, { method: 'put', body: JSON.stringify(item) }).then(response => response.json()\r\n            .then(data => {\r\n                console.log(data)\r\n                setSending(false)\r\n                setShowForm(false)\r\n            }))\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        setShowForm(true)\r\n    }\r\n\r\n    return (\r\n        <div className={css.AddItemContainer}>\r\n            <span className={css.AddItemButton} onClick={clickHandler}>add item <FontAwesomeIcon icon={icons.faPlus} className={css.AddItemIcon} /></span>\r\n            <NewItemForm show={showForm} close={() => setShowForm(false)} add={addItemToDatabase} sending={sending}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPortfolioItem"]},"metadata":{},"sourceType":"module"}