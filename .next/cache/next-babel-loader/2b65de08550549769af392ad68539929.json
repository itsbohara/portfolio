{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/joojo/code/portfolio/components/Cover/Cover.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons';\nimport { ToolbarContext } from '../../context/toolbarContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\n\nvar css = require('./Cover.css');\n\nvar Cover = React.memo(function () {\n  var toolbarContext = React.useContext(ToolbarContext);\n  var coverRef = React.useRef(null);\n  var windowHeight = window.innerHeight;\n  console.log(windowHeight);\n  React.useEffect(function () {\n    window.addEventListener('scroll', scrollHandler, true);\n    return function () {\n      return window.removeEventListener('scroll', scrollHandler, true);\n    };\n  }, []);\n\n  var scrollHandler = function scrollHandler() {};\n\n  var scrollToPortfolio = React.useCallback(function () {\n    if (coverRef && coverRef.current) {\n      var posToScrollTo = coverRef.current.clientHeight;\n      window.scrollTo({\n        top: posToScrollTo,\n        left: 0,\n        behavior: \"smooth\"\n      });\n    }\n  }, [coverRef]);\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      arrowIn = _React$useState2[0],\n      setArrowIn = _React$useState2[1];\n\n  var arrowTextClasses = [css.ArrowText, arrowIn ? css[\"in\"] : arrowIn === false ? css.out : null].join(' ');\n\n  var transitionHandler = function transitionHandler() {\n    if (arrowIn === false) {\n      setArrowIn(undefined);\n    }\n  };\n\n  var hoverHandler = function hoverHandler() {\n    setArrowIn(true); // if (arrowIn === undefined) {\n    //     setArrowIn(true)\n    // }\n  };\n\n  var mouseOutHandler = function mouseOutHandler() {\n    setArrowIn(false); // if (arrowIn) {\n    //     setArrowIn(false)\n    // }\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main,\n    ref: coverRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.Parallax,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: css.MediaIcons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(MediaIcons, {\n    vertical: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: css.TitleContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: css.FirstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Joona\"), __jsx(\"span\", {\n    className: css.Surname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Joenpolvi\"), __jsx(\"span\", {\n    className: css.Description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Front-End Developer\")), __jsx(\"div\", {\n    className: css.ArrowContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.ArrowIcon,\n    onClick: scrollToPortfolio,\n    onMouseOver: hoverHandler,\n    onMouseOut: mouseOutHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faChevronDown,\n    size: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), __jsx(\"p\", {\n    className: arrowTextClasses,\n    onTransitionEnd: transitionHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"to portfolio\")));\n});\nexport default Cover;","map":{"version":3,"sources":["/home/joojo/code/portfolio/components/Cover/Cover.tsx"],"names":["React","MediaIcons","ToolbarContext","FontAwesomeIcon","icons","css","require","Cover","memo","toolbarContext","useContext","coverRef","useRef","windowHeight","window","innerHeight","console","log","useEffect","addEventListener","scrollHandler","removeEventListener","scrollToPortfolio","useCallback","current","posToScrollTo","clientHeight","scrollTo","top","left","behavior","useState","undefined","arrowIn","setArrowIn","arrowTextClasses","ArrowText","out","join","transitionHandler","hoverHandler","mouseOutHandler","Main","Parallax","TitleContainer","FirstName","Surname","Description","ArrowContainer","ArrowIcon","faChevronDown"],"mappings":"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","sourcesContent":["import React from 'react'\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\nimport { IToolbar, ToolbarContext } from '../../context/toolbarContext'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { icons } from '../../icons/icons'\n\nconst css = require('./Cover.css')\n\nconst Cover = React.memo((): JSX.Element => {\n    const toolbarContext: IToolbar = React.useContext(ToolbarContext)\n    const coverRef = React.useRef<HTMLDivElement>(null)\n    const windowHeight: number = window.innerHeight\n\n    console.log(windowHeight)\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', scrollHandler, true)\n\n        return () => window.removeEventListener('scroll', scrollHandler, true)\n    }, [])\n\n    const scrollHandler = () => {\n\n    }\n\n    const scrollToPortfolio = React.useCallback(() => {\n        if (coverRef && coverRef.current) {\n            const posToScrollTo: number = coverRef.current.clientHeight\n    \n            window.scrollTo({\n                top: posToScrollTo,\n                left: 0,\n                behavior: \"smooth\",\n            })\n        }\n    }, [coverRef])\n\n    const[arrowIn, setArrowIn] = React.useState<boolean | undefined>(undefined)\n\n    const arrowTextClasses = [\n        css.ArrowText,\n        arrowIn ? css.in : arrowIn === false ? css.out : null\n    ].join(' ')\n\n    const transitionHandler = () => {\n        if (arrowIn === false) {\n            setArrowIn(undefined)\n        }\n    }\n\n    const hoverHandler = () => {\n        setArrowIn(true)\n        // if (arrowIn === undefined) {\n        //     setArrowIn(true)\n        // }\n    }\n\n    const mouseOutHandler = () => {\n        setArrowIn(false)\n        // if (arrowIn) {\n        //     setArrowIn(false)\n        // }\n    }\n\n    return (\n        <div className={css.Main} ref={coverRef}>\n            <div className={css.Parallax}>\n            </div>\n            <div className={css.MediaIcons}>\n                <MediaIcons vertical />\n            </div>\n            <div className={css.TitleContainer}>\n                <span className={css.FirstName}>Joona</span>\n                <span className={css.Surname}>Joenpolvi</span>\n                <span className={css.Description}>Front-End Developer</span>\n            </div>\n            <div className={css.ArrowContainer} >\n                <div className={css.ArrowIcon}\n                    onClick={scrollToPortfolio}\n                    onMouseOver={hoverHandler}\n                    onMouseOut={mouseOutHandler}> \n                    <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\n                </div>\n                <p className={arrowTextClasses} onTransitionEnd={transitionHandler}>to portfolio</p>\n            </div>\n        </div>\n    )\n})\n\nexport default Cover"]},"metadata":{},"sourceType":"module"}