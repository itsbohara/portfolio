{"ast":null,"code":"var _jsxFileName = \"/home/joojo/code/portfolio/components/Item/Item.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { icons } from '../../icons/icons';\n\nconst css = require('./Item.module.css');\n\nconst SHOW_TRESHOLD = 1100;\nexport default function Item(props) {\n  const [showItem, toggleShowItem] = React.useState(false);\n  const itemRef = React.useRef(null); // update the event listeners every time the showItem state is changed\n\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true);\n    return () => window.removeEventListener('scroll', checkIfInViewport, true);\n  }, [showItem]);\n\n  const checkIfInViewport = () => {\n    const bottom = itemRef.current.getBoundingClientRect().bottom;\n\n    if (bottom < SHOW_TRESHOLD) {\n      toggleShowItem(true);\n    } else {\n      toggleShowItem(false);\n    }\n  };\n\n  let itemClasses = [css.Item, showItem ? css.show : null].join(' ');\n  return __jsx(\"div\", {\n    className: itemClasses,\n    ref: itemRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: css.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.title)), __jsx(ItemImage, {\n    gif_src: props.gif_src,\n    title: props.title,\n    link: props.link,\n    githubLink: props.githubLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}\n\nfunction ItemImage(props) {\n  return __jsx(\"div\", {\n    className: css.ImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: css.Image,\n    src: props.gif_src,\n    alt: \"portfolio-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: css.ImageMask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: css.MaskTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.title), __jsx(\"div\", {\n    className: css.MaskLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(MaskLink, {\n    address: props.link,\n    text: \"Open\",\n    icon: icons.faExternalLinkSquareAlt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(MaskLink, {\n    address: props.githubLink,\n    text: \"Github\",\n    icon: icons.faGithub,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n}\n\nconst MaskLink = ({\n  address,\n  text,\n  icon\n}) => {\n  return __jsx(\"a\", {\n    href: address,\n    className: css.MaskLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.MaskLinkText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, text)), __jsx(\"div\", {\n    className: css.MaskLinkIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, icon));\n};","map":{"version":3,"sources":["/home/joojo/code/portfolio/components/Item/Item.tsx"],"names":["React","icons","css","require","SHOW_TRESHOLD","Item","props","showItem","toggleShowItem","useState","itemRef","useRef","useEffect","window","addEventListener","checkIfInViewport","removeEventListener","bottom","current","getBoundingClientRect","itemClasses","show","join","Title","title","gif_src","link","githubLink","ItemImage","ImageContainer","Image","ImageMask","MaskTitle","MaskLinks","faExternalLinkSquareAlt","faGithub","MaskLink","address","text","icon","MaskLinkText","MaskLinkIcon"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IPortfolioItem } from '../../interfaces/interfaces'\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core'\nimport { icons } from '../../icons/icons'\n\nconst css = require('./Item.module.css')\n\nconst SHOW_TRESHOLD = 1100\n\nexport default function Item(props: IPortfolioItem) {\n  const[showItem, toggleShowItem] = React.useState(false)\n  const itemRef = React.useRef<HTMLDivElement>(null)\n\n  // update the event listeners every time the showItem state is changed\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true)\n  \n    return () => window.removeEventListener('scroll', checkIfInViewport, true)  \n  }, [showItem])\n\n  const checkIfInViewport = () => {\n    const bottom = itemRef.current!.getBoundingClientRect().bottom\n    if (bottom < SHOW_TRESHOLD) {\n      toggleShowItem(true)\n    } else {\n      toggleShowItem(false)\n    }\n  }\n\n\n  let itemClasses = [\n    css.Item, \n    showItem ? css.show : null\n  ].join(' ')\n  \n  return (\n    <div className={itemClasses} ref={itemRef} >\n      <p className={css.Title}><span>{props.title}</span></p>\n      <ItemImage gif_src={props.gif_src} \n        title={props.title} \n        link={props.link} \n        githubLink={props.githubLink} />\n    </div>\n  )\n}\n\ninterface IImage {\n  gif_src: string\n  title: string\n  link: string\n  githubLink: string\n}\n\nfunction ItemImage(props: IImage) {\n  return (\n    <div className={css.ImageContainer}>\n      <img className={css.Image} src={props.gif_src} alt='portfolio-img'/>\n      <div className={css.ImageMask}>\n        <h1 className={css.MaskTitle}>{props.title}</h1>\n        <div className={css.MaskLinks}>\n          <MaskLink address={props.link} text=\"Open\" icon={icons.faExternalLinkSquareAlt} />\n          <MaskLink address={props.githubLink} text=\"Github\" icon={icons.faGithub} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface IMaskLink {\n  address: string\n  text: string\n  icon: IconDefinition\n}\n\nconst MaskLink: React.FunctionComponent<IMaskLink> = ({ address, text, icon }): JSX.Element => {\n  return (\n      <a href={address} className={css.MaskLink} target='_blank' rel=\"noopener noreferrer\">\n          <div className={css.MaskLinkText}>\n              <span>{text}</span>\n          </div>\n          <div className={css.MaskLinkIcon}>\n              {icon}\n          </div>\n      </a>\n  )\n}"]},"metadata":{},"sourceType":"module"}