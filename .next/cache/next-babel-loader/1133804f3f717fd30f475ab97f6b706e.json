{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport zenscroll from 'zenscroll';\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\nimport { CubeSpinner } from '../UI/Spinner/Spinner';\n\nconst css = require('./Cover.module.css');\n\nconst Cover = React.memo(() => {\n  const coverRef = React.useRef(null);\n  const [height, setHeight] = React.useState(undefined);\n  const [bgLoaded, setBgLoaded] = React.useState(false);\n  React.useEffect(() => {\n    setHeight(window.innerHeight);\n  }, []);\n  const scrollToPortfolio = React.useCallback(() => {\n    if (coverRef && coverRef.current) {\n      const posToScrollTo = coverRef.current.clientHeight;\n      zenscroll.toY(posToScrollTo);\n    }\n  }, [coverRef]);\n  const containerClasses = [css.Main, bgLoaded && css.loaded].join(' ');\n  const arrowTextClasses = [css.ArrowText].join(' ');\n  return __jsx(React.Fragment, null, bgLoaded && __jsx(Loading, null), __jsx(\"div\", {\n    className: containerClasses,\n    ref: coverRef,\n    style: {\n      height: `${height}px`\n    }\n  }, __jsx(\"div\", {\n    className: css.BackgroundContainer\n  }, __jsx(\"img\", {\n    src: \"/images/palm.png\",\n    alt: \"cover-bg-palm\",\n    className: css.BackgroundImage,\n    onLoad: () => setBgLoaded(true)\n  }), __jsx(\"div\", {\n    className: css.BackgroundMask\n  })), __jsx(\"div\", {\n    className: css.MediaIcons\n  }, __jsx(MediaIcons, {\n    vertical: true\n  })), __jsx(\"div\", {\n    className: css.TitleContainer\n  }, __jsx(AnimatedText, {\n    text: \"Joona\"\n  }), __jsx(AnimatedText, {\n    text: \"Joenpolvi\",\n    delay: .5\n  }), __jsx(\"h3\", {\n    className: css.Description\n  }, \" \", __jsx(\"span\", null, \"<Front End Developer />\"), \" \")), __jsx(\"div\", {\n    className: css.ArrowContainer\n  }, __jsx(\"div\", {\n    className: css.ArrowIcon,\n    onClick: scrollToPortfolio\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faChevronDown,\n    size: \"lg\"\n  })), __jsx(\"p\", {\n    className: arrowTextClasses\n  }, \"to portfolio\"))));\n});\n\nconst AnimatedText = ({\n  text,\n  delay\n}) => {\n  return __jsx(\"div\", {\n    className: css.AnimatedText\n  }, text, __jsx(\"span\", {\n    style: {\n      animationDelay: `${delay}s`\n    }\n  }, text), __jsx(\"span\", {\n    style: {\n      animationDelay: `${delay}s`\n    }\n  }, text), __jsx(\"span\", {\n    style: {\n      animationDelay: `${delay}s`\n    }\n  }, text), __jsx(\"span\", {\n    style: {\n      animationDelay: `${delay}s`\n    }\n  }, text));\n};\n\nconst Loading = () => {\n  return __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null));\n};\n\nexport default Cover;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Cover/Cover.tsx"],"names":["React","zenscroll","MediaIcons","FontAwesomeIcon","icons","CubeSpinner","css","require","Cover","memo","coverRef","useRef","height","setHeight","useState","undefined","bgLoaded","setBgLoaded","useEffect","window","innerHeight","scrollToPortfolio","useCallback","current","posToScrollTo","clientHeight","toY","containerClasses","Main","loaded","join","arrowTextClasses","ArrowText","BackgroundContainer","BackgroundImage","BackgroundMask","TitleContainer","Description","ArrowContainer","ArrowIcon","faChevronDown","AnimatedText","text","delay","animationDelay","Loading"],"mappings":"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","sourcesContent":["import React from 'react'\nimport zenscroll from 'zenscroll'\n\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { icons } from '../../icons/icons'\nimport { CubeSpinner } from '../UI/Spinner/Spinner'\n\nconst css = require('./Cover.module.css')\n\nconst Cover = React.memo((): JSX.Element => {\n    const coverRef = React.useRef<HTMLDivElement>(null)\n    const [height, setHeight] = React.useState<number | undefined>(undefined)\n    const [bgLoaded, setBgLoaded] = React.useState<boolean>(false)\n\n    React.useEffect(() => {\n        setHeight(window.innerHeight)\n    }, [])\n\n    const scrollToPortfolio = React.useCallback(() => {\n        if (coverRef && coverRef.current) {\n            const posToScrollTo: number = coverRef.current.clientHeight\n    \n            zenscroll.toY(posToScrollTo)\n        }\n    }, [coverRef])\n\n    const containerClasses = [\n        css.Main,\n        bgLoaded && css.loaded\n    ].join(' ')\n\n    const arrowTextClasses = [\n        css.ArrowText,\n    ].join(' ')\n\n    return (\n        <>\n            { bgLoaded && <Loading /> }\n            <div className={containerClasses} ref={coverRef} style={{height: `${height}px`}}>\n                <div className={css.BackgroundContainer}>\n                    <img src=\"/images/palm.png\" alt=\"cover-bg-palm\" className={css.BackgroundImage} onLoad={() => setBgLoaded(true)} />\n                    <div className={css.BackgroundMask} />\n                </div>\n                <div className={css.MediaIcons}>\n                    <MediaIcons vertical />\n                </div>\n                <div className={css.TitleContainer}>\n                    {/* <h1 className={css.FirstName}>Joona</h1>\n                    <h1 className={css.Surname}>Joenpolvi</h1> */}\n                    <AnimatedText text='Joona' />\n                    <AnimatedText text='Joenpolvi' delay={.5} />\n                    <h3 className={css.Description}> <span>{\"<Front End Developer />\"}</span> </h3>\n                </div>\n                <div className={css.ArrowContainer} >\n                    <div className={css.ArrowIcon}\n                        onClick={scrollToPortfolio}> \n                        <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\n                    </div>\n                    <p className={arrowTextClasses}>to portfolio</p>\n                </div>\n            </div>\n        </>\n    )\n})\n\ninterface IAnimatedText {\n    text: string\n    delay?: number\n}\n\nconst AnimatedText: React.FunctionComponent<IAnimatedText> = ({ text, delay }): JSX.Element => {\n    return (\n        <div className={css.AnimatedText}>\n            {text}\n            <span style={{animationDelay: `${delay}s`}}>{text}</span>\n            <span style={{animationDelay: `${delay}s`}}>{text}</span>\n            <span style={{animationDelay: `${delay}s`}}>{text}</span>\n            <span style={{animationDelay: `${delay}s`}}>{text}</span>\n        </div>\n    )\n}\n\nconst Loading: React.FunctionComponent = (): JSX.Element => {\n    return (\n        <div className={css.Loading}>\n            <CubeSpinner />\n        </div>\n    )\n}\n\nexport default Cover"]},"metadata":{},"sourceType":"module"}