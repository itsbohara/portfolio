{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/joojo/code/portfolio/components/Item/Item.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { icons } from '../../icons/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nvar css = require('./Item.module.css');\n\nvar SHOW_TRESHOLD = 1600;\n\nvar Item = function Item(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showItem = _React$useState2[0],\n      toggleShowItem = _React$useState2[1];\n\n  var itemRef = React.useRef(null); // update the event listeners every time the showItem state is changed\n\n  React.useEffect(function () {\n    window.addEventListener('scroll', checkIfInViewport, true);\n    return function () {\n      return window.removeEventListener('scroll', checkIfInViewport, true);\n    };\n  }, [showItem]);\n\n  var checkIfInViewport = function checkIfInViewport() {\n    var itemPos = itemRef.current.getBoundingClientRect().top;\n    console.log(itemPos, props.title);\n\n    if (itemPos < SHOW_TRESHOLD) {\n      toggleShowItem(true);\n    } else {\n      toggleShowItem(false);\n    }\n  };\n\n  var itemClasses = [css.Item, showItem ? css.show : null].join(' ');\n  return __jsx(\"div\", {\n    className: itemClasses,\n    ref: itemRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: css.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, props.title)), __jsx(ItemImage, {\n    gif_src: props.gif_src,\n    title: props.title,\n    link: props.link,\n    githubLink: props.githubLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nfunction ItemImage(props) {\n  return __jsx(\"div\", {\n    className: css.ImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: css.Image,\n    src: props.gif_src,\n    alt: \"portfolio-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: css.ImageMask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.MaskLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(MaskLink, {\n    address: props.link,\n    text: \"Open\",\n    icon: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(MaskLink, {\n    address: props.githubLink,\n    text: \"Github\",\n    icon: \"github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n}\n\nvar MaskLink = function MaskLink(_ref) {\n  var address = _ref.address,\n      text = _ref.text,\n      icon = _ref.icon;\n  return __jsx(\"a\", {\n    href: address,\n    className: css.MaskLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.MaskLinkText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, text)), __jsx(\"div\", {\n    className: css.MaskLinkIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, icon === 'github' ? __jsx(FontAwesomeIcon, {\n    icon: icons.faGithub,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }) : __jsx(FontAwesomeIcon, {\n    icon: icons.faExternalLinkSquareAlt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })));\n};\n\nexport default Item;","map":{"version":3,"sources":["/home/joojo/code/portfolio/components/Item/Item.tsx"],"names":["React","icons","FontAwesomeIcon","css","require","SHOW_TRESHOLD","Item","props","useState","showItem","toggleShowItem","itemRef","useRef","useEffect","window","addEventListener","checkIfInViewport","removeEventListener","itemPos","current","getBoundingClientRect","top","console","log","title","itemClasses","show","join","Title","gif_src","link","githubLink","ItemImage","ImageContainer","Image","ImageMask","MaskLinks","MaskLink","address","text","icon","MaskLinkText","MaskLinkIcon","faGithub","faExternalLinkSquareAlt"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AAEA,IAAMC,aAAa,GAAG,IAAtB;;AAEA,IAAMC,IAA6C,GAAG,SAAhDA,IAAgD,CAACC,KAAD,EAAwB;AAAA,wBAC1CP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAD0C;AAAA;AAAA,MACtEC,QADsE;AAAA,MAC5DC,cAD4D;;AAE5E,MAAMC,OAAO,GAAGX,KAAK,CAACY,MAAN,CAA6B,IAA7B,CAAhB,CAF4E,CAI5E;;AACAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAM;AACpBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,iBAAlC,EAAqD,IAArD;AAEA,WAAO;AAAA,aAAMF,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,iBAArC,EAAwD,IAAxD,CAAN;AAAA,KAAP;AACD,GAJD,EAIG,CAACP,QAAD,CAJH;;AAMA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,QAAME,OAAO,GAAGP,OAAO,CAACQ,OAAR,CAAiBC,qBAAjB,GAAyCC,GAAzD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAAqBX,KAAK,CAACiB,KAA3B;;AACA,QAAIN,OAAO,GAAGb,aAAd,EAA6B;AAC3BK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFD,MAEO;AACLA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GARD;;AAWA,MAAIe,WAAW,GAAG,CAChBtB,GAAG,CAACG,IADY,EAEhBG,QAAQ,GAAGN,GAAG,CAACuB,IAAP,GAAc,IAFN,EAGhBC,IAHgB,CAGX,GAHW,CAAlB;AAKA,SACE;AAAK,IAAA,SAAS,EAAEF,WAAhB;AAA6B,IAAA,GAAG,EAAEd,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAER,GAAG,CAACyB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOrB,KAAK,CAACiB,KAAb,CAAzB,CADF,EAEE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAEjB,KAAK,CAACsB,OAA1B;AACE,IAAA,KAAK,EAAEtB,KAAK,CAACiB,KADf;AAEE,IAAA,IAAI,EAAEjB,KAAK,CAACuB,IAFd;AAGE,IAAA,UAAU,EAAEvB,KAAK,CAACwB,UAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AASD,CApCD;;AA6CA,SAASC,SAAT,CAAmBzB,KAAnB,EAAkC;AAChC,SACE;AAAK,IAAA,SAAS,EAAEJ,GAAG,CAAC8B,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE9B,GAAG,CAAC+B,KAApB;AAA2B,IAAA,GAAG,EAAE3B,KAAK,CAACsB,OAAtC;AAA+C,IAAA,GAAG,EAAC,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAE1B,GAAG,CAACgC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEhC,GAAG,CAACiC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAE7B,KAAK,CAACuB,IAAzB;AAA+B,IAAA,IAAI,EAAC,MAApC;AAA2C,IAAA,IAAI,EAAE,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEvB,KAAK,CAACwB,UAAzB;AAAqC,IAAA,IAAI,EAAC,QAA1C;AAAmD,IAAA,IAAI,EAAE,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAFF,CADF;AAWD;;AAQD,IAAMM,QAA4C,GAAG,SAA/CA,QAA+C,OAA0C;AAAA,MAAvCC,OAAuC,QAAvCA,OAAuC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAE7F,SACI;AAAG,IAAA,IAAI,EAAEF,OAAT;AAAkB,IAAA,SAAS,EAAEnC,GAAG,CAACkC,QAAjC;AAA2C,IAAA,MAAM,EAAC,QAAlD;AAA2D,IAAA,GAAG,EAAC,qBAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAElC,GAAG,CAACsC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAP,CADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAEpC,GAAG,CAACuC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,KAAK,QAAT,GACC,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEvC,KAAK,CAAC0C,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEG,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE1C,KAAK,CAAC2C,uBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CAJJ,CADJ;AAaD,CAfD;;AAiBA,eAAetC,IAAf","sourcesContent":["import React from 'react'\nimport { IPortfolioItem } from '../../interfaces/interfaces'\nimport { icons } from '../../icons/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst css = require('./Item.module.css')\n\nconst SHOW_TRESHOLD = 1600\n\nconst Item: React.FunctionComponent<IPortfolioItem> = (props): JSX.Element => {\n  const[showItem, toggleShowItem] = React.useState(false)\n  const itemRef = React.useRef<HTMLDivElement>(null)\n\n  // update the event listeners every time the showItem state is changed\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true)\n  \n    return () => window.removeEventListener('scroll', checkIfInViewport, true)  \n  }, [showItem])\n\n  const checkIfInViewport = () => {\n    const itemPos = itemRef.current!.getBoundingClientRect().top\n    console.log(itemPos, props.title)\n    if (itemPos < SHOW_TRESHOLD) {\n      toggleShowItem(true)\n    } else {\n      toggleShowItem(false)\n    }\n  }\n\n\n  let itemClasses = [\n    css.Item, \n    showItem ? css.show : null\n  ].join(' ')\n  \n  return (\n    <div className={itemClasses} ref={itemRef} >\n      <p className={css.Title}><span>{props.title}</span></p>\n      <ItemImage gif_src={props.gif_src} \n        title={props.title} \n        link={props.link} \n        githubLink={props.githubLink} />\n    </div>\n  )\n}\n\ninterface IImage {\n  gif_src: string\n  title: string\n  link: string\n  githubLink: string\n}\n\nfunction ItemImage(props: IImage) {\n  return (\n    <div className={css.ImageContainer}>\n      <img className={css.Image} src={props.gif_src} alt='portfolio-img'/>\n      <div className={css.ImageMask}>\n        <div className={css.MaskLinks}>\n          <MaskLink address={props.link} text=\"Open\" icon={\"link\"} />\n          <MaskLink address={props.githubLink} text=\"Github\" icon={\"github\"} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface IMaskLink {\n  address: string\n  text: string\n  icon: string\n}\n\nconst MaskLink: React.FunctionComponent<IMaskLink> = ({ address, text, icon }): JSX.Element => {\n\n  return (\n      <a href={address} className={css.MaskLink} target='_blank' rel=\"noopener noreferrer\">\n          <div className={css.MaskLinkText}>\n              <span>{text}</span>\n          </div>\n          <div className={css.MaskLinkIcon}>\n              {icon === 'github' ? \n                <FontAwesomeIcon icon={icons.faGithub} /> \n                : <FontAwesomeIcon icon={icons.faExternalLinkSquareAlt} />\n              }\n          </div>\n      </a>\n  )\n}\n\nexport default Item"]},"metadata":{},"sourceType":"module"}