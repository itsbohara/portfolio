{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { icons } from '../../icons/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ExpandedVideo from '../ExpandedVideo/ExpandedVideo';\n\nvar css = require('./Item.module.css');\n\nvar SHOW_TRESHOLD = 300; // pixels\n\nvar Item = function Item(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showItem = _React$useState2[0],\n      toggleShowItem = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showVideo = _React$useState4[0],\n      toggleShowVideo = _React$useState4[1];\n\n  var itemRef = React.useRef(null); // update the event listeners every time the showItem state is changed\n\n  React.useEffect(function () {\n    window.addEventListener('scroll', checkIfInViewport, true);\n    return function () {\n      return window.removeEventListener('scroll', checkIfInViewport, true);\n    };\n  }, [showItem]);\n\n  var checkIfInViewport = function checkIfInViewport() {\n    var itemPos = itemRef.current.getBoundingClientRect().top;\n    var windowHeight = window.innerHeight;\n\n    if (itemPos + SHOW_TRESHOLD < windowHeight) {\n      toggleShowItem(true);\n    } else if (showItem) {\n      toggleShowItem(false);\n    }\n  };\n\n  var itemClasses = [css.Item, showItem ? css.show : null].join(' ');\n  return __jsx(\"div\", {\n    className: itemClasses,\n    ref: itemRef\n  }, __jsx(\"p\", {\n    className: css.Title\n  }, __jsx(\"span\", null, props.title)), __jsx(\"div\", {\n    className: css.ItemContent\n  }, __jsx(ItemImage, {\n    video_src: props.video_src,\n    gif_src: props.gif_src,\n    link: props.link,\n    githubLink: props.githubLink,\n    toggle: toggleShowVideo\n  }), __jsx(ItemInfo, {\n    languages: props.language,\n    title: props.title,\n    desc: props.description,\n    desktop: props.desktop,\n    mobile: props.mobile,\n    link: props.link,\n    githubLink: props.githubLink\n  })), showVideo && __jsx(ExpandedVideo, {\n    video_src: props.video_src,\n    close: function close() {\n      return toggleShowVideo(false);\n    }\n  }));\n};\n\nvar ItemInfo = function ItemInfo(props) {\n  return __jsx(\"div\", {\n    className: css.InfoContainer\n  }, __jsx(\"div\", {\n    className: css.MadeWith\n  }, \"made with\", props.languages.map(function (lang, index) {\n    return __jsx(\"p\", {\n      key: lang,\n      className: css.Language\n    }, lang, index !== props.languages.length - 1 ? __jsx(\"span\", {\n      style: {\n        color: 'dimgray'\n      }\n    }, \" + \") : '');\n  })), __jsx(\"p\", {\n    className: css.Description\n  }, props.desc), __jsx(\"div\", {\n    className: css.IconsAndLinks\n  }, __jsx(\"div\", {\n    className: css.ItemLinks\n  }, __jsx(\"a\", {\n    className: css.ItemLinkContainer,\n    href: props.githubLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(\"p\", {\n    className: css.ItemLink\n  }, \"Github\"), __jsx(\"div\", {\n    className: css.ItemLinkIcon\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faGithub\n  }))), __jsx(\"a\", {\n    className: css.ItemLinkContainer,\n    href: props.link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(\"p\", {\n    className: css.ItemLink\n  }, \"Open\"), __jsx(\"div\", {\n    className: css.ItemLinkIcon\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faExternalLinkSquareAlt\n  })))), __jsx(HardwareIcons, {\n    desktop: props.desktop,\n    mobile: props.mobile\n  })));\n};\n\nvar HardwareIcons = function HardwareIcons(_ref) {\n  var desktop = _ref.desktop,\n      mobile = _ref.mobile;\n  return __jsx(\"div\", {\n    className: css.HardwareIcons\n  }, __jsx(\"div\", {\n    className: css.HardwareIconContainer\n  }, __jsx(\"div\", {\n    className: [css.HardwareIcon, css.DesktopIcon].join(' ')\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faDesktop\n  })), desktop ? __jsx(CheckMarkIcon, null) : __jsx(TimesIcon, null)), __jsx(\"div\", {\n    className: css.HardwareIconContainer\n  }, __jsx(\"div\", {\n    className: [css.HardwareIcon, css.MobileIcon].join(' ')\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faMobileAlt\n  })), mobile ? __jsx(CheckMarkIcon, null) : __jsx(TimesIcon, null)));\n};\n\nvar CheckMarkIcon = function CheckMarkIcon() {\n  return __jsx(\"div\", {\n    className: [css.HardwareIcon, css.CheckMarkIcon].join(' ')\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faCheck,\n    color: \"green\"\n  }));\n};\n\nvar TimesIcon = function TimesIcon() {\n  return __jsx(\"div\", {\n    className: [css.HardwareIcon, css.TimesIcon].join(' ')\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faTimes,\n    color: \"crimson\"\n  }));\n};\n\nvar ItemImage = function ItemImage(props) {\n  return __jsx(\"div\", {\n    className: css.ImageContainer\n  }, __jsx(\"img\", {\n    className: css.Image,\n    src: props.gif_src,\n    alt: \"portfolio-img\"\n  }), __jsx(\"div\", {\n    className: css.ImageMask\n  }, __jsx(\"div\", {\n    className: css.MaskLinks\n  }, __jsx(ExpandVideo, {\n    toggle: props.toggle\n  }))));\n};\n\nvar ExpandVideo = function ExpandVideo(_ref2) {\n  var toggle = _ref2.toggle;\n  var classes = [css.ExpandVideo].join(' ');\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes,\n    onClick: function onClick() {\n      return toggle(true);\n    }\n  }, __jsx(\"p\", null, \"Expand Video\"), __jsx(FontAwesomeIcon, {\n    icon: icons.faExpand,\n    color: \"white\"\n  })));\n};\n\nvar MaskLink = function MaskLink(_ref3) {\n  var address = _ref3.address,\n      text = _ref3.text;\n  return __jsx(\"a\", {\n    href: address,\n    className: css.MaskLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(\"div\", {\n    className: css.MaskLinkText\n  }, __jsx(\"span\", null, text)));\n};\n\nexport default Item;","map":{"version":3,"sources":["C:/Users/Joonajo/code/portfolio/components/Item/Item.tsx"],"names":["React","icons","FontAwesomeIcon","ExpandedVideo","css","require","SHOW_TRESHOLD","Item","props","useState","showItem","toggleShowItem","showVideo","toggleShowVideo","itemRef","useRef","useEffect","window","addEventListener","checkIfInViewport","removeEventListener","itemPos","current","getBoundingClientRect","top","windowHeight","innerHeight","itemClasses","show","join","Title","title","ItemContent","video_src","gif_src","link","githubLink","language","description","desktop","mobile","ItemInfo","InfoContainer","MadeWith","languages","map","lang","index","Language","length","color","Description","desc","IconsAndLinks","ItemLinks","ItemLinkContainer","ItemLink","ItemLinkIcon","faGithub","faExternalLinkSquareAlt","HardwareIcons","HardwareIconContainer","HardwareIcon","DesktopIcon","faDesktop","MobileIcon","faMobileAlt","CheckMarkIcon","faCheck","TimesIcon","faTimes","ItemImage","ImageContainer","Image","ImageMask","MaskLinks","toggle","ExpandVideo","classes","faExpand","MaskLink","address","text","MaskLinkText"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { IPortfolioItem } from '../../interfaces/interfaces'\r\nimport { icons } from '../../icons/icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ExpandedVideo from '../ExpandedVideo/ExpandedVideo'\r\n\r\nconst css = require('./Item.module.css')\r\n\r\nconst SHOW_TRESHOLD = 300 // pixels\r\n\r\nconst Item: React.FunctionComponent<IPortfolioItem> = (props): JSX.Element => {\r\n  const[showItem, toggleShowItem] = React.useState(false)\r\n  const[showVideo, toggleShowVideo] = React.useState(false)\r\n  const itemRef = React.useRef<HTMLDivElement>(null)\r\n  \r\n  // update the event listeners every time the showItem state is changed\r\n  React.useEffect(() => {\r\n    window.addEventListener('scroll', checkIfInViewport, true)\r\n  \r\n    return () => window.removeEventListener('scroll', checkIfInViewport, true)  \r\n  }, [showItem])\r\n  \r\n  const checkIfInViewport = () => {\r\n    const itemPos: number = itemRef.current!.getBoundingClientRect().top\r\n    const windowHeight: number = window.innerHeight\r\n\r\n    if (itemPos + SHOW_TRESHOLD < windowHeight) {\r\n      toggleShowItem(true)\r\n    } else if (showItem) {\r\n      toggleShowItem(false)\r\n    }\r\n  }\r\n\r\n  const itemClasses = [\r\n    css.Item, \r\n    showItem ? css.show : null\r\n  ].join(' ')\r\n  \r\n  return (\r\n    <div className={itemClasses} ref={itemRef} >\r\n      <p className={css.Title}><span>{props.title}</span></p>\r\n      <div className={css.ItemContent}>\r\n        <ItemImage video_src={props.video_src}\r\n          gif_src={props.gif_src} \r\n          link={props.link} \r\n          githubLink={props.githubLink}\r\n          toggle={toggleShowVideo} />\r\n        <ItemInfo languages={props.language}\r\n          title={props.title}\r\n          desc={props.description}\r\n          desktop={props.desktop}\r\n          mobile={props.mobile}\r\n          link={props.link}\r\n          githubLink={props.githubLink} />\r\n      </div>\r\n      {showVideo && <ExpandedVideo video_src={props.video_src} close={() => toggleShowVideo(false)} />}\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface IItemInfo {\r\n  languages: string[]\r\n  title: string\r\n  desc: string\r\n  desktop: boolean\r\n  mobile: boolean\r\n  link: string\r\n  githubLink: string\r\n}\r\n\r\nconst ItemInfo: React.FunctionComponent<IItemInfo> = (props): JSX.Element => {\r\n  return (\r\n    <div className={css.InfoContainer}>\r\n      <div className={css.MadeWith}>\r\n        made with\r\n        {props.languages.map((lang: string, index: number) => (\r\n          <p key={lang} className={css.Language}>\r\n            {lang}\r\n            {index !== props.languages.length - 1 ? <span style={{color: 'dimgray'}}> + </span> : ''}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <p className={css.Description}>\r\n        {props.desc}\r\n      </p>\r\n      <div className={css.IconsAndLinks}>\r\n        <div className={css.ItemLinks}>\r\n          <a className={css.ItemLinkContainer} href={props.githubLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <p className={css.ItemLink}>Github</p>\r\n            <div className={css.ItemLinkIcon}>\r\n              <FontAwesomeIcon icon={icons.faGithub} />\r\n            </div>\r\n          </a>\r\n          <a className={css.ItemLinkContainer} href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <p className={css.ItemLink}>Open</p>\r\n            <div className={css.ItemLinkIcon}>\r\n              <FontAwesomeIcon icon={icons.faExternalLinkSquareAlt} />\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <HardwareIcons desktop={props.desktop} mobile={props.mobile} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface IHardwareICons {\r\n  desktop: boolean\r\n  mobile: boolean\r\n}\r\n\r\nconst HardwareIcons: React.FunctionComponent<IHardwareICons> = ({ desktop, mobile }): JSX.Element => (\r\n  <div className={css.HardwareIcons}>\r\n    <div className={css.HardwareIconContainer}>\r\n      <div className={[css.HardwareIcon, css.DesktopIcon].join(' ')}>\r\n        <FontAwesomeIcon icon={icons.faDesktop} />\r\n      </div>\r\n      {desktop ?\r\n        <CheckMarkIcon /> : <TimesIcon />\r\n      }\r\n    </div>\r\n    <div className={css.HardwareIconContainer}>\r\n      <div className={[css.HardwareIcon, css.MobileIcon].join(' ')}>\r\n        <FontAwesomeIcon icon={icons.faMobileAlt} />\r\n      </div>\r\n      {mobile ? \r\n        <CheckMarkIcon /> : <TimesIcon />\r\n      }\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst CheckMarkIcon: React.FunctionComponent = (): JSX.Element => (\r\n  <div className={[css.HardwareIcon, css.CheckMarkIcon].join(' ')}>\r\n    <FontAwesomeIcon icon={icons.faCheck} color=\"green\" />\r\n  </div>\r\n)\r\n\r\nconst TimesIcon: React.FunctionComponent = (): JSX.Element => (\r\n  <div className={[css.HardwareIcon, css.TimesIcon].join(' ')}>\r\n    <FontAwesomeIcon icon={icons.faTimes} color=\"crimson\" />\r\n  </div>\r\n)\r\n\r\ninterface IImage {\r\n  video_src: string\r\n  gif_src: string\r\n  link: string\r\n  githubLink: string\r\n  toggle: (newValue: boolean) => void\r\n}\r\n\r\nconst ItemImage: React.FunctionComponent<IImage> = (props): JSX.Element => {\r\n  return (\r\n    <div className={css.ImageContainer}>\r\n      <img className={css.Image} src={props.gif_src} alt='portfolio-img'/>\r\n      <div className={css.ImageMask}>\r\n        <div className={css.MaskLinks}>\r\n          {/* <MaskLink address={props.link} text=\"Open\" icon={\"link\"} />\r\n          <MaskLink address={props.githubLink} text=\"Github\" icon={\"github\"} /> */}\r\n          <ExpandVideo toggle={props.toggle}  />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface IExpandVideo {\r\n  toggle: (newValue: boolean) => void\r\n}\r\n\r\nconst ExpandVideo: React.FunctionComponent<IExpandVideo> = ({ toggle }): JSX.Element => {\r\n \r\n  const classes = [\r\n    css.ExpandVideo\r\n  ].join(' ')\r\n\r\n  return (\r\n    <>\r\n      <div className={classes} onClick={() => toggle(true)}>\r\n        <p>Expand Video</p>\r\n        <FontAwesomeIcon icon={icons.faExpand} color='white' />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\ninterface IMaskLink {\r\n  address: string\r\n  text: string\r\n  icon: string\r\n}\r\n\r\nconst MaskLink: React.FunctionComponent<IMaskLink> = ({ address, text }): JSX.Element => {\r\n  return (\r\n      <a href={address} className={css.MaskLink} target='_blank' rel=\"noopener noreferrer\">\r\n          <div className={css.MaskLinkText}>\r\n              <span>{text}</span>\r\n          </div>\r\n      </a>\r\n  )\r\n}\r\n\r\nexport default Item"]},"metadata":{},"sourceType":"module"}