{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner';\n\nconst css = require('./index.module.css');\n\nconst AdminPage = () => {\n  const [signedIn, setSignedIn] = React.useState(false);\n  const [sending, setSending] = React.useState(false);\n  React.useEffect(() => {\n    document.title = 'Portfolio // Admin';\n\n    if (localStorage.length !== 0) {\n      // check for auth info in local storage\n      // compare current time in milliseconds to time in storage\n      // if current time is LESS, use the auth info from storage to refresh\n      // else, clear local storage\n      if (new Date().getTime() < +localStorage.getItem('expireTime')) {\n        console.log('use old auth info');\n        localStorage.clear();\n      } else {\n        console.log('clear local storage');\n        localStorage.clear();\n      }\n    }\n  }, []);\n  return __jsx(\"div\", {\n    className: css.Main\n  }, !signedIn && __jsx(AuthForm, {\n    signIn: signInHandler\n  }), sending && __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null)), signedIn && __jsx(\"p\", null, \"Signed In.\"));\n};\n\nexport default AdminPage;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/pages/admin/index.tsx"],"names":["React","CubeSpinner","css","require","AdminPage","signedIn","setSignedIn","useState","sending","setSending","useEffect","document","title","localStorage","length","Date","getTime","getItem","console","log","clear","Main","signInHandler","Loading"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAMA,SAASC,WAAT,QAA4B,qCAA5B;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AAEA,MAAMC,SAAmB,GAAG,MAAmB;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAwB,KAAxB,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,KAAK,CAACO,QAAN,CAAwB,KAAxB,CAA9B;AAEAP,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AAClBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,oBAAjB;;AACA,QAAIC,YAAY,CAACC,MAAb,KAAwB,CAA5B,EAA+B;AAC3B;AACA;AACA;AACA;AACA,UAAI,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,CAAEH,YAAY,CAACI,OAAb,CAAqB,YAArB,CAA7B,EAAmE;AAC/DC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,QAAAA,YAAY,CAACO,KAAb;AACH,OAHD,MAGO;AACHF,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAN,QAAAA,YAAY,CAACO,KAAb;AACH;AACJ;AAEJ,GAhBD,EAgBG,EAhBH;AAkBA,SACI;AAAK,IAAA,SAAS,EAAElB,GAAG,CAACmB;AAApB,KACM,CAAChB,QAAD,IAAa,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEiB;AAAlB,IADnB,EAEMd,OAAO,IACL;AAAK,IAAA,SAAS,EAAEN,GAAG,CAACqB;AAApB,KACI,MAAC,WAAD,OADJ,CAHR,EAOMlB,QAAQ,IAAI,8BAPlB,CADJ;AAWH,CAjCD;;AAqCA,eAAeD,SAAf","sourcesContent":["import * as React from 'react'\n\nimport { NextPage } from 'next'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { googleKey } from '../../keys'\nimport { icons } from '../../icons/icons'\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\n\nconst css = require('./index.module.css')\n\nconst AdminPage: NextPage = (): JSX.Element => {\n    const [signedIn, setSignedIn] = React.useState<boolean>(false)\n    const [sending, setSending] = React.useState<boolean>(false)\n\n    React.useEffect(() => {\n        document.title = 'Portfolio // Admin'\n        if (localStorage.length !== 0) {\n            // check for auth info in local storage\n            // compare current time in milliseconds to time in storage\n            // if current time is LESS, use the auth info from storage to refresh\n            // else, clear local storage\n            if (new Date().getTime() < +(localStorage.getItem('expireTime')!)) {\n                console.log('use old auth info')\n                localStorage.clear()\n            } else {\n                console.log('clear local storage')\n                localStorage.clear()\n            }\n        }\n        \n    }, [])\n\n    return (\n        <div className={css.Main}>\n            { !signedIn && <AuthForm signIn={signInHandler} /> }\n            { sending && \n                <div className={css.Loading}>\n                    <CubeSpinner />\n                </div>\n            }\n            { signedIn && <p>Signed In.</p>}\n        </div>\n    )\n}\n\n\n\nexport default AdminPage"]},"metadata":{},"sourceType":"module"}