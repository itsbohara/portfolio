{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Auth from '../../containers/Auth/Auth';\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\nimport { AuthContext } from '../../context/authContext';\nimport { Languages } from '../../portfolio/portfolio';\n\nconst css = require('./Admin.module.css');\n\nconst Admin = () => {\n  const authContext = React.useContext(AuthContext);\n  const state = authContext.state;\n  const dispatch = authContext.dispatch;\n  const [sending, setSending] = React.useState(true);\n  const [screensize, setScreensize] = React.useState();\n  React.useEffect(() => {\n    document.title = 'Portfolio // Admin';\n    setScreensize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    if (localStorage.length !== 0) {\n      // check for auth info in local storage\n      // compare current time in milliseconds to expire time in storage\n      // if current time is LESS, use the auth info from storage to refresh\n      // else, clear local storage\n      const expireTime = localStorage.getItem('expireTime');\n\n      if (expireTime) {\n        // if auth token has not expired yet\n        if (new Date().getTime() < +expireTime) {\n          const authInfo = {\n            email: localStorage.getItem('email'),\n            password: localStorage.getItem('password'),\n            idToken: localStorage.getItem('idToken')\n          };\n          dispatch({\n            type: 'signin',\n            payload: authInfo\n          });\n          setSending(false); // if auth has expired\n        } else {\n          localStorage.clear();\n          setSending(false);\n        }\n      }\n    } else {\n      setSending(false);\n    }\n  }, []);\n\n  const signInHandler = (email, password, idToken) => {\n    const authInfo = {\n      email: email,\n      password: password,\n      idToken: idToken\n    };\n    dispatch({\n      type: 'signin',\n      payload: authInfo\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main,\n    style: {\n      minHeight: `${screensize === null || screensize === void 0 ? void 0 : screensize.height}px`,\n      minWidth: `${screensize === null || screensize === void 0 ? void 0 : screensize.width}px`\n    }\n  }, !state.signedIn && __jsx(Auth, {\n    setSending: setSending,\n    signIn: signInHandler\n  }), sending && __jsx(Loading, null), state.signedIn && __jsx(AdminContent, {\n    token: state.idToken\n  }));\n};\n\nconst Loading = () => __jsx(\"div\", {\n  className: css.Loading\n}, __jsx(CubeSpinner, null));\n\nconst AdminContent = ({\n  token\n}) => {\n  return __jsx(\"div\", {\n    className: css.AdminContentWrapper\n  }, __jsx(PortfolioItems, null));\n};\n\nconst PortfolioItems = ({\n  items\n}) => {\n  return __jsx(\"div\", {\n    className: css.ItemsContainer\n  }, items && items.map(item => {\n    return __jsx(\"div\", null, \"item\");\n  }), __jsx(AddPortfolioItem, null));\n};\n\nconst initialForm = {\n  title: {\n    id: 'title',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'title',\n    require: true,\n    value: ''\n  },\n  description: {\n    id: 'description',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'description',\n    require: true,\n    value: ''\n  },\n  languages: {\n    id: 'languages',\n    elemType: 'select',\n    options: [..._Object$keys(Languages)],\n    require: true\n  },\n  link: {\n    id: 'link',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'link to app',\n    require: true,\n    value: ''\n  },\n  github: {\n    id: 'github',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'github link',\n    require: true,\n    value: ''\n  },\n  video_src: {\n    id: 'video_src',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'video link',\n    require: true,\n    value: ''\n  },\n  gif_src: {\n    id: 'gif_src',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'gif link',\n    require: true,\n    value: ''\n  },\n  desktop: {\n    id: 'desktop',\n    elemType: 'select',\n    options: ['Yes', 'No'],\n    require: true,\n    value: 'Yes'\n  },\n  mobile: {\n    id: 'mobile',\n    elemType: 'select',\n    options: ['Yes', 'No'],\n    require: true,\n    value: 'Yes'\n  }\n};\n\nconst AddPortfolioItem = () => {\n  const [showForm, setShowForm] = React.useState(false);\n\n  const addItemToDatabase = item => {\n    const baseURL = 'https://joonajo-portfolio.firebaseio.com/items.json';\n    const idToken = localStorage.getItem('idToken');\n    const tokenParam = `?auth=${idToken}`;\n    console.log(item);\n    const newItem = {};\n    fetch(baseURL + tokenParam, {\n      method: 'put',\n      body: newItem\n    }).then(response => response.json().then(data => {\n      console.log(data);\n    }));\n  };\n\n  const clickHandler = () => {\n    setShowForm(true);\n  };\n\n  return __jsx(\"div\", {\n    className: css.AddItemContainer\n  }, __jsx(\"span\", {\n    className: css.AddItemButton,\n    onClick: clickHandler\n  }, \"add item \", __jsx(FontAwesomeIcon, {\n    icon: icons.faPlus,\n    className: css.AddItemIcon\n  })), __jsx(NewItemForm, {\n    show: showForm,\n    close: () => setShowForm(false),\n    add: addItemToDatabase\n  }));\n};\n\nconst NewItemForm = ({\n  show,\n  close,\n  add\n}) => {\n  const [form, setForm] = React.useState(initialForm);\n\n  const changeHandler = (id, event) => {\n    const updatedForm = _objectSpread({}, form, {\n      [id]: _objectSpread({}, form[id], {\n        value: event.target.value\n      })\n    });\n\n    setForm(updatedForm);\n  };\n\n  const addHandler = () => {\n    const newItem = {\n      title: form.title.value,\n      language: [Languages.React, Languages.TypeScript],\n      description: form.description.value,\n      link: form.link.value,\n      githubLink: form.github.value,\n      video_src: form.video_src.value,\n      gif_src: form.gif_src.value,\n      desktop: true,\n      mobile: true\n    };\n    add(newItem);\n  };\n\n  const itemFormClasses = [css.ItemForm, show && css.show].join(' ');\n  return __jsx(\"div\", {\n    className: itemFormClasses\n  }, __jsx(FontAwesomeIcon, {\n    className: css.FormCloseButton,\n    icon: icons.faTimes,\n    onClick: close\n  }), _Object$keys(form).map(element => {\n    return __jsx(\"input\", {\n      key: element,\n      className: css.Input,\n      type: form[element].type,\n      value: form[element].value,\n      placeholder: form[element].placeholder,\n      onChange: e => changeHandler(form[element].id, e)\n    });\n  }), __jsx(\"div\", {\n    className: css.FormAddButton,\n    onClick: addHandler\n  }, __jsx(\"p\", null, \"add\")));\n};\n\nexport default Admin;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/containers/Admin/Admin.tsx"],"names":["React","Auth","CubeSpinner","FontAwesomeIcon","icons","AuthContext","Languages","css","require","Admin","authContext","useContext","state","dispatch","sending","setSending","useState","screensize","setScreensize","useEffect","document","title","width","window","innerWidth","height","innerHeight","localStorage","length","expireTime","getItem","Date","getTime","authInfo","email","password","idToken","type","payload","clear","signInHandler","Main","minHeight","minWidth","signedIn","Loading","AdminContent","token","AdminContentWrapper","PortfolioItems","items","ItemsContainer","map","item","initialForm","id","elemType","placeholder","value","description","languages","options","link","github","video_src","gif_src","desktop","mobile","AddPortfolioItem","showForm","setShowForm","addItemToDatabase","baseURL","tokenParam","console","log","newItem","fetch","method","body","then","response","json","data","clickHandler","AddItemContainer","AddItemButton","faPlus","AddItemIcon","NewItemForm","show","close","add","form","setForm","changeHandler","event","updatedForm","target","addHandler","language","TypeScript","githubLink","itemFormClasses","ItemForm","join","FormCloseButton","faTimes","element","Input","e","FormAddButton"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\nimport Auth from '../../containers/Auth/Auth'\r\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../icons/icons'\r\nimport { IPortfolioItem } from '../../interfaces/interfaces'\r\nimport { IAuthContext, AuthContext, TAuthState, TDispatch } from '../../context/authContext'\r\nimport { Languages } from '../../portfolio/portfolio'\r\n\r\nconst css = require('./Admin.module.css')\r\n\r\nconst Admin: React.FunctionComponent = (): JSX.Element => {\r\n    const authContext: IAuthContext = React.useContext(AuthContext)\r\n    const state: TAuthState = authContext.state\r\n    const dispatch: TDispatch = authContext.dispatch!\r\n\r\n    const [sending, setSending] = React.useState<boolean>(true)\r\n    const [screensize, setScreensize] = React.useState<{ width: number, height: number}>()\r\n\r\n    React.useEffect(() => {\r\n        document.title = 'Portfolio // Admin'\r\n\r\n        setScreensize({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        })\r\n\r\n        if (localStorage.length !== 0) {\r\n            // check for auth info in local storage\r\n            // compare current time in milliseconds to expire time in storage\r\n            // if current time is LESS, use the auth info from storage to refresh\r\n            // else, clear local storage\r\n            const expireTime = (localStorage.getItem('expireTime'))\r\n            if (expireTime) {\r\n                // if auth token has not expired yet\r\n                if (new Date().getTime() < +expireTime) {\r\n                    const authInfo = {\r\n                        email: localStorage.getItem('email')!,\r\n                        password: localStorage.getItem('password')!,\r\n                        idToken: localStorage.getItem('idToken')!\r\n                    }\r\n                    dispatch({ type: 'signin', payload: authInfo })\r\n                    setSending(false)\r\n                // if auth has expired\r\n                } else {\r\n                    localStorage.clear()\r\n                    setSending(false)\r\n                }\r\n            }\r\n        } else {\r\n            setSending(false)\r\n        }\r\n    }, [])\r\n\r\n    const signInHandler = (email: string, password: string, idToken: string) => {\r\n        const authInfo = {\r\n            email: email,\r\n            password: password,\r\n            idToken: idToken\r\n        }\r\n        dispatch({ type: 'signin', payload: authInfo })\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main} style={{minHeight: `${screensize?.height}px`, minWidth: `${screensize?.width}px`}}>\r\n            { !state.signedIn && <Auth setSending={setSending} signIn={signInHandler} /> }\r\n            { sending && <Loading /> }\r\n            { state. signedIn && <AdminContent token={state.idToken!} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Loading: React.FunctionComponent = (): JSX.Element => (\r\n    <div className={css.Loading}>\r\n        <CubeSpinner />\r\n    </div>\r\n)\r\n\r\ninterface IAdminContent {\r\n    token: string\r\n}\r\n\r\nconst AdminContent: React.FunctionComponent<IAdminContent> = ({ token }): JSX.Element => {\r\n    return (\r\n        <div className={css.AdminContentWrapper}>\r\n            <PortfolioItems />\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IPortfolioItems {\r\n    items?: IPortfolioItem[]\r\n}\r\n\r\nconst PortfolioItems: React.FunctionComponent<IPortfolioItems> = ({ items }): JSX.Element => {\r\n    return (\r\n        <div className={css.ItemsContainer}>\r\n            { items && items.map((item: IPortfolioItem) => {\r\n                return (\r\n                    <div>\r\n                        item\r\n                    </div>\r\n                )\r\n            })}\r\n            <AddPortfolioItem />\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IForm {\r\n    [title: string]: any\r\n    description: any\r\n    languages: any\r\n    link: any\r\n    github: any\r\n    video_src: any\r\n    gif_src: any\r\n    desktop: any\r\n    mobile: any\r\n}\r\n\r\nconst initialForm: IForm = {\r\n    title: {\r\n        id: 'title',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'title',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    description: {\r\n        id: 'description',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'description',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    languages: {\r\n        id: 'languages',\r\n        elemType: 'select',\r\n        options: [...Object.keys(Languages)],\r\n        require: true\r\n    },\r\n    link: {\r\n        id: 'link',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'link to app',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    github: {\r\n        id: 'github',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'github link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    video_src: {\r\n        id: 'video_src',\r\n        elemType: 'input',  \r\n        type: 'text',\r\n        placeholder: 'video link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    gif_src: {\r\n        id: 'gif_src',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'gif link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    desktop: {\r\n        id: 'desktop',\r\n        elemType: 'select',\r\n        options : ['Yes', 'No'],\r\n        require: true,\r\n        value: 'Yes'\r\n    },\r\n    mobile: {   \r\n        id: 'mobile',\r\n        elemType: 'select',\r\n        options : ['Yes', 'No'],\r\n        require: true,\r\n        value: 'Yes'\r\n    }\r\n}\r\n\r\nconst AddPortfolioItem: React.FunctionComponent = (): JSX.Element => {\r\n    const [showForm, setShowForm] = React.useState<boolean>(false)\r\n\r\n    const addItemToDatabase = (item: IPortfolioItem) => {\r\n        const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items.json'\r\n        const idToken: string = localStorage.getItem('idToken')!\r\n        const tokenParam: string = `?auth=${idToken}`\r\n\r\n        console.log(item)\r\n\r\n        const newItem: any = {\r\n            \r\n        }\r\n\r\n        fetch(baseURL + tokenParam, { method: 'put', body: newItem }).then(response => response.json()\r\n            .then(data => {\r\n                console.log(data)\r\n            }))\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        setShowForm(true)\r\n    }\r\n\r\n    return (\r\n        <div className={css.AddItemContainer}>\r\n            <span className={css.AddItemButton} onClick={clickHandler}>add item <FontAwesomeIcon icon={icons.faPlus} className={css.AddItemIcon} /></span>\r\n            <NewItemForm show={showForm} close={() => setShowForm(false)} add={addItemToDatabase} />\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface INewItemForm {\r\n    show: boolean\r\n    close: () => void\r\n    add: (item: IPortfolioItem) => void\r\n}\r\n\r\nconst NewItemForm: React.FunctionComponent<INewItemForm> = ({ show, close, add }): JSX.Element => {\r\n    const [form, setForm] = React.useState<IForm>(initialForm)\r\n\r\n    const changeHandler = (id: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedForm: IForm = {\r\n            ...form,\r\n            [id]: {\r\n                ...form[id],\r\n                value: event.target.value\r\n            }\r\n        }\r\n        setForm(updatedForm)\r\n    }\r\n\r\n    const addHandler = () => {\r\n        const newItem: IPortfolioItem = {\r\n            title: form.title.value,\r\n            language: [Languages.React, Languages.TypeScript],\r\n            description: form.description.value,\r\n            link: form.link.value,\r\n            githubLink: form.github.value,\r\n            video_src: form.video_src.value,\r\n            gif_src: form.gif_src.value,\r\n            desktop: true,\r\n            mobile: true\r\n        }\r\n\r\n        add(newItem)\r\n    }\r\n    \r\n    const itemFormClasses = [\r\n        css.ItemForm,\r\n        show && css.show\r\n    ].join(' ')\r\n\r\n    return (\r\n        <div className={itemFormClasses}>\r\n            <FontAwesomeIcon className={css.FormCloseButton} icon={icons.faTimes} onClick={close} />\r\n            { Object.keys(form).map((element: string) => {\r\n                return (\r\n                    <input key={element}\r\n                        className={css.Input} \r\n                        type={form[element].type}\r\n                        value={form[element].value} \r\n                        placeholder={form[element].placeholder}\r\n                        onChange={(e) => changeHandler(form[element].id, e)} />\r\n                )\r\n            })}\r\n            <div className={css.FormAddButton} onClick={addHandler}>\r\n                <p>add</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n"]},"metadata":{},"sourceType":"module"}