{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Auth from '../../containers/Auth/Auth';\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\nimport { AuthContext } from '../../context/authContext';\nimport { Languages } from '../../portfolio/portfolio';\n\nvar css = require('./Admin.module.css');\n\nvar Admin = function Admin() {\n  var authContext = React.useContext(AuthContext);\n  var state = authContext.state;\n  var dispatch = authContext.dispatch;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sending = _React$useState2[0],\n      setSending = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      screensize = _React$useState4[0],\n      setScreensize = _React$useState4[1];\n\n  React.useEffect(function () {\n    document.title = 'Portfolio // Admin';\n    setScreensize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    if (localStorage.length !== 0) {\n      // check for auth info in local storage\n      // compare current time in milliseconds to expire time in storage\n      // if current time is LESS, use the auth info from storage to refresh\n      // else, clear local storage\n      var expireTime = localStorage.getItem('expireTime');\n\n      if (expireTime) {\n        // if auth token has not expired yet\n        if (new Date().getTime() < +expireTime) {\n          var authInfo = {\n            email: localStorage.getItem('email'),\n            password: localStorage.getItem('password'),\n            idToken: localStorage.getItem('idToken')\n          };\n          dispatch({\n            type: 'signin',\n            payload: authInfo\n          });\n          setSending(false); // if auth has expired\n        } else {\n          localStorage.clear();\n          setSending(false);\n        }\n      }\n    } else {\n      setSending(false);\n    }\n  }, []);\n\n  var signInHandler = function signInHandler(email, password, idToken) {\n    var authInfo = {\n      email: email,\n      password: password,\n      idToken: idToken\n    };\n    dispatch({\n      type: 'signin',\n      payload: authInfo\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main,\n    style: {\n      minHeight: \"\".concat(screensize === null || screensize === void 0 ? void 0 : screensize.height, \"px\"),\n      minWidth: \"\".concat(screensize === null || screensize === void 0 ? void 0 : screensize.width, \"px\")\n    }\n  }, !state.signedIn && __jsx(Auth, {\n    setSending: setSending,\n    signIn: signInHandler\n  }), sending && __jsx(Loading, null), state.signedIn && __jsx(AdminContent, {\n    token: state.idToken\n  }));\n};\n\nvar Loading = function Loading() {\n  return __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null));\n};\n\nvar AdminContent = function AdminContent(_ref) {\n  var token = _ref.token;\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      items = _React$useState6[0],\n      setItems = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      setLoading = _React$useState8[1];\n\n  React.useEffect(function () {\n    var baseURL = 'https://joonajo-portfolio.firebaseio.com/items.json';\n    var idToken = localStorage.getItem('idToken');\n    var tokenParam = \"?auth=\".concat(idToken);\n    fetch(baseURL + tokenParam, {\n      method: 'get'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var newItems = [];\n\n      _Object$keys(data).forEach(function (item) {\n        newItems.push(data[item]);\n      });\n\n      setLoading(false);\n      setItems(newItems);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: css.AdminContentWrapper\n  }, loading && __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null)), __jsx(PortfolioItems, {\n    items: items\n  }));\n};\n\nvar PortfolioItems = function PortfolioItems(_ref2) {\n  var items = _ref2.items;\n  return __jsx(\"div\", {\n    className: css.ItemsContainer\n  }, items && items.map(function (item) {\n    return __jsx(\"div\", null, \"item\");\n  }), __jsx(AddPortfolioItem, null));\n};\n\nvar initialForm = {\n  title: {\n    id: 'title',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'title',\n    require: true,\n    value: ''\n  },\n  description: {\n    id: 'description',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'description',\n    require: true,\n    value: ''\n  },\n  languages: {\n    id: 'languages',\n    elemType: 'select',\n    options: _toConsumableArray(_Object$keys(Languages)),\n    require: true,\n    multiple: true\n  },\n  link: {\n    id: 'link',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'link to app',\n    require: true,\n    value: ''\n  },\n  github: {\n    id: 'github',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'github link',\n    require: true,\n    value: ''\n  },\n  video_src: {\n    id: 'video_src',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'video link',\n    require: true,\n    value: ''\n  },\n  gif_src: {\n    id: 'gif_src',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'gif link',\n    require: true,\n    value: ''\n  },\n  desktop: {\n    id: 'desktop',\n    elemType: 'select',\n    options: ['Yes', 'No'],\n    require: true,\n    value: 'Yes',\n    multiple: false\n  },\n  mobile: {\n    id: 'mobile',\n    elemType: 'select',\n    options: ['Yes', 'No'],\n    require: true,\n    value: 'Yes',\n    multiple: false\n  }\n};\n\nvar AddPortfolioItem = function AddPortfolioItem() {\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      showForm = _React$useState10[0],\n      setShowForm = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      sending = _React$useState12[0],\n      setSending = _React$useState12[1];\n\n  var addItemToDatabase = function addItemToDatabase(item) {\n    setSending(true);\n    var baseURL = 'https://joonajo-portfolio.firebaseio.com/items/';\n    var title = item.title + \".json\";\n    var idToken = localStorage.getItem('idToken');\n    var tokenParam = \"?auth=\".concat(idToken);\n    fetch(baseURL + title + tokenParam, {\n      method: 'put',\n      body: _JSON$stringify(item)\n    }).then(function (response) {\n      return response.json().then(function (data) {\n        console.log(data);\n        setSending(false);\n        setShowForm(false);\n      });\n    });\n  };\n\n  var clickHandler = function clickHandler() {\n    setShowForm(true);\n  };\n\n  return __jsx(\"div\", {\n    className: css.AddItemContainer\n  }, __jsx(\"span\", {\n    className: css.AddItemButton,\n    onClick: clickHandler\n  }, \"add item \", __jsx(FontAwesomeIcon, {\n    icon: icons.faPlus,\n    className: css.AddItemIcon\n  })), __jsx(NewItemForm, {\n    show: showForm,\n    close: function close() {\n      return setShowForm(false);\n    },\n    add: addItemToDatabase,\n    sending: sending\n  }));\n};\n\nvar NewItemForm = function NewItemForm(_ref3) {\n  var show = _ref3.show,\n      close = _ref3.close,\n      add = _ref3.add,\n      sending = _ref3.sending;\n\n  var _React$useState13 = React.useState(initialForm),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      form = _React$useState14[0],\n      setForm = _React$useState14[1];\n\n  var _React$useState15 = React.useState(),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      formHeight = _React$useState16[0],\n      setFormHeight = _React$useState16[1];\n\n  var formRef = React.useRef(null);\n  React.useEffect(function () {\n    if (formRef && formRef.current) {\n      setFormHeight(formRef.current.getBoundingClientRect().height);\n    }\n  }, [formRef]);\n\n  var changeHandler = function changeHandler(id, event) {\n    var updatedForm = _objectSpread({}, form, _defineProperty({}, id, _objectSpread({}, form[id], {\n      value: event.target.value\n    })));\n\n    setForm(updatedForm);\n  };\n\n  var addHandler = function addHandler() {\n    var newItem = {\n      title: form.title.value,\n      language: [Languages.React, Languages.TypeScript],\n      description: form.description.value,\n      link: form.link.value,\n      githubLink: form.github.value,\n      video_src: form.video_src.value,\n      gif_src: form.gif_src.value,\n      desktop: form.desktop.value,\n      mobile: form.mobile.value\n    };\n    add(newItem);\n  };\n\n  var itemFormClasses = [css.ItemForm, show && css.show].join(' ');\n  return __jsx(\"form\", {\n    className: itemFormClasses,\n    ref: formRef\n  }, sending && __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null)), __jsx(FontAwesomeIcon, {\n    className: css.FormCloseButton,\n    icon: icons.faTimes,\n    onClick: close\n  }), _Object$keys(form).map(function (element) {\n    return __jsx(FormInput, {\n      key: element,\n      item: form[element],\n      change: changeHandler\n    });\n  }), __jsx(\"div\", {\n    className: css.FormAddButton,\n    onClick: addHandler\n  }, __jsx(\"p\", null, \"add\")));\n};\n\nvar FormInput = React.memo(function (_ref4) {\n  var item = _ref4.item,\n      change = _ref4.change;\n  var content = undefined;\n\n  switch (item.elemType) {\n    case 'input':\n      content = __jsx(\"input\", {\n        value: item.value,\n        placeholder: item.placeholder,\n        onChange: function onChange(e) {\n          return change(item.id, e);\n        },\n        className: css.FormInput\n      });\n      break;\n\n    case 'select':\n      content = __jsx(\"select\", {\n        className: css.FormSelect,\n        id: item.id,\n        multiple: item.multiple\n      }, item.options.map(function (option) {\n        return __jsx(\"option\", {\n          key: item.id + option,\n          value: option,\n          className: css.SelectOption\n        }, option);\n      }));\n      break;\n  }\n\n  return __jsx(\"div\", {\n    className: css.FormInputContainer\n  }, __jsx(\"p\", null, item.id), content);\n});\nexport default Admin;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/containers/Admin/Admin.tsx"],"names":["React","Auth","CubeSpinner","FontAwesomeIcon","icons","AuthContext","Languages","css","require","Admin","authContext","useContext","state","dispatch","useState","sending","setSending","screensize","setScreensize","useEffect","document","title","width","window","innerWidth","height","innerHeight","localStorage","length","expireTime","getItem","Date","getTime","authInfo","email","password","idToken","type","payload","clear","signInHandler","Main","minHeight","minWidth","signedIn","Loading","AdminContent","token","items","setItems","loading","setLoading","baseURL","tokenParam","fetch","method","then","response","json","data","newItems","forEach","item","push","AdminContentWrapper","PortfolioItems","ItemsContainer","map","initialForm","id","elemType","placeholder","value","description","languages","options","multiple","link","github","video_src","gif_src","desktop","mobile","AddPortfolioItem","showForm","setShowForm","addItemToDatabase","body","console","log","clickHandler","AddItemContainer","AddItemButton","faPlus","AddItemIcon","NewItemForm","show","close","add","form","setForm","formHeight","setFormHeight","formRef","useRef","current","getBoundingClientRect","changeHandler","event","updatedForm","target","addHandler","newItem","language","TypeScript","githubLink","itemFormClasses","ItemForm","join","FormCloseButton","faTimes","element","FormAddButton","FormInput","memo","change","content","undefined","e","FormSelect","option","SelectOption","FormInputContainer"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\nimport Auth from '../../containers/Auth/Auth'\r\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../icons/icons'\r\nimport { IPortfolioItem } from '../../interfaces/interfaces'\r\nimport { IAuthContext, AuthContext, TAuthState, TDispatch } from '../../context/authContext'\r\nimport { Languages } from '../../portfolio/portfolio'\r\n\r\nconst css = require('./Admin.module.css')\r\n\r\nconst Admin: React.FunctionComponent = (): JSX.Element => {\r\n    const authContext: IAuthContext = React.useContext(AuthContext)\r\n    const state: TAuthState = authContext.state\r\n    const dispatch: TDispatch = authContext.dispatch!\r\n\r\n    const [sending, setSending] = React.useState<boolean>(true)\r\n    const [screensize, setScreensize] = React.useState<{ width: number, height: number}>()\r\n\r\n    React.useEffect(() => {\r\n        document.title = 'Portfolio // Admin'\r\n\r\n        setScreensize({\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        })\r\n\r\n        if (localStorage.length !== 0) {\r\n            // check for auth info in local storage\r\n            // compare current time in milliseconds to expire time in storage\r\n            // if current time is LESS, use the auth info from storage to refresh\r\n            // else, clear local storage\r\n            const expireTime = (localStorage.getItem('expireTime'))\r\n            if (expireTime) {\r\n                // if auth token has not expired yet\r\n                if (new Date().getTime() < +expireTime) {\r\n                    const authInfo = {\r\n                        email: localStorage.getItem('email')!,\r\n                        password: localStorage.getItem('password')!,\r\n                        idToken: localStorage.getItem('idToken')!\r\n                    }\r\n                    dispatch({ type: 'signin', payload: authInfo })\r\n                    setSending(false)\r\n                // if auth has expired\r\n                } else {\r\n                    localStorage.clear()\r\n                    setSending(false)\r\n                }\r\n            }\r\n        } else {\r\n            setSending(false)\r\n        }\r\n    }, [])\r\n\r\n    const signInHandler = (email: string, password: string, idToken: string) => {\r\n        const authInfo = {\r\n            email: email,\r\n            password: password,\r\n            idToken: idToken\r\n        }\r\n        dispatch({ type: 'signin', payload: authInfo })\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main} style={{minHeight: `${screensize?.height}px`, minWidth: `${screensize?.width}px`}}>\r\n            { !state.signedIn && <Auth setSending={setSending} signIn={signInHandler} /> }\r\n            { sending && <Loading /> }\r\n            { state. signedIn && <AdminContent token={state.idToken!} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Loading: React.FunctionComponent = (): JSX.Element => (\r\n    <div className={css.Loading}>\r\n        <CubeSpinner />\r\n    </div>\r\n)\r\n\r\ninterface IAdminContent {\r\n    token: string\r\n}\r\n\r\nconst AdminContent: React.FunctionComponent<IAdminContent> = ({ token }): JSX.Element => {\r\n    const [items, setItems] = React.useState<IPortfolioItem[]>()\r\n    const [loading, setLoading] = React.useState<boolean>(true)\r\n    \r\n    React.useEffect(() => {\r\n        const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items.json'\r\n        const idToken: string = localStorage.getItem('idToken')!\r\n        const tokenParam: string = `?auth=${idToken}`\r\n\r\n        fetch(baseURL + tokenParam, { method: 'get' }).then(response => response.json())\r\n            .then(data => {\r\n                const newItems: IPortfolioItem[] = []\r\n                Object.keys(data).forEach(item => {\r\n                    newItems.push(data[item])\r\n                })\r\n                setLoading(false)\r\n                setItems(newItems)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={css.AdminContentWrapper}>\r\n            { loading &&\r\n                <div className={css.Loading}>\r\n                    <CubeSpinner />\r\n                </div>\r\n            }\r\n            <PortfolioItems items={items} />\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IPortfolioItems {\r\n    items?: IPortfolioItem[]\r\n}\r\n\r\nconst PortfolioItems: React.FunctionComponent<IPortfolioItems> = ({ items }): JSX.Element => {\r\n    return (\r\n        <div className={css.ItemsContainer}>\r\n            { items && items.map((item: IPortfolioItem) => {\r\n                return (\r\n                    <div>\r\n                        item\r\n                    </div>\r\n                )\r\n            })}\r\n            <AddPortfolioItem />\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IForm {\r\n    [title: string]: any\r\n    description: any\r\n    languages: any\r\n    link: any\r\n    github: any\r\n    video_src: any\r\n    gif_src: any\r\n    desktop: any\r\n    mobile: any\r\n}\r\n\r\nconst initialForm: IForm = {\r\n    title: {\r\n        id: 'title',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'title',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    description: {\r\n        id: 'description',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'description',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    languages: {\r\n        id: 'languages',\r\n        elemType: 'select',\r\n        options: [...Object.keys(Languages)],\r\n        require: true,\r\n        multiple: true\r\n    },\r\n    link: {\r\n        id: 'link',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'link to app',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    github: {\r\n        id: 'github',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'github link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    video_src: {\r\n        id: 'video_src',\r\n        elemType: 'input',  \r\n        type: 'text',\r\n        placeholder: 'video link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    gif_src: {\r\n        id: 'gif_src',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'gif link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    desktop: {\r\n        id: 'desktop',\r\n        elemType: 'select',\r\n        options : ['Yes', 'No'],\r\n        require: true,\r\n        value: 'Yes',\r\n        multiple: false\r\n    },\r\n    mobile: {   \r\n        id: 'mobile',\r\n        elemType: 'select',\r\n        options : ['Yes', 'No'],\r\n        require: true,\r\n        value: 'Yes',\r\n        multiple: false\r\n    }\r\n}\r\n\r\nconst AddPortfolioItem: React.FunctionComponent = (): JSX.Element => {\r\n    const [showForm, setShowForm] = React.useState<boolean>(false)\r\n    const [sending, setSending] = React.useState<boolean>(false)\r\n\r\n    const addItemToDatabase = (item: IPortfolioItem) => {\r\n        setSending(true)\r\n        const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items/'\r\n        const title: string = item.title + \".json\"\r\n        const idToken: string = localStorage.getItem('idToken')!\r\n        const tokenParam: string = `?auth=${idToken}`\r\n\r\n        fetch(baseURL + title + tokenParam, { method: 'put', body: JSON.stringify(item) }).then(response => response.json()\r\n            .then(data => {\r\n                console.log(data)\r\n                setSending(false)\r\n                setShowForm(false)\r\n            }))\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        setShowForm(true)\r\n    }\r\n\r\n    return (\r\n        <div className={css.AddItemContainer}>\r\n            <span className={css.AddItemButton} onClick={clickHandler}>add item <FontAwesomeIcon icon={icons.faPlus} className={css.AddItemIcon} /></span>\r\n            <NewItemForm show={showForm} close={() => setShowForm(false)} add={addItemToDatabase} sending={sending}/>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface INewItemForm {\r\n    show: boolean\r\n    sending: boolean\r\n    close: () => void\r\n    add: (item: IPortfolioItem) => void\r\n}\r\n\r\nconst NewItemForm: React.FunctionComponent<INewItemForm> = ({ show, close, add, sending }): JSX.Element => {\r\n    const [form, setForm] = React.useState<IForm>(initialForm)\r\n    const [formHeight, setFormHeight] = React.useState<number>()\r\n    const formRef: React.RefObject<HTMLFormElement> = React.useRef(null)\r\n\r\n    React.useEffect(() => {\r\n        if (formRef && formRef.current) {\r\n            setFormHeight(formRef.current.getBoundingClientRect().height)\r\n        }\r\n    }, [formRef])\r\n\r\n    const changeHandler = (id: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedForm: IForm = {\r\n            ...form,\r\n            [id]: {\r\n                ...form[id],\r\n                value: event.target.value\r\n            }\r\n        }\r\n        setForm(updatedForm)\r\n    }\r\n\r\n    const addHandler = () => {\r\n        const newItem: IPortfolioItem = {\r\n            title: form.title.value,\r\n            language: [Languages.React, Languages.TypeScript],\r\n            description: form.description.value,\r\n            link: form.link.value,\r\n            githubLink: form.github.value,\r\n            video_src: form.video_src.value,\r\n            gif_src: form.gif_src.value,\r\n            desktop: form.desktop.value,\r\n            mobile: form.mobile.value\r\n        }\r\n\r\n        add(newItem)\r\n    }\r\n    \r\n    const itemFormClasses = [\r\n        css.ItemForm,\r\n        show && css.show\r\n    ].join(' ')\r\n\r\n    return (\r\n        <form className={itemFormClasses} ref={formRef}>\r\n            { sending && \r\n                <div className={css.Loading}>\r\n                    <CubeSpinner />\r\n                </div>\r\n            }\r\n            <FontAwesomeIcon className={css.FormCloseButton} icon={icons.faTimes} onClick={close} />\r\n            { Object.keys(form).map((element: string) => {\r\n                return (\r\n                   <FormInput key={element} item={form[element]} change={changeHandler}  />\r\n                )\r\n            })}\r\n            <div className={css.FormAddButton} onClick={addHandler}>\r\n                <p>add</p>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\ninterface IFormInput {\r\n    item: any\r\n    change: (id: string, e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst FormInput: React.FunctionComponent<IFormInput> = React.memo( ({ item, change }): JSX.Element => {\r\n    let content = undefined\r\n\r\n    switch (item.elemType) {\r\n        case 'input':\r\n            content = (\r\n                <input value={item.value} \r\n                    placeholder={item.placeholder} \r\n                    onChange={(e) => change(item.id, e)}\r\n                    className={css.FormInput} />\r\n            )\r\n            break;\r\n            \r\n        case 'select':\r\n            content = (\r\n                <select className={css.FormSelect} id={item.id} multiple={item.multiple}>\r\n                    {item.options.map((option: string) => {\r\n                        return (\r\n                            <option key={item.id + option} value={option} className={css.SelectOption}>{option}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n            )\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={css.FormInputContainer}>\r\n            <p>{item.id}</p>\r\n            { content }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Admin\r\n"]},"metadata":{},"sourceType":"module"}