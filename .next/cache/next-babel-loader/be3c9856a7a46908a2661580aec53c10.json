{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\n\nvar css = require('./index.module.css');\n\nvar AdminPage = function AdminPage() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isSignedIn = _React$useState2[0],\n      setIsSignedIn = _React$useState2[1];\n\n  var signInHandler = function signInHandler(email, password) {};\n\n  return __jsx(\"div\", {\n    className: css.Main\n  }, !isSignedIn && __jsx(AuthForm, {\n    signIn: signInHandler\n  }));\n};\n\nvar initialAuthFormState = {\n  email: {\n    id: 'email',\n    inputType: 'email',\n    placeholder: 'email',\n    require: true,\n    value: '',\n    className: css.EmailInput,\n    icon: {\n      focus: icons.faEnvelopeOpen,\n      unfocus: icons.faEnvelope\n    }\n  },\n  password: {\n    id: 'password',\n    inputType: 'password',\n    placeholder: 'password',\n    require: true,\n    value: '',\n    className: css.PasswordInput,\n    icon: {\n      focus: icons.faUnlock,\n      unfocus: icons.faLock\n    }\n  }\n};\n\nvar AuthForm = function AuthForm(_ref) {\n  var signIn = _ref.signIn;\n\n  var _React$useState3 = React.useState(initialAuthFormState),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      formState = _React$useState4[0],\n      setFormState = _React$useState4[1];\n\n  var changeHandler = function changeHandler(elemKey, event) {\n    var updatedFormState = _objectSpread({}, formState, _defineProperty({}, elemKey, _objectSpread({}, formState[elemKey], {\n      value: event.target.value\n    })));\n\n    setFormState(updatedFormState);\n  };\n\n  var signInHandler = function signInHandler() {\n    signIn(formState.email.value, formState.password.value);\n  };\n\n  return __jsx(\"div\", {\n    className: css.AuthFormContainer\n  }, __jsx(\"h2\", {\n    className: css.FormTitle\n  }, \"Admin Auth\"), __jsx(\"form\", {\n    className: css.AuthForm\n  }, _Object$keys(formState).map(function (elementKey) {\n    return __jsx(InputComponent, _extends({\n      key: elementKey\n    }, formState[elementKey], {\n      changed: changeHandler\n    }));\n  })), __jsx(\"div\", {\n    className: css.SubmitButton,\n    onClick: signInHandler\n  }, __jsx(\"p\", null, \"Sign In\"), __jsx(FontAwesomeIcon, {\n    icon: icons.faSignInAlt\n  })));\n};\n\nvar InputComponent = function InputComponent(props) {\n  var _props$icon;\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isFocused = _React$useState6[0],\n      setIsFocused = _React$useState6[1];\n\n  var iconClasses = [css.InputIcon, isFocused && css.focus].join(' ');\n  return __jsx(\"div\", {\n    className: css.InputContainer\n  }, props.icon && __jsx(\"div\", {\n    className: css.IconContainer\n  }, __jsx(FontAwesomeIcon, {\n    className: iconClasses,\n    icon: (_props$icon = props.icon) === null || _props$icon === void 0 ? void 0 : _props$icon.unfocus\n  })), __jsx(\"input\", {\n    className: props.className,\n    placeholder: props.placeholder,\n    value: props.value,\n    type: props.inputType,\n    onChange: function onChange(e) {\n      return props.changed(props.id, e);\n    },\n    onFocus: function onFocus() {\n      return setIsFocused(true);\n    },\n    onBlur: function onBlur() {\n      return setIsFocused(false);\n    }\n  }));\n};\n\nexport default AdminPage;","map":{"version":3,"sources":["C:/Users/Joonajo/code/portfolio/pages/admin/index.tsx"],"names":["React","FontAwesomeIcon","icons","css","require","AdminPage","useState","isSignedIn","setIsSignedIn","signInHandler","email","password","Main","initialAuthFormState","id","inputType","placeholder","value","className","EmailInput","icon","focus","faEnvelopeOpen","unfocus","faEnvelope","PasswordInput","faUnlock","faLock","AuthForm","signIn","formState","setFormState","changeHandler","elemKey","event","updatedFormState","target","AuthFormContainer","FormTitle","map","elementKey","SubmitButton","faSignInAlt","InputComponent","props","isFocused","setIsFocused","iconClasses","InputIcon","join","InputContainer","IconContainer","e","changed"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\nimport { NextPage } from 'next'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../icons/icons'\r\n\r\nconst css = require('./index.module.css')\r\n\r\nconst AdminPage: NextPage = (): JSX.Element => {\r\n    const [isSignedIn, setIsSignedIn] = React.useState<boolean>(false)\r\n\r\n    const signInHandler = (email: string, password: string) =>  {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main}>\r\n            { !isSignedIn && <AuthForm signIn={signInHandler} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IFormElement {\r\n    id: string\r\n    inputType: string\r\n    value: string\r\n    placeholder?: string\r\n    require?: boolean\r\n    className?: string\r\n    icon? : { focus?: any, unfocus?: any }\r\n}\r\n\r\ninterface IFormState {\r\n    [email: string]: IFormElement\r\n    password: IFormElement\r\n}\r\n\r\nconst initialAuthFormState: IFormState = {\r\n    email: {\r\n        id: 'email',\r\n        inputType: 'email',\r\n        placeholder: 'email',\r\n        require: true,\r\n        value: '',\r\n        className: css.EmailInput,\r\n        icon: { focus: icons.faEnvelopeOpen, unfocus: icons.faEnvelope }\r\n    },\r\n    password: {\r\n        id: 'password',\r\n        inputType: 'password',\r\n        placeholder: 'password',\r\n        require: true,\r\n        value: '',\r\n        className: css.PasswordInput,\r\n        icon: { focus: icons.faUnlock, unfocus: icons.faLock }\r\n    },\r\n}\r\n\r\ninterface IAuthForm {\r\n    signIn: (email: string, password: string) => void\r\n}\r\n\r\nconst AuthForm: React.FunctionComponent<IAuthForm> = ({ signIn }): JSX.Element => {\r\n    const [formState, setFormState] = React.useState<IFormState>(initialAuthFormState)\r\n\r\n    const changeHandler = (elemKey: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const updatedFormState: IFormState = {\r\n            ...formState,\r\n            [elemKey]: {\r\n                ...formState[elemKey],\r\n                value: event.target.value\r\n            }\r\n        }\r\n        setFormState(updatedFormState)\r\n    }\r\n\r\n    const signInHandler = () => {\r\n        signIn(formState.email.value, formState.password.value)\r\n    }\r\n\r\n    return (\r\n        <div className={css.AuthFormContainer}>\r\n            <h2 className={css.FormTitle}>Admin Auth</h2>\r\n            <form className={css.AuthForm}>\r\n                { Object.keys(formState).map((elementKey: string) => {\r\n                    return (\r\n                        <InputComponent key={elementKey} {...formState[elementKey]} changed={changeHandler} />\r\n                    )\r\n                })}\r\n            </form>\r\n            <div className={css.SubmitButton} onClick={signInHandler}>\r\n                <p>Sign In</p>\r\n                <FontAwesomeIcon icon={icons.faSignInAlt} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IInputComponent extends IFormElement {\r\n    changed: (elemKey: string, event: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst InputComponent: React.FunctionComponent<IInputComponent> = (props): JSX.Element => {\r\n    const [isFocused, setIsFocused] = React.useState<boolean>(false)\r\n\r\n    const iconClasses = [\r\n        css.InputIcon,\r\n        isFocused && css.focus\r\n    ].join(' ')\r\n\r\n    return (\r\n        <div className={css.InputContainer}>\r\n            { props.icon &&  \r\n                <div className={css.IconContainer}>\r\n                    <FontAwesomeIcon className={iconClasses} icon={props.icon?.unfocus} />\r\n                </div>\r\n            }\r\n            <input className={props.className} \r\n                placeholder={props.placeholder}\r\n                value={props.value} \r\n                type={props.inputType}\r\n                onChange={(e) => props.changed(props.id, e)}\r\n                onFocus={() => setIsFocused(true)}\r\n                onBlur={() => setIsFocused(false)} /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage"]},"metadata":{},"sourceType":"module"}