{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nexport var Languages = {\n  React: 'React',\n  TypeScript: 'TypeScript',\n  JavaScript: 'JavaScript',\n  Cpp: 'C++',\n  NextJS: 'NextJS'\n};\nexport var TPortfolioActionTypes;\n\n(function (TPortfolioActionTypes) {\n  TPortfolioActionTypes[\"SET_ITEMS\"] = \"SET_ITEMS\";\n  TPortfolioActionTypes[\"EDIT_ITEM\"] = \"EDIT_ITEM\";\n  TPortfolioActionTypes[\"DELETE_ITEM\"] = \"DELETE_ITEM\";\n})(TPortfolioActionTypes || (TPortfolioActionTypes = {}));\n\nexport var initialPortfolioState = {\n  items: []\n};\n\nvar setItems = function setItems(state, action) {\n  if (action.type !== TPortfolioActionTypes.SET_ITEMS) return _objectSpread({}, state);\n  console.log(action.payload);\n  return _objectSpread({}, state, {\n    items: action.payload\n  });\n};\n\nexport var portfolioReducer = function portfolioReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialPortfolioState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TPortfolioActionTypes.SET_ITEMS:\n      return _objectSpread({}, state);\n\n    case TPortfolioActionTypes.DELETE_ITEM:\n      return _objectSpread({}, state);\n\n    case TPortfolioActionTypes.EDIT_ITEM:\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\nexport var PortflioContext = React.createContext({\n  state: initialPortfolioState\n});\nexport var PortfolioProvider = function PortfolioProvider(_ref) {\n  var children = _ref.children;\n\n  var _React$useReducer = React.useReducer(portfolioReducer, initialPortfolioState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  return __jsx(PortflioContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/context/portfolioContext.tsx"],"names":["React","Languages","TypeScript","JavaScript","Cpp","NextJS","TPortfolioActionTypes","initialPortfolioState","items","setItems","state","action","type","SET_ITEMS","console","log","payload","portfolioReducer","DELETE_ITEM","EDIT_ITEM","PortflioContext","createContext","PortfolioProvider","children","useReducer","dispatch"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,OAAO,IAAMC,SAAS,GAAG;AACrBD,EAAAA,KAAK,EAAE,OADc;AAErBE,EAAAA,UAAU,EAAE,YAFS;AAGrBC,EAAAA,UAAU,EAAE,YAHS;AAIrBC,EAAAA,GAAG,EAAE,KAJgB;AAKrBC,EAAAA,MAAM,EAAE;AALa,CAAlB;AAQP,WAAYC,qBAAZ;;WAAYA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;GAAAA,qB,KAAAA,qB;;AAWZ,OAAO,IAAMC,qBAAsC,GAAG;AAClDC,EAAAA,KAAK,EAAE;AAD2C,CAA/C;;AAIP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAyBC,MAAzB,EAAwE;AACrF,MAAIA,MAAM,CAACC,IAAP,KAAgBN,qBAAqB,CAACO,SAA1C,EAAqD,yBAAYH,KAAZ;AAErDI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,OAAnB;AAEA,2BACON,KADP;AAEIF,IAAAA,KAAK,EAAEG,MAAM,CAACK;AAFlB;AAIH,CATD;;AAWA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAgG;AAAA,MAA/FP,KAA+F,uEAAtEH,qBAAsE;AAAA,MAA/CI,MAA+C;;AAC5H,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,qBAAqB,CAACO,SAA3B;AACI,+BAAYH,KAAZ;;AAEJ,SAAKJ,qBAAqB,CAACY,WAA3B;AACI,+BAAYR,KAAZ;;AAEJ,SAAKJ,qBAAqB,CAACa,SAA3B;AACI,+BAAYT,KAAZ;;AAEJ;AACI,+BAAYA,KAAZ;AAXR;AAaH,CAdM;AAqBP,OAAO,IAAMU,eAAe,GAAGpB,KAAK,CAACqB,aAAN,CAAuC;AAAEX,EAAAA,KAAK,EAAEH;AAAT,CAAvC,CAAxB;AAMP,OAAO,IAAMe,iBAA8D,GAAG,SAAjEA,iBAAiE,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,0BACnEvB,KAAK,CAACwB,UAAN,CAAiBP,gBAAjB,EAAmCV,qBAAnC,CADmE;AAAA;AAAA,MACtFG,KADsF;AAAA,MAC/Ee,QAD+E;;AAG5F,SACI,MAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAACf,MAAAA,KAAK,EAALA,KAAD;AAAQe,MAAAA,QAAQ,EAARA;AAAR;AAAjC,KACKF,QADL,CADJ;AAKH,CARM","sourcesContent":["import React from 'react'\r\nimport { IPortfolioItem } from '../interfaces/interfaces'\r\nimport { TDispatch } from './authContext'\r\n\r\nexport type TPortfolioState = {\r\n    items: IPortfolioItem[]\r\n}\r\n\r\nexport const Languages = {\r\n    React: 'React',\r\n    TypeScript: 'TypeScript',\r\n    JavaScript: 'JavaScript',\r\n    Cpp: 'C++',\r\n    NextJS: 'NextJS',\r\n}\r\n\r\nexport enum TPortfolioActionTypes {\r\n    SET_ITEMS = \"SET_ITEMS\",\r\n    EDIT_ITEM = \"EDIT_ITEM\",\r\n    DELETE_ITEM = \"DELETE_ITEM\"\r\n}\r\n\r\nexport type TPortfolioActions = \r\n| ({ type: TPortfolioActionTypes.SET_ITEMS, payload: IPortfolioItem[] })\r\n| ({ type: TPortfolioActionTypes.DELETE_ITEM, payload: string })\r\n| ({ type: TPortfolioActionTypes.EDIT_ITEM, payload: string })\r\n\r\nexport const initialPortfolioState: TPortfolioState = {\r\n    items: []\r\n}\r\n\r\nconst setItems = (state: TPortfolioState, action: TPortfolioActions): TPortfolioState => {\r\n    if (action.type !== TPortfolioActionTypes.SET_ITEMS) return { ...state }\r\n\r\n    console.log(action.payload)\r\n\r\n    return {\r\n        ...state,\r\n        items: action.payload\r\n    }\r\n}\r\n\r\nexport const portfolioReducer = (state: TPortfolioState = initialPortfolioState, action: TPortfolioActions): TPortfolioState => {\r\n    switch (action.type) {\r\n        case TPortfolioActionTypes.SET_ITEMS:\r\n            return { ...state }\r\n\r\n        case TPortfolioActionTypes.DELETE_ITEM:\r\n            return { ...state }\r\n\r\n        case TPortfolioActionTypes.EDIT_ITEM:\r\n            return { ...state }\r\n    \r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport interface IPortfolioContext {\r\n    state: TPortfolioState,\r\n    dispatch?: TDispatch\r\n}\r\n\r\nexport const PortflioContext = React.createContext<IPortfolioContext>({ state: initialPortfolioState })\r\n\r\ninterface IPortfolioProvider {\r\n    children: any\r\n}\r\n\r\nexport const PortfolioProvider: React.FunctionComponent<IPortfolioProvider> = ({ children }) => {\r\n    const[state, dispatch] = React.useReducer(portfolioReducer, initialPortfolioState)\r\n\r\n    return (\r\n        <PortflioContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </PortflioContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}