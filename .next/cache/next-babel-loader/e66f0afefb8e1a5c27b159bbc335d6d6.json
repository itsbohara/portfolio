{"ast":null,"code":"import { Languages } from \"../context/portfolioContext\";\nexport var items = {\n  ClassicGames: {\n    title: 'Classic Games',\n    language: [Languages.React, Languages.TypeScript, Languages.NextJS],\n    link: 'https://classics-next.joonajo.now.sh',\n    githubLink: 'https://github.com/joonajo/classics-next',\n    description: \"Built with React + TypeScript + NextJS. A web app with all-time classic games Minesweeper and Snake (Tetris WIP). Own leaderboard for each game and each difficulty, stored in a Firebase database.\",\n    video_src: '/videos/classics.mp4',\n    gif_src: '/gifs/classics.gif',\n    desktop: true,\n    mobile: false\n  },\n  NasaHub: {\n    title: 'Nasa Portal',\n    language: [Languages.React, Languages.TypeScript, Languages.NextJS],\n    link: 'https://nasa-portal.now.sh',\n    githubLink: 'https://github.com/joonajo/nasa-portal',\n    description: 'Built with React + TypeScript + Redux + NextJS. Utilizes open NASA APIs. Check out the Astronomy Picture of the Day (APOD), latest Mars rover images as well as Earth from the space with the EPIC API. PWA & Lighthouse optimized.',\n    video_src: '/videos/nasahub.mp4',\n    gif_src: '/gifs/nasahub.gif',\n    desktop: true,\n    mobile: true\n  },\n  WeatherApp: {\n    title: 'Weather App',\n    language: [Languages.React, Languages.TypeScript],\n    link: 'https://weatherr.web.app',\n    githubLink: 'https://github.com/joonajo/Weather-app',\n    description: 'Built with React + TypeScript + Redux. Utilizes three different APIs (OpenWeatherMap, TimezoneDB & Geonames) to seamlessly check the weather all over the world, with timezones adjusted accordingly.',\n    video_src: '/videos/weather.mp4',\n    gif_src: '/gifs/weatherapp.gif',\n    desktop: true,\n    mobile: true\n  },\n  BurgerBuilder: {\n    title: 'Burger Builder',\n    language: [Languages.React, Languages.JavaScript],\n    link: 'https://react-burgerapp-d2ef8.web.app',\n    githubLink: 'https://github.com/joonajo/Burger-Builder',\n    description: 'Built with ReactJS + Redux. Utilizes Firebase account authorization and realtime database. Build your own burger and order it!',\n    video_src: '/videos/burger.mp4',\n    gif_src: '/gifs/burgerbuilder.gif',\n    desktop: true,\n    mobile: true\n  },\n  TodoList: {\n    title: 'To-Do List',\n    language: [Languages.React, Languages.TypeScript],\n    link: 'https://todo-reactts.web.app',\n    githubLink: 'https://github.com/joonajo/Todo-ReactTS',\n    description: 'Built with React + TypeScript. Utilizes Firebase Cloud database (Firestore) and account authorization. Make a todo-list, check/remove items, and keep it saved in the database!',\n    video_src: '/videos/todo.mp4',\n    gif_src: '/gifs/todo.gif',\n    desktop: true,\n    mobile: true\n  },\n  CannonGame: {\n    title: 'Cannon Game',\n    language: [Languages.Cpp],\n    link: 'https://www.youtube.com/watch?v=6rbhqyCm97E',\n    githubLink: 'https://github.com/joonajo/CannonGame',\n    description: 'Built purely with C++ and the SFML graphics library. A simple Cannon Game against a basic AI.',\n    video_src: 'https://media.giphy.com/media/ftB8xRdaDJHzk2v6Ur/giphy.gif',\n    gif_src: '/gifs/cannongame.gif',\n    desktop: true,\n    mobile: false\n  }\n}; // makes it easy to switch up the order if needed\n\nexport var portfolioItems = [items.ClassicGames, items.NasaHub, items.WeatherApp, items.TodoList, items.BurgerBuilder, items.CannonGame];","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/portfolio/portfolio.ts"],"names":["Languages","items","ClassicGames","title","language","React","TypeScript","NextJS","link","githubLink","description","video_src","gif_src","desktop","mobile","NasaHub","WeatherApp","BurgerBuilder","JavaScript","TodoList","CannonGame","Cpp","portfolioItems"],"mappings":"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","sourcesContent":["import { IPortfolioItem } from \"../interfaces/interfaces\"\nimport { Languages } from \"../context/portfolioContext\"\n  \nexport const items = {\n    ClassicGames: {\n        title: 'Classic Games',\n        language: [Languages.React, Languages.TypeScript, Languages.NextJS],\n        link: 'https://classics-next.joonajo.now.sh',\n        githubLink: 'https://github.com/joonajo/classics-next',\n        description: \"Built with React + TypeScript + NextJS. A web app with all-time classic games Minesweeper and Snake (Tetris WIP). Own leaderboard for each game and each difficulty, stored in a Firebase database.\",\n        video_src: '/videos/classics.mp4',\n        gif_src: '/gifs/classics.gif',\n        desktop: true,\n        mobile: false,\n    },\n    NasaHub: { \n        title: 'Nasa Portal',\n        language: [Languages.React, Languages.TypeScript, Languages.NextJS],\n        link: 'https://nasa-portal.now.sh',\n        githubLink: 'https://github.com/joonajo/nasa-portal',\n        description: 'Built with React + TypeScript + Redux + NextJS. Utilizes open NASA APIs. Check out the Astronomy Picture of the Day (APOD), latest Mars rover images as well as Earth from the space with the EPIC API. PWA & Lighthouse optimized.',\n        video_src: '/videos/nasahub.mp4',\n        gif_src: '/gifs/nasahub.gif',\n        desktop: true,\n        mobile: true,\n    },\n    WeatherApp: {\n        title: 'Weather App',\n        language: [Languages.React, Languages.TypeScript],\n        link: 'https://weatherr.web.app',\n        githubLink: 'https://github.com/joonajo/Weather-app',\n        description: 'Built with React + TypeScript + Redux. Utilizes three different APIs (OpenWeatherMap, TimezoneDB & Geonames) to seamlessly check the weather all over the world, with timezones adjusted accordingly.',\n        video_src: '/videos/weather.mp4',\n        gif_src: '/gifs/weatherapp.gif',\n        desktop: true,\n        mobile: true,\n    },\n    BurgerBuilder: {\n        title: 'Burger Builder',\n        language: [Languages.React, Languages.JavaScript],\n        link: 'https://react-burgerapp-d2ef8.web.app',\n        githubLink: 'https://github.com/joonajo/Burger-Builder',\n        description: 'Built with ReactJS + Redux. Utilizes Firebase account authorization and realtime database. Build your own burger and order it!',\n        video_src: '/videos/burger.mp4',\n        gif_src: '/gifs/burgerbuilder.gif',\n        desktop: true,\n        mobile: true,\n    },\n    TodoList: {\n        title: 'To-Do List',\n        language: [Languages.React, Languages.TypeScript],\n        link: 'https://todo-reactts.web.app',\n        githubLink: 'https://github.com/joonajo/Todo-ReactTS',\n        description: 'Built with React + TypeScript. Utilizes Firebase Cloud database (Firestore) and account authorization. Make a todo-list, check/remove items, and keep it saved in the database!',\n        video_src: '/videos/todo.mp4',\n        gif_src: '/gifs/todo.gif',\n        desktop: true,\n        mobile: true,\n    },\n    CannonGame: {\n        title: 'Cannon Game',\n        language: [Languages.Cpp],\n        link: 'https://www.youtube.com/watch?v=6rbhqyCm97E',\n        githubLink: 'https://github.com/joonajo/CannonGame',\n        description: 'Built purely with C++ and the SFML graphics library. A simple Cannon Game against a basic AI.',\n        video_src: 'https://media.giphy.com/media/ftB8xRdaDJHzk2v6Ur/giphy.gif',\n        gif_src: '/gifs/cannongame.gif',\n        desktop: true,\n        mobile: false,\n    }\n}\n  \n// makes it easy to switch up the order if needed\nexport const portfolioItems: IPortfolioItem[] = [\n    items.ClassicGames,\n    items.NasaHub,\n    items.WeatherApp,\n    items.TodoList,\n    items.BurgerBuilder,\n    items.CannonGame\n]"]},"metadata":{},"sourceType":"module"}