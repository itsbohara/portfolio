{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons';\nimport { ToolbarContext } from '../../context/toolbarContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\n\nvar css = require('./Cover.css');\n\nvar Cover = React.memo(function () {\n  var toolbarContext = React.useContext(ToolbarContext);\n  var coverRef = React.useRef(null);\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      height = _React$useState2[0],\n      setHeight = _React$useState2[1]; // enable smoothscroll package\n\n\n  smoothscroll.polyfill();\n  React.useEffect(function () {\n    setHeight(window.innerHeight);\n    window.addEventListener('scroll', scrollHandler, true);\n    return function () {\n      return window.removeEventListener('scroll', scrollHandler, true);\n    };\n  }, []);\n\n  var scrollHandler = function scrollHandler() {};\n\n  var scrollToPortfolio = React.useCallback(function () {\n    if (coverRef && coverRef.current) {\n      var posToScrollTo = coverRef.current.clientHeight;\n      window.scroll({\n        top: posToScrollTo,\n        left: 0,\n        behavior: \"smooth\"\n      });\n    }\n  }, [coverRef]);\n\n  var _React$useState3 = React.useState(undefined),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      arrowIn = _React$useState4[0],\n      setArrowIn = _React$useState4[1];\n\n  var arrowTextClasses = [css.ArrowText, arrowIn ? css[\"in\"] : arrowIn === false ? css.out : null].join(' ');\n\n  var transitionHandler = function transitionHandler() {\n    if (arrowIn === false) {\n      setArrowIn(undefined);\n    }\n  };\n\n  var hoverHandler = function hoverHandler() {\n    setArrowIn(true); // if (arrowIn === undefined) {\n    //     setArrowIn(true)\n    // }\n  };\n\n  var mouseOutHandler = function mouseOutHandler() {\n    setArrowIn(false); // if (arrowIn) {\n    //     setArrowIn(false)\n    // }\n  };\n\n  return __jsx(\"div\", {\n    className: css.Main,\n    ref: coverRef,\n    style: {\n      height: \"\".concat(height, \"px\")\n    }\n  }, __jsx(\"div\", {\n    className: css.BackgroundContainer\n  }, __jsx(\"img\", {\n    src: \"/static/images/palm.jpg\",\n    alt: \"cover-bg-palm\",\n    className: css.BackgroundImage,\n    style: {\n      minHeight: \"\".concat(height, \"px\")\n    }\n  }), __jsx(\"div\", {\n    className: css.BackgroundMask\n  })), __jsx(\"div\", {\n    className: css.MediaIcons\n  }, __jsx(MediaIcons, {\n    vertical: true\n  })), __jsx(\"div\", {\n    className: css.TitleContainer\n  }, __jsx(\"h1\", {\n    className: css.FirstName\n  }, \"Joona\"), __jsx(\"h1\", {\n    className: css.Surname\n  }, \"Joenpolvi\"), __jsx(\"h3\", {\n    className: css.Description\n  }, \"Front-End Developer\")), __jsx(\"div\", {\n    className: css.ArrowContainer\n  }, __jsx(\"div\", {\n    className: css.ArrowIcon,\n    onClick: scrollToPortfolio,\n    onMouseOver: hoverHandler,\n    onMouseOut: mouseOutHandler\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faChevronDown,\n    size: \"lg\"\n  })), __jsx(\"p\", {\n    className: arrowTextClasses,\n    onTransitionEnd: transitionHandler\n  }, \"to portfolio\")));\n});\nexport default Cover;","map":{"version":3,"sources":["/home/joojo/code/portfolio/components/Cover/Cover.tsx"],"names":["React","smoothscroll","MediaIcons","ToolbarContext","FontAwesomeIcon","icons","css","require","Cover","memo","toolbarContext","useContext","coverRef","useRef","useState","undefined","height","setHeight","polyfill","useEffect","window","innerHeight","addEventListener","scrollHandler","removeEventListener","scrollToPortfolio","useCallback","current","posToScrollTo","clientHeight","scroll","top","left","behavior","arrowIn","setArrowIn","arrowTextClasses","ArrowText","out","join","transitionHandler","hoverHandler","mouseOutHandler","Main","BackgroundContainer","BackgroundImage","minHeight","BackgroundMask","TitleContainer","FirstName","Surname","Description","ArrowContainer","ArrowIcon","faChevronDown"],"mappings":"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","sourcesContent":["import React from 'react'\nimport smoothscroll from 'smoothscroll-polyfill'\n\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\nimport { IToolbar, ToolbarContext } from '../../context/toolbarContext'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { icons } from '../../icons/icons'\n\nconst css = require('./Cover.css')\n\nconst Cover = React.memo((): JSX.Element => {\n    const toolbarContext: IToolbar = React.useContext(ToolbarContext)\n    const coverRef = React.useRef<HTMLDivElement>(null)\n    const[height, setHeight] = React.useState<number | undefined>(undefined)\n\n    // enable smoothscroll package\n    smoothscroll.polyfill()\n    \n    React.useEffect(() => {\n        setHeight(window.innerHeight)\n\n        window.addEventListener('scroll', scrollHandler, true)\n\n        return () => window.removeEventListener('scroll', scrollHandler, true)\n    }, [])\n\n    const scrollHandler = () => {\n\n    }\n\n    const scrollToPortfolio = React.useCallback(() => {\n        if (coverRef && coverRef.current) {\n            const posToScrollTo: number = coverRef.current.clientHeight\n    \n            window.scroll({\n                top: posToScrollTo,\n                left: 0,\n                behavior: \"smooth\",\n            })\n        }\n    }, [coverRef])\n\n    const[arrowIn, setArrowIn] = React.useState<boolean | undefined>(undefined)\n\n    const arrowTextClasses = [\n        css.ArrowText,\n        arrowIn ? css.in : arrowIn === false ? css.out : null\n    ].join(' ')\n\n    const transitionHandler = () => {\n        if (arrowIn === false) {\n            setArrowIn(undefined)\n        }\n    }\n\n    const hoverHandler = () => {\n        setArrowIn(true)\n        // if (arrowIn === undefined) {\n        //     setArrowIn(true)\n        // }\n    }\n\n    const mouseOutHandler = () => {\n        setArrowIn(false)\n        // if (arrowIn) {\n        //     setArrowIn(false)\n        // }\n    }\n\n    return (\n        <div className={css.Main} ref={coverRef} style={{height: `${height}px`}}>\n            <div className={css.BackgroundContainer}>\n                <img src=\"/static/images/palm.jpg\" alt=\"cover-bg-palm\" className={css.BackgroundImage} style={{minHeight: `${height}px`}} />\n                <div className={css.BackgroundMask}></div>\n            </div>\n            <div className={css.MediaIcons}>\n                <MediaIcons vertical />\n            </div>\n            <div className={css.TitleContainer}>\n                <h1 className={css.FirstName}>Joona</h1>\n                <h1 className={css.Surname}>Joenpolvi</h1>\n                <h3 className={css.Description}>Front-End Developer</h3>\n            </div>\n            <div className={css.ArrowContainer} >\n                <div className={css.ArrowIcon}\n                    onClick={scrollToPortfolio}\n                    onMouseOver={hoverHandler}\n                    onMouseOut={mouseOutHandler}> \n                    <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\n                </div>\n                <p className={arrowTextClasses} onTransitionEnd={transitionHandler}>to portfolio</p>\n            </div>\n        </div>\n    )\n})\n\nexport default Cover"]},"metadata":{},"sourceType":"module"}