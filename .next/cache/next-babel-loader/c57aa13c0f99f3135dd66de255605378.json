{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\n\nvar css = require('./index.module.css');\n\nvar AdminPage = function AdminPage() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isSignedIn = _React$useState2[0],\n      setIsSignedIn = _React$useState2[1];\n\n  var signInHandler = function signInHandler(email, password) {};\n\n  return __jsx(\"div\", {\n    className: css.Main\n  }, !isSignedIn && __jsx(AuthForm, {\n    signIn: signInHandler\n  }));\n};\n\nvar initialAuthFormState = {\n  email: {\n    elementType: 'input',\n    inputType: 'email',\n    placeholder: 'email',\n    require: true,\n    value: '',\n    className: css.EmailInput\n  },\n  password: {\n    elementType: 'input',\n    inputType: 'password',\n    placeholder: 'password',\n    require: true,\n    value: '',\n    className: css.PasswordInput\n  },\n  submit: {\n    elementType: 'input',\n    inputType: 'submit',\n    value: 'Sign In',\n    className: css.SubmitButton\n  }\n};\n\nvar AuthForm = function AuthForm(_ref) {\n  var signIn = _ref.signIn;\n\n  var _React$useState3 = React.useState(initialAuthFormState),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      formState = _React$useState4[0],\n      setFormState = _React$useState4[1];\n\n  var changeHandler = function changeHandler(element, event) {};\n\n  return __jsx(\"div\", {\n    className: css.AuthFormContainer\n  }, __jsx(\"h2\", {\n    className: css.FormTitle\n  }, \"Sign In\"), __jsx(\"form\", {\n    className: css.AuthForm\n  }, _Object$keys(formState).map(function (elementKey) {\n    var element = formState[elementKey];\n    return __jsx(\"input\", element);\n  })));\n};\n\nexport default AdminPage;","map":{"version":3,"sources":["C:/Users/Joonajo/code/portfolio/pages/admin/index.tsx"],"names":["React","css","require","AdminPage","useState","isSignedIn","setIsSignedIn","signInHandler","email","password","Main","initialAuthFormState","elementType","inputType","placeholder","value","className","EmailInput","PasswordInput","submit","SubmitButton","AuthForm","signIn","formState","setFormState","changeHandler","element","event","AuthFormContainer","FormTitle","map","elementKey"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,IAAMC,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AAEA,IAAMC,SAAmB,GAAG,SAAtBA,SAAsB,GAAmB;AAAA,wBACPH,KAAK,CAACI,QAAN,CAAwB,KAAxB,CADO;AAAA;AAAA,MACpCC,UADoC;AAAA,MACxBC,aADwB;;AAG3C,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAgBC,QAAhB,EAAsC,CAE3D,CAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAER,GAAG,CAACS;AAApB,KACM,CAACL,UAAD,IAAe,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEE;AAAlB,IADrB,CADJ;AAKH,CAZD;;AAiCA,IAAMI,oBAAgC,GAAG;AACrCH,EAAAA,KAAK,EAAE;AACHI,IAAAA,WAAW,EAAE,OADV;AAEHC,IAAAA,SAAS,EAAE,OAFR;AAGHC,IAAAA,WAAW,EAAE,OAHV;AAIHZ,IAAAA,OAAO,EAAE,IAJN;AAKHa,IAAAA,KAAK,EAAE,EALJ;AAMHC,IAAAA,SAAS,EAAEf,GAAG,CAACgB;AANZ,GAD8B;AASrCR,EAAAA,QAAQ,EAAE;AACNG,IAAAA,WAAW,EAAE,OADP;AAENC,IAAAA,SAAS,EAAE,UAFL;AAGNC,IAAAA,WAAW,EAAE,UAHP;AAINZ,IAAAA,OAAO,EAAE,IAJH;AAKNa,IAAAA,KAAK,EAAE,EALD;AAMNC,IAAAA,SAAS,EAAEf,GAAG,CAACiB;AANT,GAT2B;AAiBrCC,EAAAA,MAAM,EAAE;AACJP,IAAAA,WAAW,EAAE,OADT;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJE,IAAAA,KAAK,EAAE,SAHH;AAIJC,IAAAA,SAAS,EAAEf,GAAG,CAACmB;AAJX;AAjB6B,CAAzC;;AA2BA,IAAMC,QAA4C,GAAG,SAA/CA,QAA+C,OAA6B;AAAA,MAA1BC,MAA0B,QAA1BA,MAA0B;;AAAA,yBAC5CtB,KAAK,CAACI,QAAN,CAA2BO,oBAA3B,CAD4C;AAAA;AAAA,MACvEY,SADuE;AAAA,MAC5DC,YAD4D;;AAG9E,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAkBC,KAAlB,EAAiE,CAEtF,CAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAE1B,GAAG,CAAC2B;AAApB,KACI;AAAI,IAAA,SAAS,EAAE3B,GAAG,CAAC4B;AAAnB,eADJ,EAEI;AAAM,IAAA,SAAS,EAAE5B,GAAG,CAACoB;AAArB,KACM,aAAYE,SAAZ,EAAuBO,GAAvB,CAA2B,UAACC,UAAD,EAAwB;AACjD,QAAML,OAAqB,GAAGH,SAAS,CAACQ,UAAD,CAAvC;AACA,WACI,eAAWL,OAAX,CADJ;AAGH,GALC,CADN,CAFJ,CADJ;AAaH,CApBD;;AAsBA,eAAevB,SAAf","sourcesContent":["import * as React from 'react'\r\nimport { NextPage } from 'next'\r\n\r\nconst css = require('./index.module.css')\r\n\r\nconst AdminPage: NextPage = (): JSX.Element => {\r\n    const [isSignedIn, setIsSignedIn] = React.useState<boolean>(false)\r\n\r\n    const signInHandler = (email: string, password: string) =>  {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={css.Main}>\r\n            { !isSignedIn && <AuthForm signIn={signInHandler} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface IAuthForm {\r\n    signIn: (email: string, password: string) => void\r\n}\r\n\r\ninterface IFormElement {\r\n    elementType: string\r\n    inputType: string\r\n    placeholder?: string\r\n    require?: boolean\r\n    value?: string\r\n    className?: string\r\n}\r\n\r\ninterface IFormState {\r\n    [email: string]: IFormElement\r\n    password: IFormElement\r\n    submit: IFormElement\r\n}\r\n\r\nconst initialAuthFormState: IFormState = {\r\n    email: {\r\n        elementType: 'input',\r\n        inputType: 'email',\r\n        placeholder: 'email',\r\n        require: true,\r\n        value: '',\r\n        className: css.EmailInput\r\n    },\r\n    password: {\r\n        elementType: 'input',\r\n        inputType: 'password',\r\n        placeholder: 'password',\r\n        require: true,\r\n        value: '',\r\n        className: css.PasswordInput\r\n    },\r\n    submit: {\r\n        elementType: 'input',\r\n        inputType: 'submit',\r\n        value: 'Sign In',\r\n        className: css.SubmitButton\r\n    },\r\n}\r\n   \r\n\r\n\r\nconst AuthForm: React.FunctionComponent<IAuthForm> = ({ signIn }): JSX.Element => {\r\n    const [formState, setFormState] = React.useState<IFormState>(initialAuthFormState)\r\n\r\n    const changeHandler = (element: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={css.AuthFormContainer}>\r\n            <h2 className={css.FormTitle}>Sign In</h2>\r\n            <form className={css.AuthForm}>\r\n                { Object.keys(formState).map((elementKey: string) => {\r\n                    const element: IFormElement = formState[elementKey]\r\n                    return (\r\n                        <input {...element} /> \r\n                    )\r\n                })}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPage"]},"metadata":{},"sourceType":"module"}