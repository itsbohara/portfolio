{"ast":null,"code":"var _jsxFileName = \"/home/joojo/code/portfolio/components/Item/Item.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nconst css = require('./Item.module.css');\n\nconst SHOW_TRESHOLD = 1100;\nexport default function Item(props) {\n  const [showItem, toggleShowItem] = React.useState(false);\n  const [showInfo, toggleShowInfo] = React.useState(false);\n  const itemRef = React.useRef(null);\n  const infoRef = React.useRef(null); // update the event listeners every time the showItem state is changed\n\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true);\n    return () => window.removeEventListener('scroll', checkIfInViewport, true);\n  }, [showItem]);\n\n  const checkIfInViewport = () => {\n    const bottom = itemRef.current.getBoundingClientRect().bottom;\n\n    if (bottom < SHOW_TRESHOLD) {\n      toggleShowItem(true);\n    } else {\n      toggleShowItem(false);\n    }\n  };\n\n  const expand = () => {\n    toggleShowInfo(!showInfo);\n  };\n\n  let itemClasses = [css.Item, showInfo ? css.open : null, showItem ? css.show : null].join(' ');\n  return __jsx(\"div\", {\n    className: itemClasses,\n    ref: itemRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(ItemTitle, {\n    title: props.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(ItemImage, {\n    gif_src: props.gif_src,\n    title: props.title,\n    link: props.link,\n    githubLink: props.githubLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}\n\nfunction ItemTitle(props) {\n  return __jsx(\"p\", {\n    className: css.Title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.title));\n}\n\nfunction ItemImage(props) {\n  return __jsx(\"div\", {\n    className: css.ImageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: css.Image,\n    src: props.gif_src,\n    alt: \"portfolio-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: css.ImageMask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: css.MaskTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, props.title), __jsx(\"div\", {\n    className: css.MaskLinks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(MaskLink, {\n    address: props.link,\n    text: \"Open\",\n    icon: \"fas fa-external-link-square-alt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(MaskLink, {\n    address: props.githubLink,\n    text: \"Github\",\n    icon: \"fab fa-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))));\n}\n\nconst MaskLink = props => {\n  return __jsx(\"a\", {\n    href: props.address,\n    className: css.MaskLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.MaskLinkText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, props.text)), __jsx(\"div\", {\n    className: css.MaskLinkIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: props.icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/home/joojo/code/portfolio/components/Item/Item.tsx"],"names":["React","css","require","SHOW_TRESHOLD","Item","props","showItem","toggleShowItem","useState","showInfo","toggleShowInfo","itemRef","useRef","infoRef","useEffect","window","addEventListener","checkIfInViewport","removeEventListener","bottom","current","getBoundingClientRect","expand","itemClasses","open","show","join","title","gif_src","link","githubLink","ItemTitle","Title","ItemImage","ImageContainer","Image","ImageMask","MaskTitle","MaskLinks","MaskLink","address","MaskLinkText","text","MaskLinkIcon","icon"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IPortfolioItem } from '../../interfaces/interfaces'\n\nconst css = require('./Item.module.css')\n\nconst SHOW_TRESHOLD = 1100\n\nexport default function Item(props: IPortfolioItem) {\n  const[showItem, toggleShowItem] = React.useState(false)\n  const[showInfo, toggleShowInfo] = React.useState(false)\n  const itemRef = React.useRef<HTMLDivElement>(null)\n  const infoRef = React.useRef<HTMLDivElement>(null)\n\n  // update the event listeners every time the showItem state is changed\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true)\n  \n    return () => window.removeEventListener('scroll', checkIfInViewport, true)  \n  }, [showItem])\n\n  const checkIfInViewport = () => {\n    const bottom = itemRef.current!.getBoundingClientRect().bottom\n    if (bottom < SHOW_TRESHOLD) {\n      toggleShowItem(true)\n    } else {\n      toggleShowItem(false)\n    }\n  }\n\n  const expand = () => {\n    toggleShowInfo(!showInfo)\n  }\n\n  let itemClasses = [\n    css.Item, \n    showInfo ? css.open : null,\n    showItem ? css.show : null\n  ].join(' ')\n  \n  return (\n    <div className={itemClasses} ref={itemRef} >\n      <ItemTitle title={props.title} />\n      <ItemImage gif_src={props.gif_src} \n        title={props.title} \n        link={props.link} \n        githubLink={props.githubLink} />\n    </div>\n  )\n}\n\ninterface ITitle {\n  title: string\n}\n\nfunction ItemTitle(props: ITitle) {\n  return (\n    <p className={css.Title}><span>{props.title}</span></p>\n  )\n}\n\ninterface IImage {\n  gif_src: string\n  title: string\n  link: string\n  githubLink: string\n}\n\nfunction ItemImage(props: IImage) {\n  return (\n    <div className={css.ImageContainer}>\n      <img className={css.Image} src={props.gif_src} alt='portfolio-img'/>\n      <div className={css.ImageMask}>\n        <h1 className={css.MaskTitle}>{props.title}</h1>\n        <div className={css.MaskLinks}>\n          <MaskLink address={props.link} text=\"Open\" icon=\"fas fa-external-link-square-alt\" />\n          <MaskLink address={props.githubLink} text=\"Github\" icon=\"fab fa-github\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface IMaskLink {\n  address: string\n  text: string\n  icon: string\n}\n\nconst MaskLink = (props: IMaskLink): JSX.Element => {\n  return (\n      <a href={props.address} className={css.MaskLink} target='_blank' rel=\"noopener noreferrer\">\n          <div className={css.MaskLinkText}>\n              <span>{props.text}</span>\n          </div>\n          <div className={css.MaskLinkIcon}>\n              <i className={props.icon}></i>\n          </div>\n      </a>\n  )\n}"]},"metadata":{},"sourceType":"module"}