{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner';\nimport Auth from '../../containers/Auth/Auth';\nimport Admin from '../../containers/Admin/Admin';\n\nvar css = require('./index.module.css');\n\nvar initialAuthState = {\n  signedIn: false\n};\n\nvar signIn = function signIn(state, action) {\n  return _objectSpread({}, state);\n};\n\nvar authReducer = function authReducer(state, action) {\n  switch (action.type) {\n    case 'signin':\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nvar AdminPage = function AdminPage() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      signedIn = _React$useState2[0],\n      setSignedIn = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      sending = _React$useState4[0],\n      setSending = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      screensize = _React$useState6[0],\n      setScreensize = _React$useState6[1];\n\n  React.useEffect(function () {\n    document.title = 'Portfolio // Admin';\n    setScreensize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n\n    if (localStorage.length !== 0) {\n      // check for auth info in local storage\n      // compare current time in milliseconds to expire time in storage\n      // if current time is LESS, use the auth info from storage to refresh\n      // else, clear local storage\n      var expireTime = localStorage.getItem('expireTime');\n\n      if (expireTime) {\n        if (new Date().getTime() < +expireTime) {\n          setSignedIn(true);\n          setSending(false);\n        } else {\n          localStorage.clear();\n          setSending(false);\n        }\n      }\n    } else {\n      setSending(false);\n    }\n  }, []);\n  return __jsx(\"div\", {\n    className: css.Main,\n    style: {\n      minHeight: \"\".concat(screensize === null || screensize === void 0 ? void 0 : screensize.height, \"px\"),\n      minWidth: \"\".concat(screensize === null || screensize === void 0 ? void 0 : screensize.width, \"px\")\n    }\n  }, !signedIn && __jsx(Auth, {\n    setSending: setSending,\n    setSignedIn: setSignedIn\n  }), signedIn && __jsx(Admin, null), sending && __jsx(Loading, null));\n};\n\nvar Loading = function Loading() {\n  return __jsx(\"div\", {\n    className: css.Loading\n  }, __jsx(CubeSpinner, null));\n};\n\nexport default AdminPage;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/pages/admin/index.tsx"],"names":["React","CubeSpinner","Auth","Admin","css","require","initialAuthState","signedIn","signIn","state","action","authReducer","type","AdminPage","useState","setSignedIn","sending","setSending","screensize","setScreensize","useEffect","document","title","width","window","innerWidth","height","innerHeight","localStorage","length","expireTime","getItem","Date","getTime","clear","Main","minHeight","minWidth","Loading"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,SAASC,WAAT,QAA4B,qCAA5B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AAcA,IAAMC,gBAA4B,GAAG;AACjCC,EAAAA,QAAQ,EAAE;AADuB,CAArC;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAoBC,MAApB,EAAoD;AAE/D,2BACOD,KADP;AAGH,CALD;;AAOA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACF,KAAD,EAAoBC,MAApB,EAAoD;AACpE,UAAQA,MAAM,CAACE,IAAf;AACI,SAAK,QAAL;AACI,+BAAYH,KAAZ;;AAEJ;AACI,+BAAYA,KAAZ;AALR;AAOH,CARD;;AAWA,IAAMI,SAAmB,GAAG,SAAtBA,SAAsB,GAAmB;AAAA,wBACXb,KAAK,CAACc,QAAN,CAAwB,KAAxB,CADW;AAAA;AAAA,MACpCP,QADoC;AAAA,MAC1BQ,WAD0B;;AAAA,yBAEbf,KAAK,CAACc,QAAN,CAAwB,IAAxB,CAFa;AAAA;AAAA,MAEpCE,OAFoC;AAAA,MAE3BC,UAF2B;;AAAA,yBAGPjB,KAAK,CAACc,QAAN,EAHO;AAAA;AAAA,MAGpCI,UAHoC;AAAA,MAGxBC,aAHwB;;AAK3CnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAM;AAClBC,IAAAA,QAAQ,CAACC,KAAT,GAAiB,oBAAjB;AAEAH,IAAAA,aAAa,CAAC;AACVI,MAAAA,KAAK,EAAEC,MAAM,CAACC,UADJ;AAEVC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAFL,KAAD,CAAb;;AAKA,QAAIC,YAAY,CAACC,MAAb,KAAwB,CAA5B,EAA+B;AAC3B;AACA;AACA;AACA;AACA,UAAMC,UAAU,GAAIF,YAAY,CAACG,OAAb,CAAqB,YAArB,CAApB;;AACA,UAAID,UAAJ,EAAgB;AACZ,YAAI,IAAIE,IAAJ,GAAWC,OAAX,KAAuB,CAACH,UAA5B,EAAwC;AACpCf,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH,SAHD,MAGO;AACHW,UAAAA,YAAY,CAACM,KAAb;AACAjB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;AACJ,KAfD,MAeO;AACHA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GA1BD,EA0BG,EA1BH;AA4BA,SACI;AAAK,IAAA,SAAS,EAAEb,GAAG,CAAC+B,IAApB;AAA0B,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,YAAKlB,UAAL,aAAKA,UAAL,uBAAKA,UAAU,CAAEQ,MAAjB,OAAV;AAAuCW,MAAAA,QAAQ,YAAKnB,UAAL,aAAKA,UAAL,uBAAKA,UAAU,CAAEK,KAAjB;AAA/C;AAAjC,KACM,CAAChB,QAAD,IAAa,MAAC,IAAD;AAAM,IAAA,UAAU,EAAEU,UAAlB;AAA8B,IAAA,WAAW,EAAEF;AAA3C,IADnB,EAEMR,QAAQ,IAAI,MAAC,KAAD,OAFlB,EAGMS,OAAO,IAAI,MAAC,OAAD,OAHjB,CADJ;AAOH,CAxCD;;AA0CA,IAAMsB,OAAgC,GAAG,SAAnCA,OAAmC;AAAA,SACrC;AAAK,IAAA,SAAS,EAAElC,GAAG,CAACkC;AAApB,KACI,MAAC,WAAD,OADJ,CADqC;AAAA,CAAzC;;AAOA,eAAezB,SAAf","sourcesContent":["import * as React from 'react'\n\nimport { NextPage } from 'next'\n\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\nimport Auth from '../../containers/Auth/Auth'\nimport Admin from '../../containers/Admin/Admin'\n\nconst css = require('./index.module.css')\n\ntype TAuthState = {\n    signedIn: boolean\n    email?: string\n    password?: string\n    idToken?: string\n}\n\ntype TAction = {\n    type: string\n    payload?: any\n}\n\nconst initialAuthState: TAuthState = {\n    signedIn: false\n}\n\nconst signIn = (state: TAuthState, action: TAction): TAuthState => {\n\n    return {\n        ...state\n    }\n}\n\nconst authReducer = (state: TAuthState, action: TAction): TAuthState => {\n    switch (action.type) {\n        case 'signin':\n            return { ...state }\n    \n        default:\n            return { ...state }\n    }\n}\n\n\nconst AdminPage: NextPage = (): JSX.Element => {\n    const [signedIn, setSignedIn] = React.useState<boolean>(false)\n    const [sending, setSending] = React.useState<boolean>(true)\n    const [screensize, setScreensize] = React.useState<{ width: number, height: number}>()\n\n    React.useEffect(() => {\n        document.title = 'Portfolio // Admin'\n\n        setScreensize({\n            width: window.innerWidth,\n            height: window.innerHeight\n        })\n\n        if (localStorage.length !== 0) {\n            // check for auth info in local storage\n            // compare current time in milliseconds to expire time in storage\n            // if current time is LESS, use the auth info from storage to refresh\n            // else, clear local storage\n            const expireTime = (localStorage.getItem('expireTime'))\n            if (expireTime) {\n                if (new Date().getTime() < +expireTime) {\n                    setSignedIn(true)\n                    setSending(false)\n                } else {\n                    localStorage.clear()\n                    setSending(false)\n                }\n            }\n        } else {\n            setSending(false)\n        }\n    }, [])\n\n    return (\n        <div className={css.Main} style={{minHeight: `${screensize?.height}px`, minWidth: `${screensize?.width}px`}}>\n            { !signedIn && <Auth setSending={setSending} setSignedIn={setSignedIn} /> }\n            { signedIn && <Admin /> }\n            { sending && <Loading /> }\n        </div>\n    )\n}\n\nconst Loading: React.FunctionComponent = (): JSX.Element => (\n    <div className={css.Loading}>\n        <CubeSpinner />\n    </div>\n)\n\n\nexport default AdminPage"]},"metadata":{},"sourceType":"module"}